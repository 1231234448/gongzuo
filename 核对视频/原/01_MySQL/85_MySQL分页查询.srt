1
00:00:00,000 --> 00:00:01,018
< No Speech >

2
00:00:01,018 --> 00:00:05,178
这节课我们再来讲解一下MySQL的分页查询

3
00:00:05,178 --> 00:00:10,458
那么分页查询是我们平时在MySQL当中去做数据查询当中

4
00:00:10,458 --> 00:00:13,498
用的非常多的一种查询方式

5
00:00:13,498 --> 00:00:17,098
那么什么是分页查询呢?它解决了什么问题呢?

6
00:00:17,098 --> 00:00:19,338
这里我们要先把它们搞清楚,对吧?

7
00:00:19,338 --> 00:00:21,178
那么什么是分页查询呢?

8
00:00:21,178 --> 00:00:25,566
分页查询其实指的就是在查询的结果集当中去取

9
00:00:25,566 --> 00:00:26,650
< No Speech >

10
00:00:26,650 --> 00:00:28,130
条数的数据

11
00:00:28,130 --> 00:00:29,010
明白这意思吧

12
00:00:29,010 --> 00:00:30,930
比如说我现在查询数据有1000条

13
00:00:30,930 --> 00:00:32,282
< No Speech >

14
00:00:32,282 --> 00:00:33,822
我只取钱

15
00:00:33,822 --> 00:00:35,130
< No Speech >

16
00:00:35,130 --> 00:00:36,930
那么这就叫分页查询

17
00:00:36,930 --> 00:00:38,398
那么为什么要这么做呢

18
00:00:39,386 --> 00:00:42,266
为了我们的界面

19
00:00:42,266 --> 00:00:43,266
大家想一下

20
00:00:43,266 --> 00:00:46,346
如果现在有1000条数据

21
00:00:46,346 --> 00:00:48,786
满足你的查询条件的数据有1000条

22
00:00:48,786 --> 00:00:50,746
那么这1000条数据全都拿出来

23
00:00:50,746 --> 00:00:51,934
在你的页面当中渲染

24
00:00:51,934 --> 00:00:52,986
< No Speech >

25
00:00:52,986 --> 00:00:54,334
那么这时候你会发现

26
00:00:54,334 --> 00:00:56,762
< No Speech >

27
00:00:56,762 --> 00:00:58,562
这个样式是非常难看的

28
00:00:58,562 --> 00:01:02,802
因为我们一般都会有一个表格来显示查询到的机构机

29
00:01:02,802 --> 00:01:04,402
然后由于数据量太大了

30
00:01:04,402 --> 00:01:06,206
你的表格的右侧会有个滚动条

31
00:01:06,938 --> 00:01:09,310
对吧 你数据量越多 滚动条

32
00:01:10,074 --> 00:01:12,474
滚动条的颗粒度越细

33
00:01:12,474 --> 00:01:14,074
所以你在看数据的时候也不方便

34
00:01:14,074 --> 00:01:16,074
还得拽着滚动条一点点往下看

35
00:01:16,074 --> 00:01:17,274
< No Speech >

36
00:01:17,274 --> 00:01:19,274
所以我们一般会怎么办呢?

37
00:01:19,274 --> 00:01:21,274
只取满足条件的。

38
00:01:21,274 --> 00:01:22,554
< No Speech >

39
00:01:22,554 --> 00:01:25,982
结果集的部分的数据拿到表格当中显示

40
00:01:26,970 --> 00:01:29,530
在表格当中有下一页下一页看到了吗

41
00:01:29,530 --> 00:01:33,850
当我们点击下一页时再去做数据下一页数据的查询

42
00:01:33,850 --> 00:01:34,558
再去取

43
00:01:35,482 --> 00:01:36,882
以部分的数据的查询

44
00:01:36,882 --> 00:01:37,722
以此类推

45
00:01:37,722 --> 00:01:38,750
每点一次

46
00:01:38,750 --> 00:01:40,506
< No Speech >

47
00:01:40,506 --> 00:01:44,026
数据查询并返回下面固定的一个条数

48
00:01:44,026 --> 00:01:44,506
对吧

49
00:01:44,506 --> 00:01:46,110
这就是分页查询

50
00:01:46,110 --> 00:01:47,418
< No Speech >

51
00:01:47,418 --> 00:01:51,418
好,我们来看一下分页查询的原则

52
00:01:51,418 --> 00:01:56,218
在MySQL数据库当中,它是使用Limit子句进行分页查询的

53
00:01:56,218 --> 00:02:00,018
MySQL分页查询当中,它的开始位置是从0开始的

54
00:02:00,018 --> 00:02:00,606
也就是说,在0开始的数据库当中,它的开始位置是从0开始的

55
00:02:01,402 --> 00:02:06,814
从第几条数据开始,从第一条数据开始,数据的数数是从0开始的

56
00:02:06,814 --> 00:02:09,530
< No Speech >

57
00:02:09,530 --> 00:02:13,850
分页子句在查询语句当中的最后撤

58
00:02:13,850 --> 00:02:15,810
也就是说我们limit子句

59
00:02:15,810 --> 00:02:18,590
肯定是出现在我们所有语句的最后撤的

60
00:02:19,450 --> 00:02:20,410
明白这意思吧

61
00:02:20,410 --> 00:02:21,770
原来我们最后撤的是谁

62
00:02:21,770 --> 00:02:22,650
是不是orderby的词句

63
00:02:22,650 --> 00:02:25,370
那么现在limit还要出现在orderby当中

64
00:02:25,370 --> 00:02:26,974
orderby的词句的后撤的

65
00:02:27,642 --> 00:02:28,862
这是固定的位置啊

66
00:02:29,562 --> 00:02:32,442
好,我们来看一下limit子句的一个语法

67
00:02:32,442 --> 00:02:34,442
首先你前面正常的查询

68
00:02:34,442 --> 00:02:36,942
slack的子句,from子句,value子句

69
00:02:36,942 --> 00:02:39,842
还有什么growby子句,having子句,orderby子句

70
00:02:39,842 --> 00:02:40,642
正常加

71
00:02:40,642 --> 00:02:42,942
当你把数据查询的语句都写完了

72
00:02:42,942 --> 00:02:44,442
最后想做分页处理时

73
00:02:44,442 --> 00:02:45,942
后面加一个limit子句

74
00:02:45,942 --> 00:02:48,542
然后这里要给定开始位置逗号

75
00:02:48,542 --> 00:02:50,202
< No Speech >

76
00:02:50,202 --> 00:02:52,922
也就是说在这个位置你要取多少条

77
00:02:52,922 --> 00:02:54,482
在下个位置你要取多少条

78
00:02:54,482 --> 00:02:56,042
只要你开始位置算好了

79
00:02:56,042 --> 00:02:57,082
那么取多少条

80
00:02:57,082 --> 00:02:59,134
它就根据你的查询数量去获取数据

81
00:03:00,058 --> 00:03:01,658
能明白这些吧同学们

82
00:03:01,658 --> 00:03:03,458
好我们来看一个实例

83
00:03:03,458 --> 00:03:07,158
比如说现在我要查询固原表当中所有数据ID

84
00:03:07,158 --> 00:03:11,422
按ID排序然后实现分页查询每次返回两条结果

85
00:03:11,422 --> 00:03:12,634
< No Speech >

86
00:03:12,634 --> 00:03:13,994
每次返回两条接管

87
00:03:13,994 --> 00:03:14,654
那怎么办?

88
00:03:14,654 --> 00:03:16,986
< No Speech >

89
00:03:16,986 --> 00:03:18,302
他说

90
00:03:19,194 --> 00:03:22,526
我们现在访问的是IT白站这个库吧 没有问题的

91
00:03:22,526 --> 00:03:23,770
< No Speech >

92
00:03:23,770 --> 00:03:26,110
IT百赞 这里不是有安普拉一表吗 是吧

93
00:03:26,618 --> 00:03:28,446
插旋,然后新建插旋

94
00:03:28,446 --> 00:03:32,378
< No Speech >

95
00:03:32,378 --> 00:03:35,454
然后查询的表是amplieid是吧

96
00:03:36,154 --> 00:03:39,274
select 然后呢,新投影所有的列是吧

97
00:03:39,274 --> 00:03:40,474
from employee

98
00:03:40,474 --> 00:03:41,994
然后呢没有任何条件

99
00:03:41,994 --> 00:03:44,194
然后他要求按employee id 排序

100
00:03:44,194 --> 00:03:45,246
收赔

101
00:03:45,246 --> 00:03:47,194
< No Speech >

102
00:03:47,194 --> 00:03:50,014
然后呢我们起个别名

103
00:03:50,014 --> 00:03:51,642
< No Speech >

104
00:03:51,642 --> 00:03:55,562
然后1.employeeid 对吧

105
00:03:55,562 --> 00:03:58,042
那么我现在查询返回的数据是多少条

106
00:03:58,042 --> 00:04:00,682
看一下107条 是吧

107
00:04:00,682 --> 00:04:03,162
107条 比如说这个数据量太大了

108
00:04:03,162 --> 00:04:06,962
我只想取前两条怎么办呢

109
00:04:06,962 --> 00:04:09,962
这里就要加limit子据了

110
00:04:09,962 --> 00:04:11,962
然后从第几条开始取呢

111
00:04:11,962 --> 00:04:13,762
从第0条开始 对吧

112
00:04:13,762 --> 00:04:16,254
他说他的条数的位置是从0开始查数的

113
00:04:16,254 --> 00:04:18,010
< No Speech >

114
00:04:18,010 --> 00:04:19,518
然后取多少条呢

115
00:04:19,518 --> 00:04:21,146
< No Speech >

116
00:04:21,146 --> 00:04:25,150
从0条开始1 2 返回就是100和101这两条数

117
00:04:25,786 --> 00:04:27,486
能没有这把同学吗?运行

118
00:04:28,346 --> 00:04:30,666
看到了吗?100 101这两条数据

119
00:04:30,666 --> 00:04:32,586
然后现在我想取下两条呢

120
00:04:32,586 --> 00:04:35,774
那就是01然后从2开始再取两条不变

121
00:04:36,698 --> 00:04:38,298
102 103 对吧

122
00:04:38,298 --> 00:04:40,222
然后再去取下两条呢

123
00:04:40,222 --> 00:04:42,970
< No Speech >

124
00:04:42,970 --> 00:04:44,670
往下加那就是400

125
00:04:45,626 --> 00:04:48,094
103开始104 105嘛

126
00:04:49,082 --> 00:04:52,162
那么这些把同学们所以你要把前面的这个

127
00:04:52,162 --> 00:04:53,626
< No Speech >

128
00:04:53,626 --> 00:04:56,306
从哪开始取,换算出来了就可以了

129
00:04:56,306 --> 00:05:00,146
那么它就会根据你给定的位置去做数据的条数的获取

130
00:05:00,146 --> 00:05:03,226
至于取多少条呢,看你等这个逗号后面的这个值

131
00:05:03,226 --> 00:05:07,998
这个值固定是不变的,比如说取10条,那就永远是取10条

132
00:05:07,998 --> 00:05:10,554
< No Speech >

133
00:05:10,554 --> 00:05:13,950
从第四条开始取十条,然后他第一条从0开始查数的

134
00:05:14,682 --> 00:05:18,462
好理解吧 这是使用Limit子句去做一个分页查询

135
00:05:19,354 --> 00:05:21,754
那么我们除了可以使用Limit子句以外

136
00:05:21,754 --> 00:05:24,754
我们还可以使用一个叫Limit of set的子句

137
00:05:24,754 --> 00:05:26,554
它俩其实功能是相同的

138
00:05:26,554 --> 00:05:31,294
只是在给定开始位置以及查询数量时是有变化的

139
00:05:31,930 --> 00:05:36,810
Limit是第一个,Limit后面直接给定的是开始位置多少查询数量

140
00:05:36,810 --> 00:05:40,798
而Limit offset是这样的,Limit后面给的是查询数量

141
00:05:41,402 --> 00:05:43,358
然后offset给的是cash位置

142
00:05:44,314 --> 00:05:45,874
这是它俩的一个区别

143
00:05:45,874 --> 00:05:46,754
我们看一下

144
00:05:46,754 --> 00:05:48,434
比如说现在查询固件表

145
00:05:48,434 --> 00:05:49,594
还是查询固件表当中

146
00:05:49,594 --> 00:05:50,994
所有ID按ID排序

147
00:05:50,994 --> 00:05:52,274
然后使用limit of set

148
00:05:52,274 --> 00:05:52,834
实现分页

149
00:05:52,834 --> 00:05:53,634
每次返回结果

150
00:05:53,634 --> 00:05:54,234
记得两条

151
00:05:54,234 --> 00:05:56,554
那么如果这个时候用limit of set

152
00:05:56,554 --> 00:05:57,278
怎么去做呢

153
00:05:57,278 --> 00:05:58,298
< No Speech >

154
00:05:58,298 --> 00:05:59,838
Limit后面给的是什么

155
00:06:00,602 --> 00:06:03,646
每次显示差多少条是吧 比如说我们还是差了两条

156
00:06:04,378 --> 00:06:08,478
空格后面加一个alphaset,然后后面给一个什么呢

157
00:06:09,370 --> 00:06:13,662
第几条开始取 比如从第0条开始 那就取前两条

158
00:06:14,202 --> 00:06:15,562
对吧 100 101

159
00:06:15,562 --> 00:06:17,982
然后取下两条 那它就变成了2

160
00:06:17,982 --> 00:06:19,802
< No Speech >

161
00:06:19,802 --> 00:06:23,442
102 103 对吧 101嘛 然后102 103

162
00:06:23,442 --> 00:06:27,006
再下两条 那就是4 那就是104 105

163
00:06:27,930 --> 00:06:29,210
推吧同学们

164
00:06:30,170 --> 00:06:33,214
给的这两个参数的顺序是有变化的

165
00:06:33,214 --> 00:06:34,298
< No Speech >

166
00:06:34,298 --> 00:06:39,418
后面直接跟的是从哪个位置开始取,逗号取多少条

167
00:06:39,418 --> 00:06:44,378
而limit offset是limit后面给的是取多少条,offset从哪取

168
00:06:44,378 --> 00:06:46,654
offset不是偏移量的意思吗?

169
00:06:47,450 --> 00:06:49,170
表示从哪个位置开始取

170
00:06:49,170 --> 00:06:51,134
这是它的一个设置篇一量的位置

171
00:06:51,962 --> 00:06:52,982
能明白同学们?

172
00:06:52,982 --> 00:06:56,142
所以呢我们可以使用Limit也可以使用LimitOffset

173
00:06:56,142 --> 00:06:57,002
你用哪个都可以

174
00:06:57,002 --> 00:06:58,442
这两个你记住一个就可以了

175
00:06:58,442 --> 00:07:00,402
但是实际上我们一般哪个用的多呢

176
00:07:00,402 --> 00:07:01,922
我们还是这个Limit用的多

177
00:07:01,922 --> 00:07:02,878
因为它比较好记

178
00:07:02,878 --> 00:07:03,962
< No Speech >

179
00:07:03,962 --> 00:07:06,842
对吧,它不用写两个关键字,一个limit就可以了

180
00:07:06,842 --> 00:07:09,882
后面开始位置多少查询数量给定就可以了

181
00:07:09,882 --> 00:07:11,774
剩下的动作是你怎么去换算

182
00:07:11,774 --> 00:07:13,434
< No Speech >

183
00:07:13,434 --> 00:07:16,542
每次点下一页时,这个插讯位置怎么换算的问题

184
00:07:17,306 --> 00:07:23,066
对吧同学们,这样我们就可以使用MySQL提供的Limit子句以及Limit of set子句

185
00:07:23,066 --> 00:07:27,106
来实现数据的分页查询

186
00:07:27,106 --> 00:07:31,906
当我们不想在一个界面显示很多的结果集时

187
00:07:31,906 --> 00:07:37,906
想用分页来处理时,那么这个时候我们就可以使用Limit子句或者是Limit of set子句

188
00:07:37,906 --> 00:07:40,426
好,我们来看一下实时效果反馈

189
00:07:40,426 --> 00:07:43,454
1. MySQL分页中开始位置

190
00:07:43,454 --> 00:07:44,602
< No Speech >

191
00:07:44,602 --> 00:07:47,998
它的开始位置的查数是从几开始查的

192
00:07:47,998 --> 00:07:51,002
< No Speech >

193
00:07:51,002 --> 00:07:54,202
A-1,B-0,C-1,D-10

194
00:07:54,202 --> 00:07:55,070
应该从哪个呢?

195
00:07:55,070 --> 00:07:56,538
< No Speech >

196
00:07:56,538 --> 00:07:58,430
从零开始查述的对吧

197
00:07:58,430 --> 00:08:02,650
< No Speech >

198
00:08:02,650 --> 00:08:04,638
在查询语句的什么位置

199
00:08:04,638 --> 00:08:10,202
< No Speech >

200
00:08:10,202 --> 00:08:11,582
Slick的子距后撤

201
00:08:12,538 --> 00:08:17,470
Limit 子句或者 Limit Offset 子句能出现在你的查询语句的任何位置吗?

202
00:08:18,266 --> 00:08:19,866
最前车吗?也不是的

203
00:08:19,866 --> 00:08:22,466
是slack子句的后车吗?也不是

204
00:08:22,466 --> 00:08:24,146
应该是哪啊?是你语句的

205
00:08:24,146 --> 00:08:25,982
是你长语句的最后车

206
00:08:26,522 --> 00:08:29,022
对吧?所以这道题的答案肯定是C

207
00:08:29,022 --> 00:08:30,718
好 那么我们来看下这两道题的答案

208
00:08:30,718 --> 00:08:32,474
< No Speech >

209
00:08:32,474 --> 00:08:34,074
是C 没有问题的

210
00:08:34,074 --> 00:08:38,874
好 同学们 那么以上我们就讲解了MySQL当中的分页查询的实现

211
00:08:38,874 --> 00:08:40,114
还是比较简单的

212
00:08:40,114 --> 00:08:41,438
好 那我们接下来开始了

