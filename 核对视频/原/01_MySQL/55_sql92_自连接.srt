1
00:00:00,000 --> 00:00:01,146
< No Speech >

2
00:00:01,146 --> 00:00:05,146
这节课我们再来讲解一下自连接查询

3
00:00:05,146 --> 00:00:07,226
那么什么是自连接查询呢?

4
00:00:07,226 --> 00:00:13,386
自连接查询其实指的就是自己连接自己的一种查询方式

5
00:00:13,386 --> 00:00:18,270
那么我们什么情况下会用表让他自己去连接自己呢?

6
00:00:18,270 --> 00:00:19,770
< No Speech >

7
00:00:19,770 --> 00:00:21,770
我们看一下安卜拉意表

8
00:00:21,770 --> 00:00:23,770
在安卜拉意表当中

9
00:00:23,770 --> 00:00:25,290
它有安卜拉意ID

10
00:00:25,290 --> 00:00:28,250
这是来记录员工ID的一个列

11
00:00:28,250 --> 00:00:28,970
对不对

12
00:00:28,970 --> 00:00:31,370
那么除了有安卜拉意ID以外

13
00:00:31,370 --> 00:00:34,730
在安卜拉意表当中还有一个叫manager的ID

14
00:00:34,730 --> 00:00:38,930
managerID是来存放员工的经理ID的

15
00:00:38,930 --> 00:00:40,930
那么大家想这样的一个问题

16
00:00:40,930 --> 00:00:43,850
员工是不是也是雇员

17
00:00:43,850 --> 00:00:44,170
对吧

18
00:00:44,170 --> 00:00:46,650
那他要把数据放到安卜拉意表当中

19
00:00:46,650 --> 00:00:48,850
经理是不是也是雇员

20
00:00:48,850 --> 00:00:49,570
对吧

21
00:00:49,570 --> 00:00:53,010
那么也说经理的数据也会放到安卜拉意表当中

22
00:00:53,010 --> 00:00:54,690
现在在安卜拉意表当中

23
00:00:54,690 --> 00:00:56,970
既有员工的ID也有经理的ID

24
00:00:56,970 --> 00:00:58,770
那么他们到底如何区分的呢

25
00:00:58,770 --> 00:01:02,890
就是通过managerID来区分谁是谁的经理的

26
00:01:02,890 --> 00:01:03,330
对吧

27
00:01:03,330 --> 00:01:09,570
那么现在我要想查询员工以及员工连同他们的经理是谁

28
00:01:09,570 --> 00:01:10,530
是同学们想想

29
00:01:10,530 --> 00:01:13,290
对于这样的一个查询我该怎么去做

30
00:01:13,290 --> 00:01:15,490
我肯定得用到自连接查询了

31
00:01:15,490 --> 00:01:15,970
对吧

32
00:01:15,970 --> 00:01:16,850
怎么做呢

33
00:01:16,850 --> 00:01:20,690
我用安卜拉意表把它作为一个雇员表

34
00:01:20,690 --> 00:01:23,530
然后我再去查询安卜拉意表

35
00:01:23,530 --> 00:01:25,210
让它作为经理表

36
00:01:25,210 --> 00:01:33,570
然后用雇员表的managerID去等值连接经理表的安卜拉意ID

37
00:01:33,570 --> 00:01:37,090
是不是就查到了这些雇员以及连同他们的经理是谁

38
00:01:37,090 --> 00:01:37,850
对吧

39
00:01:37,850 --> 00:01:39,690
那我现在查的仍然是两个表

40
00:01:39,690 --> 00:01:41,770
但是这两个表是同一个表

41
00:01:41,770 --> 00:01:46,370
而且用同一个表的不同的列来作为一个连接的条件

42
00:01:46,370 --> 00:01:47,970
这就是自连接查询

43
00:01:47,970 --> 00:01:49,490
明白吧

44
00:01:49,490 --> 00:01:50,090
老同学们

45
00:01:50,090 --> 00:01:51,130
就是这个意思

46
00:01:51,210 --> 00:01:52,650
这就是自连接查询

47
00:01:52,650 --> 00:01:53,210
好

48
00:01:53,210 --> 00:01:54,050
你看

49
00:01:54,050 --> 00:01:58,090
现在我把安卜拉意表作为一个工人表

50
00:01:58,090 --> 00:02:00,410
然后又把安卜拉意表作为经理表

51
00:02:00,410 --> 00:02:06,090
我用安卜拉意表的managerID去连接安卜拉意表的

52
00:02:06,090 --> 00:02:12,050
用它的managerID去等于它的安卜拉意ID

53
00:02:12,050 --> 00:02:15,490
是不是就查到了这些雇员他们的经理是谁

54
00:02:15,490 --> 00:02:18,570
所有的雇员连同他们的经理是谁

55
00:02:18,570 --> 00:02:19,490
是不是就查到了

56
00:02:19,490 --> 00:02:21,610
而且我现在查的都是同一个表

57
00:02:21,610 --> 00:02:23,650
只是用同一个表去自己连自己了

58
00:02:23,650 --> 00:02:24,610
查了两次

59
00:02:24,610 --> 00:02:25,050
是吧

60
00:02:25,050 --> 00:02:26,690
在一次当中做了两

61
00:02:26,690 --> 00:02:30,450
用了这个表自己连接自己去查了数据

62
00:02:30,450 --> 00:02:31,850
所以这就叫自连接

63
00:02:31,850 --> 00:02:32,690
明白这意思吧

64
00:02:32,690 --> 00:02:34,410
好

65
00:02:34,410 --> 00:02:35,450
我们看自连接

66
00:02:35,450 --> 00:02:37,530
连接一个表到他自己

67
00:02:37,530 --> 00:02:39,450
有时需要连接一个表到他自己

68
00:02:39,450 --> 00:02:41,610
为了找到每个雇员的经理的名字

69
00:02:41,610 --> 00:02:43,970
则需要连接安卜拉意表到他自己

70
00:02:43,970 --> 00:02:45,530
或执行一个自连接

71
00:02:45,530 --> 00:02:46,890
这就是自连接

72
00:02:46,890 --> 00:02:47,170
好

73
00:02:47,170 --> 00:02:47,890
我们来看

74
00:02:47,890 --> 00:02:49,610
连接一个表到他自身

75
00:02:49,610 --> 00:02:51,210
我们看在这个语句当中

76
00:02:51,210 --> 00:02:53,410
from后面是不是安卜拉意表

77
00:02:53,410 --> 00:02:54,490
然后叫worker

78
00:02:54,490 --> 00:02:55,890
逗号又一个安卜拉意

79
00:02:55,890 --> 00:02:57,810
其实这指的是同一个安卜拉意

80
00:02:57,810 --> 00:03:00,210
只是把这一个表看成了两部分

81
00:03:00,210 --> 00:03:01,170
一个是员工表

82
00:03:01,170 --> 00:03:02,930
一个是经理表

83
00:03:02,930 --> 00:03:03,730
明白这意思吧

84
00:03:03,730 --> 00:03:05,650
然后看v2条件

85
00:03:05,650 --> 00:03:07,530
worker的managerID

86
00:03:07,530 --> 00:03:12,330
就是员工的经理ID等于经理的员工ID

87
00:03:12,330 --> 00:03:16,330
这样是不是就找到了所有雇员的经理是谁

88
00:03:16,330 --> 00:03:16,890
对吧

89
00:03:16,890 --> 00:03:20,570
通过雇员的经理ID等于经理的雇员ID

90
00:03:20,570 --> 00:03:23,370
不就找到这些员工所对应的经理是谁了吗

91
00:03:23,370 --> 00:03:24,290
这很好理解吧

92
00:03:24,290 --> 00:03:25,170
对吧

93
00:03:25,170 --> 00:03:26,330
图片当中的例子

94
00:03:26,330 --> 00:03:28,850
连接安卜拉意识表到他自己

95
00:03:28,850 --> 00:03:32,690
为了在from子句当中模拟两个表

96
00:03:32,690 --> 00:03:36,170
对于相同表的安卜拉意识用两个表别名

97
00:03:36,170 --> 00:03:38,650
同学们这一点需要注意

98
00:03:38,650 --> 00:03:41,150
我们在使用自连接时

99
00:03:41,150 --> 00:03:42,330
< No Speech >

100
00:03:42,330 --> 00:03:47,530
表别名的起名将变得非常重要

101
00:03:47,530 --> 00:03:48,530
为什么这么说呢

102
00:03:48,530 --> 00:03:51,130
因为字连接是用的同一个表

103
00:03:51,530 --> 00:03:52,090
对吧

104
00:03:52,130 --> 00:03:54,130
那么你在起别名的时候

105
00:03:54,130 --> 00:03:56,250
这个别名必须要有意义

106
00:03:56,250 --> 00:03:58,290
否则你自己都不知道它代表着什么

107
00:03:58,330 --> 00:03:59,730
你像我这个案例当中的

108
00:03:59,730 --> 00:04:00,650
employee

109
00:04:01,090 --> 00:04:01,770
work

110
00:04:01,970 --> 00:04:02,490
是吧

111
00:04:02,490 --> 00:04:03,210
员工

112
00:04:03,210 --> 00:04:04,602
< No Speech >

113
00:04:04,602 --> 00:04:09,482
Manager经理 我们通过这个表明可以直接的知道

114
00:04:09,482 --> 00:04:11,722
这个安普拉伊表代表的什么

115
00:04:11,722 --> 00:04:13,282
这个安普拉伊表代表的什么

116
00:04:13,282 --> 00:04:15,482
那么未来我们在给条件的时候就知道了

117
00:04:15,482 --> 00:04:19,362
该用谁的ManagerID等于谁的安普拉伊ID了

118
00:04:19,362 --> 00:04:20,762
是吧同学们

119
00:04:20,762 --> 00:04:22,882
所以这个别名一定要起的有意义

120
00:04:22,882 --> 00:04:25,162
或者你用W用M来标识也可以

121
00:04:25,162 --> 00:04:27,442
就不要用A B就不好了

122
00:04:27,442 --> 00:04:30,242
A B并不能体现出这两个别名的特点

123
00:04:30,242 --> 00:04:31,162
OK

124
00:04:31,162 --> 00:04:36,042
然后相对于相同的安普拉伊表用两个别名

125
00:04:36,042 --> 00:04:37,602
分别为Worker和Manager

126
00:04:37,602 --> 00:04:38,762
在该列当中

127
00:04:38,762 --> 00:04:43,842
VAL子句包含这链接意味着一个工人的经理号

128
00:04:43,842 --> 00:04:46,242
匹配该经理的雇员号

129
00:04:46,242 --> 00:04:51,122
一个雇员的经理号匹配该经理的雇员号

130
00:04:51,122 --> 00:04:53,482
这不就找到这个雇员的经理是谁了吗

131
00:04:53,482 --> 00:04:53,882
对吧

132
00:04:53,882 --> 00:04:55,002
这就是自连接

133
00:04:55,002 --> 00:04:55,882
好

134
00:04:55,882 --> 00:04:57,042
我们来看一个事例

135
00:04:57,042 --> 00:05:02,642
事例要求查询每个雇员的经理的名字以及雇员的名字

136
00:05:02,642 --> 00:05:06,482
雇员名字列为W

137
00:05:06,482 --> 00:05:08,734
经理的列别名为M

138
00:05:09,530 --> 00:05:12,730
对吧好我们来写这样的一个查询

139
00:05:12,730 --> 00:05:15,066
< No Speech >

140
00:05:15,066 --> 00:05:18,910
selector from where

141
00:05:18,910 --> 00:05:19,994
< No Speech >

142
00:05:19,994 --> 00:05:26,314
对吧 好 我们先看from 现在我们要查的这些数据 经理跟雇员都来源于employee表

143
00:05:26,314 --> 00:05:32,794
那肯定要用一个自连接了 是吧 然后我们先定义一个员工表 员工表我们叫worker

144
00:05:32,794 --> 00:05:38,554
然后还有一个employee 再来一个employee 他叫什么呢 manager 经理 可以吧

145
00:05:38,554 --> 00:05:43,006
然后什么连接条件呢 是不是应该用worker的

146
00:05:43,866 --> 00:05:52,986
Worker的managerid 员工的经理id 等于经理的经理表的员工id

147
00:05:52,986 --> 00:05:56,386
这不就找到雇员的经理是谁了吗 对不对

148
00:05:56,386 --> 00:06:00,706
然后他要什么呢 要雇员的名字跟经理的名字是不是

149
00:06:00,706 --> 00:06:06,706
那就是worker.lastname 然后起名w 对吧

150
00:06:06,706 --> 00:06:09,246
然后 manager

151
00:06:09,914 --> 00:06:11,422
点儿 last name

152
00:06:12,346 --> 00:06:14,946
这是他经理的名字,而起名叫M

153
00:06:14,946 --> 00:06:17,346
对吧?这样就可以了,我们运行

154
00:06:17,346 --> 00:06:20,386
看到了吗?这是员工,他的经理

155
00:06:20,386 --> 00:06:24,186
这是员工,他的经理,说明Tim这个经理他有两个雇员

156
00:06:24,186 --> 00:06:25,310
看到了吗?

157
00:06:25,310 --> 00:06:26,618
< No Speech >

158
00:06:26,618 --> 00:06:32,498
经理以及经理所对应的雇员就都查询出来了 明白这意思吧 这用的就是自连接来实现的

159
00:06:32,498 --> 00:06:34,498
好 我们再来看10.2

160
00:06:34,498 --> 00:06:35,610
< No Speech >

161
00:06:35,610 --> 00:06:40,410
是第二是查询fox的经理是谁显示他的名字

162
00:06:40,410 --> 00:06:43,250
fox是员工他是雇员的名字

163
00:06:43,250 --> 00:06:46,210
那么又是查雇员以及雇员的经理

164
00:06:46,210 --> 00:06:48,330
不同的是这里要加了一个

165
00:06:48,330 --> 00:06:52,050
在这些雇员当中就去查fox这个雇员了

166
00:06:52,050 --> 00:06:52,850
对不对

167
00:06:52,850 --> 00:06:57,530
那么其实我们就在刚才的案例当中再加条件是不是就可以了

168
00:06:57,530 --> 00:06:59,850
加一个and

169
00:06:59,850 --> 00:07:01,770
and什么条件呢

170
00:07:01,770 --> 00:07:06,610
雇员的名字worker.lastname

171
00:07:07,578 --> 00:07:09,978
lastname等于谁呢?

172
00:07:09,978 --> 00:07:10,718
AI。 focus

173
00:07:10,718 --> 00:07:13,466
< No Speech >

174
00:07:13,466 --> 00:07:17,466
对吧同学们,这样就可以了,我们运行,看到了吗?

175
00:07:17,466 --> 00:07:19,466
Fox的经理是他

176
00:07:19,466 --> 00:07:27,306
这样我们就通过表的自连接方式,完成了对于雇员跟经理的查询

177
00:07:27,306 --> 00:07:30,746
以及Fox经理是谁的这样的一个查询

178
00:07:30,746 --> 00:07:32,958
好,我们看一下实时效果反馈

179
00:07:32,958 --> 00:07:34,042
< No Speech >

180
00:07:34,042 --> 00:07:44,362
如下描述自连接正确的是 A,一个表不允许自己连接自己

181
00:07:44,362 --> 00:07:45,434
< No Speech >

182
00:07:45,434 --> 00:07:50,314
然后链接一个表到他自己就是自连接

183
00:07:50,314 --> 00:07:54,034
C,自连接不能有链接条件

184
00:07:54,034 --> 00:07:56,914
D,自连接不能使用VAL子据

185
00:07:56,914 --> 00:08:00,234
那么下面的说法,自连接的描述

186
00:08:00,234 --> 00:08:03,554
对于自连接的描述哪个是正确的呢?同学们考虑一下

187
00:08:03,554 --> 00:08:08,714
很显然是B,链接一个表到他自己就是自连接

188
00:08:08,714 --> 00:08:11,794
A肯定是不对的,一个表不允许自己连接自己

189
00:08:11,794 --> 00:08:14,154
谁说的?自连接不就是为了解决这个问题的嘛

190
00:08:14,154 --> 00:08:17,514
C,自连接不能有链接条件,肯定不是的

191
00:08:17,514 --> 00:08:19,994
你没有链接条件,那就是迪卡尔乘积了

192
00:08:19,994 --> 00:08:22,782
自连接不给链接条件同样会产生迪卡尔乘积

193
00:08:22,782 --> 00:08:24,634
< No Speech >

194
00:08:24,634 --> 00:08:26,474
这连接中不能有外遥子距

195
00:08:26,474 --> 00:08:28,914
你不给外遥子距怎么去做连接条件的给定

196
00:08:28,914 --> 00:08:30,074
所以这肯定也是不对的

197
00:08:30,074 --> 00:08:31,358
那正确的答案就是

198
00:08:31,358 --> 00:08:33,466
< No Speech >

199
00:08:33,466 --> 00:08:36,866
好 同学们 那么这节课我们就到这

