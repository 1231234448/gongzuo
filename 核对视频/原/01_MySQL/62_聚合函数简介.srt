1
00:00:00,000 --> 00:00:01,114
< No Speech >

2
00:00:01,114 --> 00:00:06,514
从这一课开始,我们再来讲解一下MySQL当中的聚合函数

3
00:00:06,514 --> 00:00:10,114
那么我们之前在讲解MySQL函数的时候我们说了

4
00:00:10,114 --> 00:00:12,034
函数是分为两大类的

5
00:00:12,034 --> 00:00:15,994
第一大类是单行函数,第二大类是多行函数

6
00:00:15,994 --> 00:00:23,834
那么单行函数包含了像字符函数、数字函数、日期函数、通用函数、转换函数

7
00:00:23,834 --> 00:00:25,634
这些都是单行函数,对吧

8
00:00:25,634 --> 00:00:30,354
那么接下来我们所讲的这个聚合函数其实就是多行函数

9
00:00:30,354 --> 00:00:33,274
多行函数也称之为聚合函数

10
00:00:33,274 --> 00:00:36,634
好,那我们先来看一下聚合函数的介绍

11
00:00:36,634 --> 00:00:42,234
聚合函数跟单行函数是有本质区别的,这一点同学们一定要注意

12
00:00:42,234 --> 00:00:43,546
< No Speech >

13
00:00:43,546 --> 00:00:49,186
是会对每一个行,我们查到的每一行的结果集去做处理

14
00:00:49,186 --> 00:00:52,306
并且都会返回一个处理后的结果

15
00:00:52,306 --> 00:00:54,186
这是单行函数的特点,对吧

16
00:00:54,186 --> 00:00:57,946
那么聚合函数或者多行函数则不是这样的

17
00:00:57,946 --> 00:01:04,506
聚合函数是必须要对数据分组去做处理的一个函数

18
00:01:04,506 --> 00:01:10,986
并且会对,会为这个数据分组返回一个结果集

19
00:01:10,986 --> 00:01:16,706
那么我们想,数据分组是不是里面会包含很多数据

20
00:01:16,706 --> 00:01:22,986
那么它在处理多条数据时,它会返回一个结果

21
00:01:22,986 --> 00:01:25,866
这就是单行函数跟聚合函数的一个区别

22
00:01:25,866 --> 00:01:30,186
明白这一次吧,聚合函数一定是作用在数据分组的基础之上的

23
00:01:30,186 --> 00:01:32,386
好,我们来看一下聚合函数

24
00:01:32,386 --> 00:01:37,266
聚合函数也称之为多行函数、组函数或者分组函数

25
00:01:37,266 --> 00:01:42,586
只要以后再说到什么组函数、分组函数,你都应该知道它其实指的就是聚合函数

26
00:01:42,586 --> 00:01:45,306
那么聚合函数它不像单行函数

27
00:01:45,306 --> 00:01:48,826
聚合函数会对行的分组进行操作

28
00:01:48,826 --> 00:01:50,466
这个我们刚刚已经说过了,是吧

29
00:01:50,466 --> 00:01:53,986
它势必是运行在数据分组的基础之上的

30
00:01:53,986 --> 00:01:56,586
对每组给出一个结果

31
00:01:56,586 --> 00:01:58,386
我们看这个图就是这样的

32
00:01:58,386 --> 00:02:03,666
现在它会对这个数据,这一部分都是一个大的分组

33
00:02:03,666 --> 00:02:05,866
然后对这些大的分组去做一个结果

34
00:02:05,866 --> 00:02:07,026
你看这个需求是什么

35
00:02:07,026 --> 00:02:10,706
是在安普拉意表当中找出最高的薪水

36
00:02:10,706 --> 00:02:14,226
那么它所查询到的这些结果集就是一个组

37
00:02:14,226 --> 00:02:18,066
然后在这个组里找出最高的那个薪水,24000的

38
00:02:18,066 --> 00:02:20,626
你看它作用在多条数据上

39
00:02:20,626 --> 00:02:22,866
但是它返回唯一的一个结果

40
00:02:22,866 --> 00:02:23,826
返回一个结果

41
00:02:23,826 --> 00:02:24,826
明白这些是吧

42
00:02:24,826 --> 00:02:27,066
这就是聚合函数的特点

43
00:02:27,066 --> 00:02:30,666
那么如果在查询中没有指定分组

44
00:02:30,666 --> 00:02:34,986
我们是可以通过这个关键字或者其他的语句

45
00:02:34,986 --> 00:02:38,226
其他的子句来为数据创建分组的

46
00:02:38,226 --> 00:02:42,306
那么如果我们在查询当中没有去创建分组怎么办呢

47
00:02:42,306 --> 00:02:46,186
那么这个时候聚合函数会将你查询到的所有的结果

48
00:02:46,186 --> 00:02:47,506
视为一组

49
00:02:47,506 --> 00:02:48,706
这就是个例子

50
00:02:48,706 --> 00:02:51,186
比如说现在我查安普拉意表所有的数据

51
00:02:51,186 --> 00:02:53,106
去找出它的最高薪水

52
00:02:53,106 --> 00:02:55,146
那么现在你查到的所有数据

53
00:02:55,146 --> 00:02:58,306
你在查询当中并没有指定对数据做如何分组

54
00:02:58,306 --> 00:03:00,666
那么这个时候max这个函数

55
00:03:00,666 --> 00:03:03,466
它会把你查到的所有结果集视为一个分组

56
00:03:03,466 --> 00:03:06,946
然后在这个分组里去找出最大的那个工资

57
00:03:06,946 --> 00:03:08,186
< No Speech >

58
00:03:08,186 --> 00:03:11,626
最大公司数,明白这些什么东西吗?一定要体会到这一点

59
00:03:11,626 --> 00:03:15,546
好,那我们来看一下聚合函数类型

60
00:03:15,546 --> 00:03:19,386
聚合函数呢它分为比较常见的有这么五种类型

61
00:03:19,386 --> 00:03:22,266
一个是AVG求平均值的,一个是Count计数的

62
00:03:22,266 --> 00:03:25,146
一个是Max最大,一个是Min最小,一个是Sub和G的

63
00:03:25,146 --> 00:03:29,226
这是我们最常见的五种这个聚合函数

64
00:03:29,226 --> 00:03:32,186
好,我们来看一下这五种聚合函数的一个说明

65
00:03:32,186 --> 00:03:34,906
AVG呢这个大家应该并不陌生了是吧

66
00:03:34,906 --> 00:03:38,666
它的作用呢就是来计算给定的值的一个平均值的

67
00:03:38,666 --> 00:03:43,226
为多行去算,为这个数据分组去做平均值处理的

68
00:03:43,226 --> 00:03:46,826
明白这个意思吧?然后呢Count呢是做计数的

69
00:03:46,826 --> 00:03:49,546
你现在这个分组里包含了多少条数据

70
00:03:49,546 --> 00:03:51,546
明白吧?它是做一个计数的处理

71
00:03:51,546 --> 00:03:55,386
然后Max呢找最大的,Min找最小的,Sub呢是求和的

72
00:03:55,386 --> 00:03:58,666
明白这个意思吧?这是这五个函数的一个作用

73
00:03:58,666 --> 00:04:01,786
好,那我们来看一下聚合函数使用的一个语法

74
00:04:01,786 --> 00:04:06,106
聚合函数呢我们是在select子句后面对列投影时

75
00:04:06,106 --> 00:04:10,746
将使用聚合函数来作为一个对某一个指定列的内容

76
00:04:10,746 --> 00:04:12,906
去做聚合函数的处理的

77
00:04:12,906 --> 00:04:15,902
明白这个意思吧?比如说我们上面这个图

78
00:04:16,730 --> 00:04:24,410
我们现在想在查询员工当中啊薪水最多的薪水最多的那个员工啊

79
00:04:24,410 --> 00:04:27,050
那个薪水最多的那个薪水是多少怎么办

80
00:04:27,050 --> 00:04:29,210
我们是不是得先查到所有员工呢

81
00:04:29,210 --> 00:04:30,330
那就是slack他

82
00:04:30,330 --> 00:04:35,530
然后from employee这块呢我们是不是可以用employeeid或者是salary对不对

83
00:04:35,530 --> 00:04:39,050
那现在我要想求薪水最高的那个

84
00:04:39,050 --> 00:04:42,890
那我就把salary放到什么max当中

85
00:04:42,890 --> 00:04:44,570
这样呢在查询时

86
00:04:44,570 --> 00:04:48,490
我们查到的所有的结果集max会作为一个分组来看待

87
00:04:48,490 --> 00:04:51,450
在这些结果集当中找到最高的那个

88
00:04:51,450 --> 00:04:52,170
对不对

89
00:04:52,170 --> 00:04:55,290
所以他出现的位置是在slack的子句的后面

90
00:04:55,290 --> 00:04:56,250
ok

91
00:04:56,250 --> 00:04:59,290
好我们再来看一下使用聚合函数的原则

92
00:04:59,290 --> 00:05:01,530
我们可以使用在这个聚合函数当中

93
00:05:01,530 --> 00:05:03,610
我们可以加这个distinct关键字

94
00:05:03,610 --> 00:05:05,770
来使得函数只考虑不重复的值

95
00:05:05,770 --> 00:05:09,290
比如说我现在去做聚合函数处理的这个列

96
00:05:09,290 --> 00:05:10,810
它的值是有重复的

97
00:05:10,810 --> 00:05:13,130
那我们可以使用distinct去剔除重复

98
00:05:13,130 --> 00:05:14,410
明白这一次吧

99
00:05:14,410 --> 00:05:16,410
那这个distinct加到哪呢

100
00:05:16,410 --> 00:05:18,410
加到我们聚合函数当中

101
00:05:18,410 --> 00:05:20,250
聚合函数它都有一个参数

102
00:05:20,250 --> 00:05:21,130
是有两个参数的

103
00:05:21,130 --> 00:05:23,130
第一个参数是distinct的关键字

104
00:05:23,130 --> 00:05:25,450
后面是你的column name或者是表达式

105
00:05:25,450 --> 00:05:26,650
明白这一次吧

106
00:05:26,650 --> 00:05:30,010
然后呢所有的聚合函数都忽略空值

107
00:05:30,010 --> 00:05:31,930
我们在使用聚合函数处理的时候

108
00:05:31,930 --> 00:05:34,970
如果我们的这个列当中有空值的话

109
00:05:34,970 --> 00:05:36,250
它会忽略空值

110
00:05:36,250 --> 00:05:40,410
那么为了解决这个忽略空值的问题

111
00:05:40,410 --> 00:05:43,130
我们可以用一个值去代替空值怎么办呢

112
00:05:43,130 --> 00:05:45,050
我们可以用这个ifnum还记得吗

113
00:05:45,050 --> 00:05:47,050
ifnum是需要两个参数的

114
00:05:47,050 --> 00:05:47,770
对吧

115
00:05:47,770 --> 00:05:50,490
当第一个参数不为空时返回第一个参数的值

116
00:05:50,490 --> 00:05:52,970
当第一个参数为空时返回第二个参数的值

117
00:05:52,970 --> 00:05:53,530
是不是

118
00:05:53,530 --> 00:05:56,090
或者是用这个col-list函数

119
00:05:56,090 --> 00:05:58,010
去做这个非空的一个

120
00:05:58,010 --> 00:05:59,290
空的这样的一个判断

121
00:05:59,290 --> 00:06:00,010
明白这一次吧

122
00:06:00,010 --> 00:06:01,850
就可以解决空值的问题

123
00:06:01,850 --> 00:06:02,490
OK

124
00:06:02,490 --> 00:06:04,570
好这是聚合函数使用的一个原则

125
00:06:04,570 --> 00:06:07,130
好我们再来看一下实时效果反馈

126
00:06:07,130 --> 00:06:08,650
聚合函数呢

127
00:06:08,650 --> 00:06:11,130
它是对行的什么进行操作

128
00:06:11,130 --> 00:06:13,210
并给出什么结果

129
00:06:13,210 --> 00:06:14,330
我们看A

130
00:06:14,330 --> 00:06:17,770
聚合函数是对行的分组进行操作

131
00:06:17,770 --> 00:06:19,930
并给出多个结果

132
00:06:19,930 --> 00:06:21,530
我们再来看B

133
00:06:21,530 --> 00:06:24,570
聚合函数是对行的分组进行操作

134
00:06:24,570 --> 00:06:26,570
并给出一个结果

135
00:06:26,570 --> 00:06:27,770
我们再来看C

136
00:06:27,770 --> 00:06:30,970
聚合函数是对行的单条进行操作

137
00:06:30,970 --> 00:06:32,650
并给出多个结果

138
00:06:32,650 --> 00:06:33,130
是吧

139
00:06:33,130 --> 00:06:36,570
D是聚合函数是对行的单条进行操作

140
00:06:36,570 --> 00:06:38,250
并给出一个结果

141
00:06:38,250 --> 00:06:40,010
那么这四个选项当中

142
00:06:40,010 --> 00:06:41,930
正确的答案应该是哪个呢

143
00:06:41,930 --> 00:06:43,450
很显然是B

144
00:06:43,450 --> 00:06:43,850
对吧

145
00:06:43,850 --> 00:06:47,050
聚合函数是对行的分组进行操作的

146
00:06:47,050 --> 00:06:49,450
并给出一个结果集

147
00:06:49,450 --> 00:06:49,930
对吧

148
00:06:49,930 --> 00:06:51,610
为这一组去做数据处理

149
00:06:51,610 --> 00:06:53,690
并且产生一个结果集

150
00:06:53,690 --> 00:06:55,370
对这一组的一个结果集

151
00:06:55,370 --> 00:06:56,730
明白这些吧同学们

152
00:06:56,730 --> 00:06:58,890
所以这个答案应该是B

153
00:06:58,890 --> 00:06:59,610
好同学们

154
00:06:59,610 --> 00:07:01,930
这节课我们主要是先来了解一下

155
00:07:01,930 --> 00:07:03,610
什么是聚合函数

156
00:07:03,610 --> 00:07:06,014
好 那我们这节课就到这

