1
00:00:00,314 --> 00:00:01,814
Hello 小伙伴大家好

2
00:00:01,814 --> 00:00:05,314
这些课我们来学习Rookieper的一些服务的管理

3
00:00:05,314 --> 00:00:09,234
这个服务的管理里边我们学习Rookieper的服务该如何启动

4
00:00:09,234 --> 00:00:10,514
该如何停止

5
00:00:10,514 --> 00:00:14,834
以及Rookieper的服务我们该可以看到它哪些具体的信息

6
00:00:14,834 --> 00:00:19,354
以及我们该如何高效的去管理Rookieper的服务

7
00:00:19,354 --> 00:00:21,594
首先打开我们的插项

8
00:00:21,594 --> 00:00:25,474
在这个插项中之前我们搭建了Rookieper的机缺了

9
00:00:25,474 --> 00:00:27,154
我们可以在并目录中

10
00:00:27,154 --> 00:00:30,994
我们可以看到这块有好多好多的可执行的一些命令

11
00:00:30,994 --> 00:00:36,234
比如说这个zkcli它则代表的是一个简单的客户端的一个程序

12
00:00:36,234 --> 00:00:38,494
比如说这个zkclient

13
00:00:38,494 --> 00:00:39,578
< No Speech >

14
00:00:39,578 --> 00:00:42,898
up,这个代表的是我们要清理的一个什么呢

15
00:00:42,898 --> 00:00:44,818
RuKeyper的一个历史数据啊

16
00:00:44,818 --> 00:00:47,258
比如说包括一些失误的日志文件呀

17
00:00:47,258 --> 00:00:48,898
一些快照数据文件呀

18
00:00:48,898 --> 00:00:51,578
我们可以通过这个命令呢来进行一个清理

19
00:00:51,578 --> 00:00:54,338
当然了还有一个叫ZKENV

20
00:00:54,338 --> 00:00:58,778
这代表的是我们可以通过它来设置RuKeyper的一个环境变量

21
00:00:58,778 --> 00:01:02,298
下边呢还有一个叫ZKService.sh

22
00:01:02,298 --> 00:01:04,578
这个代表的是我们RuKeyper的服务

23
00:01:04,578 --> 00:01:06,698
我们之前呢我们要启动RuKeyper的服务呢

24
00:01:06,698 --> 00:01:11,098
我们就可以通过ZKService.sh

25
00:01:11,098 --> 00:01:14,578
如果是start则代表的是RuKeyper的服务启动啊

26
00:01:14,578 --> 00:01:19,138
如果说是stop则代表的是停止这个RuKeyper的一个服务

27
00:01:19,138 --> 00:01:26,258
那如果说status则代表的是我们要看这个RuKeyper的一个服务的具体的一个信息

28
00:01:26,258 --> 00:01:28,138
我们可以看到当前的这个节点呢

29
00:01:28,138 --> 00:01:29,338
他是一个follower啊

30
00:01:29,338 --> 00:01:30,938
是一个随从者

31
00:01:30,938 --> 00:01:31,338
当然了

32
00:01:31,338 --> 00:01:36,898
我们可以通过叫restart来重新启动我们这个RuKeyper的一个服务

33
00:01:36,898 --> 00:01:38,538
但是啊有一个问题

34
00:01:38,538 --> 00:01:40,298
我们每次在执行这个命令的时候

35
00:01:40,298 --> 00:01:42,458
我们是不是必须得在干嘛呢

36
00:01:42,458 --> 00:01:45,098
就是这个路径下是不是才能执行这个命令

37
00:01:45,098 --> 00:01:45,938
太麻烦了

38
00:01:45,938 --> 00:01:47,458
那我每次要启动RuKeyper的服务呢

39
00:01:47,458 --> 00:01:48,658
我还得在这个路径下

40
00:01:48,658 --> 00:01:49,098
所以说呢

41
00:01:49,098 --> 00:01:50,458
我们接下来要做的呢

42
00:01:50,458 --> 00:01:53,898
是配置一个RuKeyper的一个环境变量

43
00:01:53,898 --> 00:01:55,538
我们配置完环境变量之后呢

44
00:01:55,538 --> 00:01:59,018
我们就可以在任何目录里边去执行什么呢

45
00:01:59,018 --> 00:02:00,138
这个命令了啊

46
00:02:00,138 --> 00:02:00,378
OK

47
00:02:00,378 --> 00:02:02,258
我们来看看环境变量该如何去做

48
00:02:02,258 --> 00:02:03,698
那既然是三台计算机

49
00:02:03,698 --> 00:02:05,698
我们需要给这三台计算机呢

50
00:02:05,698 --> 00:02:07,298
都来配置一个环境变量

51
00:02:07,298 --> 00:02:07,658
所以说呢

52
00:02:07,658 --> 00:02:10,818
我们可以点击这个工具里边有个一键发送

53
00:02:10,818 --> 00:02:11,298
在这块呢

54
00:02:11,298 --> 00:02:11,998
我们来

55
00:02:12,538 --> 00:02:15,378
针对这个EDC profile这个文件

56
00:02:15,378 --> 00:02:17,218
我们能添加一个环境变量

57
00:02:17,218 --> 00:02:18,618
在这块我们按O

58
00:02:18,618 --> 00:02:21,858
EXPORT我们来添加一个变量

59
00:02:21,858 --> 00:02:23,178
叫rookeeper

60
00:02:23,178 --> 00:02:25,098
ZOOKEEPER

61
00:02:25,098 --> 00:02:25,858
rookeeper

62
00:02:25,858 --> 00:02:26,738
它在哪个位置

63
00:02:26,858 --> 00:02:29,098
在USR下边的local

64
00:02:29,098 --> 00:02:30,578
下边的rookeeper

65
00:02:30,898 --> 00:02:31,578
OK

66
00:02:31,578 --> 00:02:33,338
我们的变量我们设置好了

67
00:02:33,338 --> 00:02:35,338
我们需要加到我们的环境变量里边

68
00:02:35,338 --> 00:02:37,498
我们通过dollar的这种方式

69
00:02:37,498 --> 00:02:39,538
获取到这个rookeeper

70
00:02:39,538 --> 00:02:41,458
ZOOKEEPER

71
00:02:41,458 --> 00:02:42,418
下滑线

72
00:02:42,418 --> 00:02:44,258
home我们少放了一个home

73
00:02:44,258 --> 00:02:44,778
是不是

74
00:02:44,778 --> 00:02:46,458
然后下滑线

75
00:02:46,458 --> 00:02:47,018
home

76
00:02:47,018 --> 00:02:49,498
就是rookeeper的一个加目录

77
00:02:49,498 --> 00:02:51,658
然后我们是bin这个目录

78
00:02:51,658 --> 00:02:53,578
我们把这个目录是配进去了

79
00:02:53,578 --> 00:02:55,858
接下来我们再使用sauce

80
00:02:55,858 --> 00:02:57,578
斜格ETC profile

81
00:02:57,578 --> 00:02:59,898
让我们环境变量生效

82
00:03:00,498 --> 00:03:02,778
这个时候我们再去执行

83
00:03:03,018 --> 00:03:05,938
比如说我们去到了一个obt的目录中

84
00:03:06,218 --> 00:03:06,818
在这个目录中

85
00:03:06,938 --> 00:03:08,138
我们也可以执行什么

86
00:03:08,258 --> 00:03:09,578
ZK service

87
00:03:10,258 --> 00:03:11,738
比如说status

88
00:03:11,738 --> 00:03:13,778
我们可以看到我们环境变量

89
00:03:13,778 --> 00:03:14,538
可以看到

90
00:03:14,698 --> 00:03:17,138
rookeeper服务的一个具体的信息

91
00:03:17,138 --> 00:03:19,218
我们看每台计算机都有

92
00:03:19,218 --> 00:03:19,658
这个时候

93
00:03:19,658 --> 00:03:21,338
在代表的是我们环境变量

94
00:03:21,338 --> 00:03:22,138
都配好了

95
00:03:22,138 --> 00:03:26,738
但是比如说我们需要停止一下

96
00:03:26,738 --> 00:03:28,258
我们rookeeper的服务

97
00:03:28,258 --> 00:03:31,658
但是我们是不是需要在第一台计算机里边

98
00:03:31,818 --> 00:03:33,218
我们执行一个什么

99
00:03:33,458 --> 00:03:36,418
ZK service.sh stop

100
00:03:36,618 --> 00:03:37,738
第二台需要停止

101
00:03:37,738 --> 00:03:38,898
我又要在第二台里边

102
00:03:38,898 --> 00:03:40,658
执行个ZK service.stop

103
00:03:40,658 --> 00:03:42,298
第三台我们还需要停止

104
00:03:42,298 --> 00:03:43,418
在ZK service.sh

105
00:03:43,418 --> 00:03:44,298
太麻烦了

106
00:03:44,538 --> 00:03:46,018
当前我们只有三个节点

107
00:03:46,178 --> 00:03:47,578
如果说我们有9个节点

108
00:03:47,578 --> 00:03:47,978
是吧

109
00:03:47,978 --> 00:03:48,818
11个节点的时候

110
00:03:48,818 --> 00:03:49,898
我们该如何停止

111
00:03:49,898 --> 00:03:51,378
只能一台一台停止吗

112
00:03:51,418 --> 00:03:52,218
太麻烦了

113
00:03:52,418 --> 00:03:54,178
我们该如何高效的去管理

114
00:03:54,738 --> 00:03:56,538
我们可以去编写一个什么

115
00:03:56,898 --> 00:03:57,898
集群的脚本

116
00:03:57,898 --> 00:03:59,538
但是我们来看一下

117
00:03:59,538 --> 00:04:01,218
在rookeeper中

118
00:04:01,578 --> 00:04:02,938
就是rookeeper官方

119
00:04:03,058 --> 00:04:04,978
他没有给我们提供出来一个

120
00:04:04,978 --> 00:04:07,658
针对集群管理的一个脚本

121
00:04:07,858 --> 00:04:09,298
我们只能手动去写

122
00:04:09,298 --> 00:04:11,098
我在这我写一个脚本

123
00:04:11,178 --> 00:04:12,378
我就可以一下控制

124
00:04:12,378 --> 00:04:13,338
三台计算机的

125
00:04:13,338 --> 00:04:14,658
rookeeper的一个服务了

126
00:04:14,658 --> 00:04:16,698
我们来看看这个脚本该如何去写

127
00:04:17,138 --> 00:04:18,498
首先我们RM

128
00:04:18,738 --> 00:04:19,538
更RF

129
00:04:19,738 --> 00:04:21,818
我们先把之前写好的删掉

130
00:04:22,498 --> 00:04:24,098
当然小伙伴那肯定是没有的

131
00:04:24,218 --> 00:04:25,618
我们来开始写脚本

132
00:04:25,658 --> 00:04:28,938
我们通过vmzkstart.sh

133
00:04:29,058 --> 00:04:30,498
我们创建这样的一个脚本

134
00:04:30,538 --> 00:04:31,338
在这个脚本里边

135
00:04:31,458 --> 00:04:34,018
我们通过编写一个

136
00:04:34,018 --> 00:04:35,618
用shell编成的这种方式

137
00:04:35,938 --> 00:04:38,378
来控制这三台计算机

138
00:04:38,378 --> 00:04:39,818
来控制三台计算机的

139
00:04:39,818 --> 00:04:41,618
一个rookeeper的服务

140
00:04:41,618 --> 00:04:42,698
有的小伙伴想说

141
00:04:42,698 --> 00:04:44,938
老师我不会shell编成

142
00:04:45,098 --> 00:04:46,258
我之前没学过

143
00:04:46,498 --> 00:04:47,018
没关系

144
00:04:47,138 --> 00:04:49,538
既然说你有编程的一个基础

145
00:04:49,538 --> 00:04:51,338
我相信老师所写的代码

146
00:04:51,418 --> 00:04:52,818
你绝对能看得懂

147
00:04:53,058 --> 00:04:54,858
但是老师我就是不想学怎么办

148
00:04:55,458 --> 00:04:56,938
老师把脚本写好以后

149
00:04:57,098 --> 00:04:58,258
你就把老师的脚本

150
00:04:58,538 --> 00:05:00,858
放到你的rookeeper服务里边

151
00:05:00,858 --> 00:05:01,978
你直接用就行了

152
00:05:02,298 --> 00:05:03,858
但是你要稍微改一点点东西

153
00:05:04,018 --> 00:05:04,338
改什么

154
00:05:04,618 --> 00:05:06,698
就是你需要把老师这边的电脑的IP地址

155
00:05:06,698 --> 00:05:08,378
改成你那边的IP地址就可以了

156
00:05:08,858 --> 00:05:09,778
来我们来开始编写

157
00:05:09,778 --> 00:05:12,542
首先我们来声明一下

158
00:05:12,542 --> 00:05:13,562
< No Speech >

159
00:05:13,562 --> 00:05:15,562
斜杠并斜杠Bus

160
00:05:15,562 --> 00:05:18,002
我们是基于这个版本来编写这个shell编程

161
00:05:18,002 --> 00:05:19,242
然后我们来看一下

162
00:05:19,242 --> 00:05:20,322
在这个shell编程里边

163
00:05:20,322 --> 00:05:22,682
我们可以通过编写个叫ECHO

164
00:05:22,682 --> 00:05:24,602
这个ECHO代表的是什么呢

165
00:05:24,602 --> 00:05:26,402
我们来Hello Shell

166
00:05:26,402 --> 00:05:29,482
它则代表的类似于我们JAR语言里边的什么呢

167
00:05:29,482 --> 00:05:30,878
System

168
00:05:31,514 --> 00:05:34,994
System.output.print就是打印输出嘛

169
00:05:34,994 --> 00:05:36,554
那在Shell编程里面呢

170
00:05:36,554 --> 00:05:40,034
就通过ECHO的这种方式来输出一句话

171
00:05:40,034 --> 00:05:40,634
那这个时候呢

172
00:05:40,634 --> 00:05:41,074
你们看啊

173
00:05:41,074 --> 00:05:41,994
比如说我写了一句话

174
00:05:41,994 --> 00:05:42,834
Hello,Shell

175
00:05:42,834 --> 00:05:44,714
然后呢我们来看一下这块呢

176
00:05:44,714 --> 00:05:46,354
有一个叫ZKstart

177
00:05:46,354 --> 00:05:47,594
我们呢把这个呢

178
00:05:47,594 --> 00:05:49,914
我们需要给它加一个权限啊

179
00:05:49,914 --> 00:05:51,154
ZKstart

180
00:05:51,154 --> 00:05:51,634
走你

181
00:05:51,634 --> 00:05:52,474
来注意看

182
00:05:52,474 --> 00:05:53,474
它是不是变成绿色了

183
00:05:53,474 --> 00:05:53,794
是吧

184
00:05:53,794 --> 00:05:54,914
它就有这个权限了啊

185
00:05:54,914 --> 00:05:55,794
执行的权限了

186
00:05:55,794 --> 00:05:58,994
然后我们叫ZKstart执行一下

187
00:05:58,994 --> 00:06:00,034
然后你会发现你看

188
00:06:00,034 --> 00:06:00,714
Hello,Shell

189
00:06:00,714 --> 00:06:03,114
你看它是不是帮我们打印了一句话

190
00:06:03,114 --> 00:06:03,634
但是呢

191
00:06:03,634 --> 00:06:06,714
我们还要就是和我们这个服务啊

192
00:06:06,714 --> 00:06:08,274
还要就是和我们这个什么服务呢

193
00:06:08,274 --> 00:06:10,034
比如说我们要启动一个服务

194
00:06:10,034 --> 00:06:11,474
你看我们后边是不是跟了个start

195
00:06:11,474 --> 00:06:12,834
或者是跟了个stop

196
00:06:12,834 --> 00:06:14,274
那我要一键控制的话

197
00:06:14,274 --> 00:06:16,194
我是不是后边也要跟一个参数

198
00:06:16,194 --> 00:06:16,834
是不是

199
00:06:16,834 --> 00:06:17,874
那后边的这个参数

200
00:06:17,874 --> 00:06:20,034
我们该如何去跟呢

201
00:06:20,034 --> 00:06:22,154
在这个Shell编程里面呢

202
00:06:22,154 --> 00:06:24,274
我们可以通过一个方法啊

203
00:06:24,274 --> 00:06:24,994
通过一个方法

204
00:06:24,994 --> 00:06:26,114
什么方法呢

205
00:06:26,114 --> 00:06:28,794
我们叫ECHO啊

206
00:06:28,794 --> 00:06:33,794
比如说我们来通过一个叫做$1的这种方式

207
00:06:33,794 --> 00:06:35,194
$1又出来了

208
00:06:35,194 --> 00:06:35,754
是不是

209
00:06:35,754 --> 00:06:38,274
然后再来个$2

210
00:06:38,274 --> 00:06:42,074
这个$1则代表的是我们在执行了这个脚本的时候

211
00:06:42,074 --> 00:06:43,434
它后边所跟的那个命令

212
00:06:43,434 --> 00:06:44,834
比如说你看我们跟了个start

213
00:06:44,834 --> 00:06:46,034
比如说跟了一个by站

214
00:06:46,034 --> 00:06:46,594
大家注意啊

215
00:06:46,594 --> 00:06:49,114
你看第一个这个就这个位置则代表的

216
00:06:49,114 --> 00:06:49,874
它就是$1

217
00:06:49,874 --> 00:06:51,394
这个位置则代表的是$2

218
00:06:51,394 --> 00:06:52,634
我们通过$1$2

219
00:06:52,634 --> 00:06:56,994
我们就可以获得到我们这个脚本后边所跟的一个参数了啊

220
00:06:56,994 --> 00:06:58,114
那我们通过这个参数呢

221
00:06:58,114 --> 00:06:58,994
我就知道啊

222
00:06:58,994 --> 00:07:00,234
我这个到底是启动呢

223
00:07:00,234 --> 00:07:01,354
还是停止呢啊

224
00:07:01,354 --> 00:07:02,354
非常的简单

225
00:07:02,354 --> 00:07:02,634
然后呢

226
00:07:02,634 --> 00:07:05,714
我们通过ZKSTART来操作它

227
00:07:05,714 --> 00:07:06,954
我们把这两个删掉

228
00:07:06,954 --> 00:07:08,874
那既然说你后边我们可以跟start

229
00:07:08,874 --> 00:07:09,314
stop

230
00:07:09,314 --> 00:07:09,794
restart

231
00:07:09,794 --> 00:07:11,034
以及status

232
00:07:11,034 --> 00:07:11,554
那但是呢

233
00:07:11,554 --> 00:07:13,394
我们在这块我们需要判定一下

234
00:07:13,394 --> 00:07:14,194
判定什么呢

235
00:07:14,194 --> 00:07:15,914
我们来写个IF

236
00:07:15,914 --> 00:07:16,314
但是呢

237
00:07:16,314 --> 00:07:17,274
在Shell编程里面呢

238
00:07:17,274 --> 00:07:19,954
它的这个IF语句和我们JAR里面的IF语句呢

239
00:07:19,954 --> 00:07:21,274
稍微有点点不太一样

240
00:07:21,274 --> 00:07:22,034
我们之前呢

241
00:07:22,034 --> 00:07:23,274
是这IF然后小括号

242
00:07:23,274 --> 00:07:24,274
括括号是不是

243
00:07:24,274 --> 00:07:24,674
但是呢

244
00:07:24,674 --> 00:07:25,634
在Shell编程里面呢

245
00:07:25,634 --> 00:07:26,434
是IF

246
00:07:26,434 --> 00:07:27,114
开始啊

247
00:07:27,114 --> 00:07:28,554
FE结束啊

248
00:07:28,554 --> 00:07:30,794
代表的是我们这个IF语句结束了

249
00:07:30,794 --> 00:07:31,354
那我们呢

250
00:07:31,354 --> 00:07:32,834
要判定啊

251
00:07:32,834 --> 00:07:36,194
我们要判定你就是你后边所跟的那个参数

252
00:07:36,194 --> 00:07:37,514
你到底是跟了没有

253
00:07:37,514 --> 00:07:39,034
就是你如果说你没有跟参数

254
00:07:39,034 --> 00:07:40,154
那我要判定你报错了

255
00:07:40,154 --> 00:07:40,714
是不是啊

256
00:07:40,714 --> 00:07:41,074
然后呢

257
00:07:41,074 --> 00:07:44,994
我们通过DOLLAR警号的这种方式

258
00:07:44,994 --> 00:07:47,554
你说老师这个DOLLAR警号是什么意思呢

259
00:07:47,554 --> 00:07:48,754
这个DOLLAR注释啊

260
00:07:48,754 --> 00:07:49,754
是通过警号

261
00:07:49,754 --> 00:07:50,274
但是呢

262
00:07:50,274 --> 00:07:50,994
DOLLAR警号

263
00:07:50,994 --> 00:07:53,754
它则代表的把这个注释给大家写到这啊

264
00:07:53,754 --> 00:07:55,914
DOLLAR警号则代表的

265
00:07:55,914 --> 00:08:01,114
就是在启动脚本的时候携带的这个参数啊

266
00:08:01,114 --> 00:08:05,274
这个携带的这个参数的个数啊

267
00:08:05,274 --> 00:08:06,114
参数的个数

268
00:08:06,114 --> 00:08:08,514
但是如果说我们会不会给了个STOP

269
00:08:08,514 --> 00:08:10,234
那代表的是个数个数就是二了

270
00:08:10,234 --> 00:08:10,634
那然后呢

271
00:08:10,634 --> 00:08:12,914
我们通过这个DOLLAR警号啊

272
00:08:12,914 --> 00:08:14,554
我的个数是多少呢

273
00:08:14,554 --> 00:08:16,874
那如果个数呢

274
00:08:16,874 --> 00:08:18,474
它个NE

275
00:08:18,474 --> 00:08:19,634
这个个NE啊

276
00:08:19,634 --> 00:08:22,234
它则代表的在这个Shell编程里边啊

277
00:08:22,234 --> 00:08:23,954
它代表的这个个NE

278
00:08:23,954 --> 00:08:26,234
它代表的就是不等于的意思啊

279
00:08:26,234 --> 00:08:26,874
不等于

280
00:08:26,874 --> 00:08:27,994
那如果说你这个个数了

281
00:08:27,994 --> 00:08:30,354
你不等于一则代表的是你这个什么呢

282
00:08:30,354 --> 00:08:33,114
你这个参数是不是写的时候错误了啊

283
00:08:33,114 --> 00:08:33,514
然后呢

284
00:08:33,514 --> 00:08:37,310
我们则我们来写一个判定吧

285
00:08:37,978 --> 00:08:40,378
这个写法和我们之前是有点不太一样了

286
00:08:40,378 --> 00:08:40,858
是不是

287
00:08:40,858 --> 00:08:42,458
大家记住这种格式就可以了

288
00:08:42,458 --> 00:08:43,938
然后我们在你

289
00:08:43,938 --> 00:08:44,738
当然你写错了

290
00:08:44,738 --> 00:08:45,738
我当然给你个提示

291
00:08:45,738 --> 00:08:46,298
是不是

292
00:08:46,298 --> 00:08:48,458
我就说你这个参数输入有误

293
00:08:48,618 --> 00:08:50,738
就是说无效的参数

294
00:08:50,738 --> 00:08:53,898
当然了我还要告诉人家有效的该如何去写

295
00:08:54,098 --> 00:08:55,578
然后用法为

296
00:08:55,858 --> 00:08:58,378
用法为就是你需要在这个里边

297
00:08:58,378 --> 00:09:00,178
你输入stop

298
00:09:00,378 --> 00:09:02,178
或者stop

299
00:09:02,178 --> 00:09:03,978
或者status

300
00:09:03,978 --> 00:09:06,178
或者是restart

301
00:09:06,178 --> 00:09:08,538
你看就是当你输入的时候

302
00:09:08,538 --> 00:09:09,578
超过了一个参数

303
00:09:09,578 --> 00:09:11,058
我就告诉你报这个错

304
00:09:11,058 --> 00:09:12,178
当你如果没有输入

305
00:09:12,298 --> 00:09:14,378
我也告诉你要输入一个参数

306
00:09:14,378 --> 00:09:16,898
并且直接退出这个脚本

307
00:09:16,898 --> 00:09:17,738
不要去执行了

308
00:09:17,938 --> 00:09:19,538
就是你不要往下去执行了

309
00:09:19,538 --> 00:09:20,258
我们来试一下

310
00:09:20,698 --> 00:09:21,538
走你

311
00:09:21,538 --> 00:09:24,218
然后我们再去执行这个脚本的时候

312
00:09:24,338 --> 00:09:24,818
我们注意

313
00:09:25,618 --> 00:09:27,098
我们执行这个脚本的时候

314
00:09:27,098 --> 00:09:28,298
我后边什么都不写

315
00:09:28,298 --> 00:09:30,098
你看是不是报错了

316
00:09:30,298 --> 00:09:31,698
如果说我们写的多了

317
00:09:31,858 --> 00:09:33,258
比如说start stop

318
00:09:33,258 --> 00:09:33,978
我们写了两个

319
00:09:33,978 --> 00:09:35,218
你看也报这个

320
00:09:35,218 --> 00:09:37,138
但是如果说我们写了一个

321
00:09:37,138 --> 00:09:38,178
它则没有反应了

322
00:09:38,178 --> 00:09:39,218
你看是不是没反应了

323
00:09:39,218 --> 00:09:40,338
这代表的是我们这个程序

324
00:09:40,538 --> 00:09:42,258
它继续往下去运行了

325
00:09:42,578 --> 00:09:43,018
OK

326
00:09:43,458 --> 00:09:44,858
然后我们把这个

327
00:09:45,538 --> 00:09:47,338
删掉这就是一个异乎判断

328
00:09:47,338 --> 00:09:48,898
判断我们后边该弄的参数

329
00:09:49,218 --> 00:09:50,258
到底对不对

330
00:09:50,458 --> 00:09:53,218
你说我们想要一下控制三台计算机

331
00:09:53,218 --> 00:09:54,898
无非就是给这三台计算机

332
00:09:54,898 --> 00:09:56,658
发送一些命令不就完了吗

333
00:09:56,898 --> 00:09:59,218
所以说我们要通过一个for循环的方式

334
00:09:59,218 --> 00:10:00,658
循环这三台服务器

335
00:10:00,658 --> 00:10:01,298
是不是

336
00:10:01,298 --> 00:10:04,698
你看我们在渣人里边的for怎么写

337
00:10:04,698 --> 00:10:07,418
然后想想我们在share编程里边

338
00:10:07,618 --> 00:10:09,098
这个该如何去写

339
00:10:09,098 --> 00:10:10,178
肯定也是个for

340
00:10:10,378 --> 00:10:11,098
也是个for

341
00:10:11,098 --> 00:10:18,138
然后我们host1叫192.168.66.101

342
00:10:18,258 --> 00:10:22,738
然后空格192.168.66.102

343
00:10:22,738 --> 00:10:27,218
然后空格192.168.66.103

344
00:10:27,218 --> 00:10:28,058
大家注意你看

345
00:10:28,058 --> 00:10:30,538
我是不是通过这种空格的这种方式

346
00:10:30,778 --> 00:10:32,298
行动于是这个for循环

347
00:10:32,298 --> 00:10:34,418
便利一个两个三个

348
00:10:34,418 --> 00:10:36,298
这相当于大家可以把它想象成

349
00:10:36,298 --> 00:10:38,258
就是一个数组里边放的三个IP

350
00:10:38,858 --> 00:10:39,658
明白对吧

351
00:10:39,658 --> 00:10:42,778
然后我们for循环格式变了

352
00:10:42,778 --> 00:10:45,378
这个host是一个变量

353
00:10:45,378 --> 00:10:47,178
你可以写上h也可以写上别的

354
00:10:47,178 --> 00:10:49,378
因为它代表的就是一个主机

355
00:10:49,898 --> 00:10:51,818
结束我们叫

356
00:10:52,218 --> 00:10:53,258
这个for循环写了

357
00:10:53,378 --> 00:10:54,498
看看这个for循环怎么写

358
00:10:54,538 --> 00:10:57,498
度开始我们要干具体干哪些活

359
00:10:57,658 --> 00:10:58,738
具体干哪些活

360
00:10:59,098 --> 00:11:00,578
然后写完以后

361
00:11:00,818 --> 00:11:03,298
我们最后看看该如何去

362
00:11:03,298 --> 00:11:04,778
我循环

363
00:11:04,818 --> 00:11:06,378
我循环哪些东西

364
00:11:06,738 --> 00:11:08,178
你循环完以后怎么写

365
00:11:08,458 --> 00:11:10,098
我们需要写一个Done

366
00:11:10,258 --> 00:11:11,778
代表的是我们这个for循环

367
00:11:11,858 --> 00:11:12,738
循环结束了

368
00:11:12,738 --> 00:11:14,258
但是你循环体是什么

369
00:11:15,138 --> 00:11:16,898
我想在每次循环的时候

370
00:11:16,898 --> 00:11:18,138
你帮我说出一句话

371
00:11:18,458 --> 00:11:18,978
说出什么

372
00:11:19,778 --> 00:11:20,858
你给我输出一下

373
00:11:21,018 --> 00:11:23,418
这个dollar host

374
00:11:23,418 --> 00:11:24,138
这是一个什么

375
00:11:24,378 --> 00:11:26,138
获取一个变量

376
00:11:26,498 --> 00:11:27,978
就是获取了一个变量

377
00:11:27,978 --> 00:11:30,378
你看我们dollar host

378
00:11:30,378 --> 00:11:32,298
代表的是我们获取变量了

379
00:11:32,298 --> 00:11:33,338
在share变成里边

380
00:11:33,418 --> 00:11:34,738
我们每次要获取变量

381
00:11:34,858 --> 00:11:36,178
要加一个dollar

382
00:11:36,818 --> 00:11:37,698
在这一边里边

383
00:11:37,698 --> 00:11:38,578
我们是不是直接写个

384
00:11:38,578 --> 00:11:39,778
写变量名就可以了

385
00:11:39,938 --> 00:11:41,098
但是在share变成里边

386
00:11:41,098 --> 00:11:42,498
我们必须要加个dollar

387
00:11:42,498 --> 00:11:44,218
来获取这的变量

388
00:11:44,258 --> 00:11:44,858
OK

389
00:11:44,898 --> 00:11:46,658
然后我就说这台机器

390
00:11:46,898 --> 00:11:48,098
它正在

391
00:11:48,498 --> 00:11:49,138
正在干嘛

392
00:11:49,618 --> 00:11:51,018
dollar1

393
00:11:51,338 --> 00:11:54,098
dollar1是不是用户

394
00:11:54,098 --> 00:11:55,658
在启动这个的时候

395
00:11:55,658 --> 00:11:56,978
就启动脚本的时候

396
00:11:56,978 --> 00:11:58,018
后边跟的参数

397
00:11:58,538 --> 00:11:59,058
OK

398
00:11:59,218 --> 00:12:00,698
然后完了之后我们说

399
00:12:00,698 --> 00:12:02,258
既然说这是三台机器

400
00:12:02,418 --> 00:12:03,218
我们要给这三台机器

401
00:12:03,338 --> 00:12:04,498
发送一些命令

402
00:12:04,658 --> 00:12:05,698
我们来发送一些命令

403
00:12:06,538 --> 00:12:10,338
这个则代表的是发送命令

404
00:12:10,338 --> 00:12:12,858
到目标的机器上

405
00:12:13,058 --> 00:12:14,738
然后目标的机器上

406
00:12:14,898 --> 00:12:18,538
我们通过ssh协议来进行发送

407
00:12:18,538 --> 00:12:19,738
发送到哪台机器

408
00:12:20,178 --> 00:12:22,538
dollar host的这台机器

409
00:12:22,538 --> 00:12:24,418
那你说这个是不是一个变量

410
00:12:24,418 --> 00:12:26,218
相当于这后边跟的一个IP地址

411
00:12:26,738 --> 00:12:27,458
命令是什么

412
00:12:27,938 --> 00:12:28,978
我们写个双眼号

413
00:12:28,978 --> 00:12:30,898
把这个命令写到里边

414
00:12:30,898 --> 00:12:32,098
< No Speech >

415
00:12:32,098 --> 00:12:33,978
比如说我们写个sauce

416
00:12:33,978 --> 00:12:35,578
我们需要先生效一下

417
00:12:35,578 --> 00:12:37,578
环境变量叫pro

418
00:12:37,618 --> 00:12:38,258
file

419
00:12:38,258 --> 00:12:39,698
然后写个分号

420
00:12:39,898 --> 00:12:40,778
后边继续

421
00:12:40,978 --> 00:12:41,618
你要干嘛

422
00:12:41,818 --> 00:12:44,738
我们这个rookie本服务的命令在哪里

423
00:12:44,938 --> 00:12:46,818
在usr下滑线

424
00:12:46,978 --> 00:12:48,738
local下滑线

425
00:12:48,738 --> 00:12:51,218
有个叫rookieper下滑线

426
00:12:51,218 --> 00:12:53,258
有一个并文件下滑线

427
00:12:53,258 --> 00:12:56,138
有一个叫做zkservice

428
00:12:56,418 --> 00:12:58,258
zkservice.sh

429
00:12:58,258 --> 00:12:59,898
大家注意这个命令

430
00:12:59,898 --> 00:13:02,938
是不是就是我们rookieper服务的命令

431
00:13:02,938 --> 00:13:03,378
是不是

432
00:13:03,578 --> 00:13:05,018
最后你这个位置你看

433
00:13:05,458 --> 00:13:07,418
我们说启动你后边跟的是start

434
00:13:07,778 --> 00:13:09,978
我说停止你后边跟的是stop

435
00:13:09,978 --> 00:13:10,538
是不是

436
00:13:10,538 --> 00:13:11,378
我说看状态

437
00:13:11,538 --> 00:13:13,338
你后边跟的是status

438
00:13:13,578 --> 00:13:15,018
如果说我想让它重新启动

439
00:13:15,098 --> 00:13:16,138
你跟的是restart

440
00:13:16,138 --> 00:13:17,578
那后边我们这里该跟的是什么

441
00:13:17,778 --> 00:13:20,538
我们跟的就是dollar1的变量

442
00:13:20,538 --> 00:13:21,618
是不是给到这个位置中

443
00:13:21,658 --> 00:13:23,738
所以说我们这里跟一个什么dollar1

444
00:13:24,138 --> 00:13:24,818
明白没有

445
00:13:24,818 --> 00:13:27,178
这个脚本就如此的简单

446
00:13:27,178 --> 00:13:28,658
来我们保存退出

447
00:13:28,658 --> 00:13:29,338
我们来试一试

448
00:13:30,218 --> 00:13:31,218
这个脚本写完了

449
00:13:31,418 --> 00:13:34,258
我们来执行这个zkstart

450
00:13:34,258 --> 00:13:35,578
我们后边跟一个什么

451
00:13:35,578 --> 00:13:36,218
status

452
00:13:36,218 --> 00:13:37,338
我们来看一下

453
00:13:37,818 --> 00:13:39,738
每台机器的一个什么状态

454
00:13:39,858 --> 00:13:41,698
你看这台机器

455
00:13:41,698 --> 00:13:43,138
我们正在看它的状态

456
00:13:43,138 --> 00:13:44,498
当然我们需要输一个密码

457
00:13:44,618 --> 00:13:45,338
我们root

458
00:13:45,898 --> 00:13:47,138
然后再root

459
00:13:47,538 --> 00:13:48,738
再root

460
00:13:49,018 --> 00:13:49,898
然后我们会发现

461
00:13:49,898 --> 00:13:50,658
你看这个时候

462
00:13:50,738 --> 00:13:51,898
你看这台机器

463
00:13:51,978 --> 00:13:53,498
它是什么角色

464
00:13:53,498 --> 00:13:54,418
这台第二台机器

465
00:13:54,418 --> 00:13:55,258
它是什么角色

466
00:13:55,258 --> 00:13:55,898
第三台机器

467
00:13:55,898 --> 00:13:56,818
它是什么角色

468
00:13:56,818 --> 00:13:57,578
简单吧

469
00:13:57,738 --> 00:13:58,858
比如说我想要停止

470
00:13:59,138 --> 00:14:00,098
我们就执行脚本

471
00:14:00,098 --> 00:14:02,698
后边我们跟一个停止的命令

472
00:14:02,818 --> 00:14:04,258
然后我们root

473
00:14:04,458 --> 00:14:05,018
确定

474
00:14:05,018 --> 00:14:07,166
然后我们再给你个密码

475
00:14:07,802 --> 00:14:09,374
然后再给你个密码

476
00:14:10,074 --> 00:14:12,074
OK 你看 那这个时候呢

477
00:14:12,074 --> 00:14:13,274
你看我们现在进去都停止掉

478
00:14:13,274 --> 00:14:15,674
你看比如说GPS 你看 那个进程是没了

479
00:14:15,674 --> 00:14:18,674
然后呢 我们比如说我再去看这个状态的时候

480
00:14:18,674 --> 00:14:19,866
< No Speech >

481
00:14:19,866 --> 00:14:21,406
再去看这个状态的时候

482
00:14:21,406 --> 00:14:22,622
让我们略带一反侧,就到此为止

483
00:14:22,622 --> 00:14:23,994
< No Speech >

484
00:14:23,994 --> 00:14:26,194
你看你看这个状态的时候

485
00:14:26,194 --> 00:14:27,314
你看是不是就成错误的了

486
00:14:27,314 --> 00:14:27,714
错误的了

487
00:14:27,714 --> 00:14:28,834
错了没有连接了是吧

488
00:14:28,834 --> 00:14:30,114
没有连接的一个服务了

489
00:14:30,114 --> 00:14:32,514
所以说我们可以通过我们刚刚所写的这个脚本

490
00:14:32,514 --> 00:14:35,554
就是我们所写的这个叫ZKSTAR这个脚本

491
00:14:35,554 --> 00:14:38,354
我们就可以控制我们这个rootkeeper的一个集群

492
00:14:38,354 --> 00:14:40,234
这就是我们本节目的一个重点

493
00:14:40,234 --> 00:14:40,754
好了

494
00:14:40,754 --> 00:14:43,474
那你说我们这个服务的管理到这就结束了

495
00:14:43,474 --> 00:14:46,274
我们在结束之前我们再做做个练习题

496
00:14:46,274 --> 00:14:48,074
第一个这个rootkeeper进入中

497
00:14:48,074 --> 00:14:51,154
我们该如何查看节点信息呢

498
00:14:51,154 --> 00:14:53,554
就如何查看这个rootkeeper的一个节点信息

499
00:14:53,554 --> 00:14:54,914
以及它的状态呢

500
00:14:54,914 --> 00:14:58,434
第一个start代表的是我们这个rootkeeper服务的启动

501
00:14:58,434 --> 00:14:59,954
stop代表的是停止

502
00:14:59,954 --> 00:15:01,354
这个是连接客户多弯

503
00:15:01,354 --> 00:15:03,954
所以说这个status是不是代表的是我们要看一下

504
00:15:03,954 --> 00:15:05,554
这个rootkeeper的一个什么呢

505
00:15:05,554 --> 00:15:06,794
节点的一个状态吧

506
00:15:06,794 --> 00:15:09,274
所以说第一题应该选择的是d

507
00:15:09,274 --> 00:15:09,834
第二个呢

508
00:15:09,834 --> 00:15:10,874
在这个rootkeeper进入中

509
00:15:10,874 --> 00:15:13,354
我们该如何清理之前的历史数据

510
00:15:13,354 --> 00:15:15,594
以及事物文件以及快照文件呢

511
00:15:15,594 --> 00:15:18,714
第一个这个第一个明显就是服务的启动是吧

512
00:15:18,714 --> 00:15:22,874
第二个第二个是一个ZKCLAN

513
00:15:22,874 --> 00:15:24,714
第三个也是一个这里肯定是写错了

514
00:15:24,714 --> 00:15:28,446
这里应该是这里应该是一个survey

515
00:15:28,446 --> 00:15:29,754
< No Speech >

516
00:15:29,754 --> 00:15:31,754
3.sh

517
00:15:31,754 --> 00:15:33,834
然后呢我们这里肯定也是个错的

518
00:15:33,834 --> 00:15:36,714
你看这里是不是有个叫zkclangup

519
00:15:36,714 --> 00:15:37,754
是不是清理啊

520
00:15:37,754 --> 00:15:39,674
所以说呢我们应该也是选择的是d

521
00:15:39,674 --> 00:15:40,314
好了

522
00:15:40,314 --> 00:15:43,754
那这节课呢我们讲解这个rootkeeper的一个服务的管理

523
00:15:43,754 --> 00:15:45,274
到这就已经结束了

524
00:15:45,274 --> 00:15:47,550
我们下节课再见吧

