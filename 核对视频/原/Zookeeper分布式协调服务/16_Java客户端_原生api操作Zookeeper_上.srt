1
00:00:00,410 --> 00:00:01,730
Hello小伙伴大家好

2
00:00:01,730 --> 00:00:05,810
这节课我们来利用Rookieper的一个官方的一个原生API

3
00:00:05,810 --> 00:00:07,810
来操作我们Rookieper的一个服务

4
00:00:07,810 --> 00:00:10,690
并且在我们本节目给大家演示一些比如说

5
00:00:10,690 --> 00:00:14,610
创建节点删除修改以及查询节点的一些操作

6
00:00:14,610 --> 00:00:18,010
当然比如说我们在创建节点或者删除节点或者修改节点

7
00:00:18,010 --> 00:00:21,930
我们总不能在命令横中端里边去操作我们这个节点

8
00:00:22,210 --> 00:00:26,250
我们肯定是要通过客户端的这种方式来进行一个实现

9
00:00:26,250 --> 00:00:28,690
OK我们打开我们的一个编辑

10
00:00:28,690 --> 00:00:33,250
并且我们需要引入我们Rookieper它的原生API

11
00:00:33,250 --> 00:00:36,890
我们直接引入依赖打开我们的编辑器

12
00:00:36,890 --> 00:00:39,570
我们创建一个Maven的一个项目

13
00:00:39,570 --> 00:00:43,262
在这个项目中我们直接把Rookieper的依赖打开

14
00:00:43,262 --> 00:00:44,506
< No Speech >

15
00:00:44,506 --> 00:00:47,230
我们把它引入一下我们这个Rookkeeper

16
00:00:47,230 --> 00:00:49,594
< No Speech >

17
00:00:49,594 --> 00:00:53,434
这个版本呢大家注意啊我们用一个低的版本就可以了啊

18
00:00:53,434 --> 00:00:56,474
因为高的版本可能会出现一些可能会出现一些问题

19
00:00:56,474 --> 00:01:00,034
所以我们直接用一个低版本就ok啊都没有什么问题的

20
00:01:00,034 --> 00:01:02,594
然后呢我们老师呢在下边呢又引了一个什么呢

21
00:01:02,594 --> 00:01:05,714
就是指定了我们这个mevn的GDK的版本啊

22
00:01:05,714 --> 00:01:07,794
是1.8的一个版本ok

23
00:01:07,794 --> 00:01:09,554
指定完成之后呢我们在这块啊

24
00:01:09,554 --> 00:01:11,474
你看我们创建了一个包入镜啊

25
00:01:11,474 --> 00:01:14,154
在这块呢我们创建一个呃实体类啊

26
00:01:14,154 --> 00:01:15,594
我们叫Rookkeeper啊

27
00:01:15,594 --> 00:01:17,914
或者我们叫做ZK啊

28
00:01:17,914 --> 00:01:18,878
美

29
00:01:19,610 --> 00:01:26,810
这个里边呢我们主要用来去实现一些这个rookieper的原生API的一些操作

30
00:01:26,810 --> 00:01:29,818
< No Speech >

31
00:01:29,818 --> 00:01:32,138
原生的API操作

32
00:01:32,138 --> 00:01:32,858
OK

33
00:01:32,858 --> 00:01:35,738
在这个里边我们编写一个内方法

34
00:01:35,738 --> 00:01:36,890
< No Speech >

35
00:01:36,890 --> 00:01:37,890
走你

36
00:01:37,890 --> 00:01:39,490
那我们要做的第一件事

37
00:01:39,490 --> 00:01:44,450
那既然说我们的客户端要和我们的服务端产生一个连接

38
00:01:44,450 --> 00:01:47,090
来操作我们Rookieper里边的服务是不是

39
00:01:47,090 --> 00:01:48,930
那肯定是要把命令是发过去

40
00:01:48,930 --> 00:01:52,210
那首先的第一步我们应该就是干嘛呢

41
00:01:52,210 --> 00:01:56,050
第一步我们就是需要创建一个绘画

42
00:01:56,050 --> 00:01:58,090
创建一个绘画

43
00:01:58,090 --> 00:02:02,570
当然了在Rookieper中我们创建绘画的这种方式也比较简单

44
00:02:02,570 --> 00:02:05,050
我们直接使用new的这种方式

45
00:02:05,050 --> 00:02:07,130
我们把这个Rookieper给它new出来

46
00:02:07,130 --> 00:02:09,530
变形刀我们来看里面的参数写什么呢

47
00:02:09,530 --> 00:02:10,650
< No Speech >

48
00:02:10,650 --> 00:02:11,130
呃

49
00:02:11,130 --> 00:02:11,690
400

50
00:02:11,690 --> 00:02:12,330
4000

51
00:02:12,330 --> 00:02:12,730
然后呢

52
00:02:12,730 --> 00:02:13,810
写一个now

53
00:02:13,810 --> 00:02:14,410
大家注意啊

54
00:02:14,410 --> 00:02:15,490
你看这个时候呢

55
00:02:15,490 --> 00:02:16,890
里面有一堆参数啊

56
00:02:16,890 --> 00:02:18,770
我们把这个一城门抛一下

57
00:02:18,770 --> 00:02:19,770
第一个参数啊

58
00:02:19,770 --> 00:02:21,970
代表的是你这个Rookieper在哪里呀

59
00:02:21,970 --> 00:02:22,530
第二个呢

60
00:02:22,530 --> 00:02:24,370
是你这个绘画的超时时间

61
00:02:24,370 --> 00:02:24,970
第三个呢

62
00:02:24,970 --> 00:02:26,610
就是我们的剪辑机制啊

63
00:02:26,610 --> 00:02:28,530
把这个注释给大家写一下

64
00:02:28,530 --> 00:02:29,770
< No Speech >

65
00:02:29,770 --> 00:02:30,810
走你

66
00:02:30,810 --> 00:02:31,770
那第一个呢

67
00:02:31,770 --> 00:02:33,810
这个第一个参数

68
00:02:33,810 --> 00:02:35,610
这个第一个参数

69
00:02:35,610 --> 00:02:38,074
< No Speech >

70
00:02:38,074 --> 00:02:41,154
这个第一个参数呢则代表的就是我们的

71
00:02:41,154 --> 00:02:45,754
连接的一个就是我们Rookkeeper的一个服务地址

72
00:02:45,754 --> 00:02:46,754
没问题吧

73
00:02:46,754 --> 00:02:49,994
那第二个参数呢它则代表的是我们的

74
00:02:49,994 --> 00:02:52,394
绘画的超时时间

75
00:02:52,394 --> 00:02:54,794
那第三个参数呢

76
00:02:54,794 --> 00:02:58,394
哎这个代表的就是我们的监听机制

77
00:02:58,394 --> 00:03:00,254
监听机制

78
00:03:00,254 --> 00:03:01,530
< No Speech >

79
00:03:01,530 --> 00:03:03,770
OK 那监听机制也有了

80
00:03:03,770 --> 00:03:06,170
当然了你看我们这个监听机制是不是设的是none

81
00:03:06,170 --> 00:03:08,170
首先所以说我们在最开始的时候

82
00:03:08,170 --> 00:03:09,850
我们先不玩监听机制

83
00:03:09,850 --> 00:03:11,970
我们先把它的一些常规的操作玩完之后

84
00:03:11,970 --> 00:03:15,170
我们在下一节视频里面专门去讲一下监听机制

85
00:03:15,170 --> 00:03:16,650
它到底该如何去玩

86
00:03:16,650 --> 00:03:19,170
我们直接把它返回值写上

87
00:03:19,170 --> 00:03:20,770
直接是不是得到了一个什么呢

88
00:03:20,770 --> 00:03:21,610
ZK

89
00:03:21,610 --> 00:03:22,890
那这个里边我们写什么呢

90
00:03:22,890 --> 00:03:25,410
我们肯定是要写的是连接的地址

91
00:03:25,410 --> 00:03:26,970
我们的root keyboard有哪些呢

92
00:03:26,970 --> 00:03:30,930
我们是在192.168.66.101上

93
00:03:30,930 --> 00:03:33,330
它的端口的话是2181

94
00:03:33,330 --> 00:03:35,850
2181

95
00:03:35,850 --> 00:03:36,730
没问题吧

96
00:03:36,730 --> 00:03:38,010
2181

97
00:03:38,010 --> 00:03:40,290
然后我们把这句话我们直接一复制

98
00:03:40,290 --> 00:03:42,330
然后我们写一个

99
00:03:42,330 --> 00:03:43,570
动画

100
00:03:43,570 --> 00:03:48,770
把这个改成102的1081和103的2181

101
00:03:48,770 --> 00:03:49,410
OK

102
00:03:49,410 --> 00:03:50,210
那通过这句话

103
00:03:50,210 --> 00:03:52,730
我们这个root keyboard它就可以建立起来一个连接

104
00:03:52,730 --> 00:03:57,090
那我们可以直接通过这个zk.get

105
00:03:57,090 --> 00:04:01,050
就通过这个方法我们来看一下连接状态

106
00:04:01,050 --> 00:04:02,362
< No Speech >

107
00:04:02,362 --> 00:04:06,402
就是查看连接它的一个状态

108
00:04:06,402 --> 00:04:08,002
来我们来看一下

109
00:04:08,642 --> 00:04:12,562
我们直接把我们这个妹妹吧我们直接运行一下

110
00:04:12,562 --> 00:04:14,642
并且能把这边我们换一行

111
00:04:14,642 --> 00:04:17,082
这个太太长了是不是

112
00:04:17,082 --> 00:04:19,454
OK我们把这换一行

113
00:04:19,454 --> 00:04:21,882
< No Speech >

114
00:04:21,882 --> 00:04:23,162
走你 我们看这

115
00:04:23,162 --> 00:04:24,642
它这是一个连接的一个状态

116
00:04:24,642 --> 00:04:26,802
那随时我们可以直接开始玩了

117
00:04:26,802 --> 00:04:28,802
那随时我们这个Rookable

118
00:04:28,802 --> 00:04:31,602
就是我们的客户端和我们的服务端

119
00:04:31,602 --> 00:04:33,442
是不是已经建立一个连接

120
00:04:33,442 --> 00:04:34,842
那建立成一个连接之后

121
00:04:34,962 --> 00:04:36,642
我们是不是可以做的第一件事

122
00:04:36,922 --> 00:04:38,762
就是创建节点

123
00:04:38,762 --> 00:04:42,878
记住第一件事就是创建节点

124
00:04:42,878 --> 00:04:44,154
< No Speech >

125
00:04:44,154 --> 00:04:45,274
创建节点

126
00:04:45,274 --> 00:04:46,514
那在创建节点这里

127
00:04:46,634 --> 00:04:49,234
我们可以直接通过一个叫做ZK

128
00:04:49,394 --> 00:04:51,154
就是create的这种方式

129
00:04:51,154 --> 00:04:54,234
就是create就是来创建一个节点

130
00:04:54,274 --> 00:04:55,714
但是在创建节点的时候

131
00:04:55,874 --> 00:04:57,274
里边需要写一堆东东

132
00:04:57,594 --> 00:04:58,994
首先把这个直接写出来

133
00:04:58,994 --> 00:04:59,754
让大家看一下

134
00:04:59,754 --> 00:05:01,758
这个里边应该写哪些东西

135
00:05:01,758 --> 00:05:03,098
< No Speech >

136
00:05:03,098 --> 00:05:04,378
大家注意你看

137
00:05:04,378 --> 00:05:07,658
这个时候它里边的参数都给显示出来了

138
00:05:07,658 --> 00:05:10,418
我们来看第一个参数它所代表的一个含义

139
00:05:10,418 --> 00:05:12,122
< No Speech >

140
00:05:12,122 --> 00:05:15,562
创建节点啊这个great是创建节点

141
00:05:15,562 --> 00:05:18,322
那第一个参数啊

142
00:05:18,322 --> 00:05:22,282
它代表的就是我们这个节点的名字

143
00:05:23,162 --> 00:05:23,402
啊

144
00:05:23,402 --> 00:05:23,882
注意啊

145
00:05:23,882 --> 00:05:25,042
它就是节点的名字

146
00:05:25,042 --> 00:05:26,562
那第二个呢

147
00:05:26,882 --> 00:05:30,922
第二个参数就是我们这个date这个节点的名字

148
00:05:30,922 --> 00:05:31,922
当然了还有什么呢

149
00:05:31,922 --> 00:05:33,562
节点的数据吧

150
00:05:33,562 --> 00:05:35,122
那第三个呢

151
00:05:35,122 --> 00:05:36,722
这个第三个参数

152
00:05:36,722 --> 00:05:39,042
它呢则代表的是什么呢

153
00:05:39,042 --> 00:05:41,482
就是说人家想问一下你的这个

154
00:05:41,482 --> 00:05:43,922
这个节点的策略是什么

155
00:05:43,922 --> 00:05:47,722
就是你ACL的一个策略是什么策略

156
00:05:47,722 --> 00:05:50,242
我们在之前讲过一个ACL权限是不是

157
00:05:50,242 --> 00:05:51,202
那在这块人家问你

158
00:05:51,202 --> 00:05:53,082
你是ACL的策略是什么呀

159
00:05:53,082 --> 00:05:54,562
那第四个参数

160
00:05:54,562 --> 00:05:55,898
< No Speech >

161
00:05:55,898 --> 00:05:59,538
第四个参数它代表的是什么呢

162
00:05:59,538 --> 00:06:01,858
就是我们的一个节点类型

163
00:06:01,858 --> 00:06:04,954
< No Speech >

164
00:06:04,954 --> 00:06:06,514
节点的一个类型

165
00:06:06,514 --> 00:06:08,274
就是你是持久的节点

166
00:06:08,274 --> 00:06:09,634
还是临时的节点

167
00:06:09,634 --> 00:06:12,314
还是持久的序号的

168
00:06:12,314 --> 00:06:14,474
还是临时的序号的

169
00:06:14,474 --> 00:06:15,994
所以说这个节点类型

170
00:06:16,074 --> 00:06:17,514
我们有几个选择的方式

171
00:06:17,514 --> 00:06:18,114
是不是

172
00:06:18,314 --> 00:06:19,994
这个是ACL的一个策略

173
00:06:19,994 --> 00:06:22,594
就是这个你是公开的

174
00:06:22,874 --> 00:06:24,434
还是说你是只能读

175
00:06:24,434 --> 00:06:25,354
或者是只能写

176
00:06:25,514 --> 00:06:27,114
我们来一次把这个里面写上

177
00:06:27,274 --> 00:06:29,234
我们打开我们的客户端终端

178
00:06:29,234 --> 00:06:30,114
我们可以看一下

179
00:06:30,114 --> 00:06:30,994
我们这个节点下边

180
00:06:31,154 --> 00:06:31,994
是不是什么都没有

181
00:06:31,994 --> 00:06:33,514
我们就可以随意去玩了

182
00:06:33,514 --> 00:06:34,234
然后在这块

183
00:06:34,234 --> 00:06:35,874
我们直接写一个

184
00:06:35,994 --> 00:06:38,194
斜杠node1

185
00:06:38,194 --> 00:06:38,714
没问题

186
00:06:39,074 --> 00:06:39,954
在这个数据里边

187
00:06:40,074 --> 00:06:41,274
我们就放一个1

188
00:06:41,714 --> 00:06:42,794
ACL的机制

189
00:06:42,954 --> 00:06:43,914
为什么这还报错了

190
00:06:44,434 --> 00:06:45,034
这是因为什么

191
00:06:45,554 --> 00:06:46,794
人家data这个类型

192
00:06:46,914 --> 00:06:48,994
是一个字节数组的类型

193
00:06:48,994 --> 00:06:50,754
所以说我们需要把它转一下子

194
00:06:51,114 --> 00:06:51,994
OK完了

195
00:06:52,234 --> 00:06:53,554
你ACL是一个什么

196
00:06:53,594 --> 00:06:53,994
大家注意

197
00:06:53,994 --> 00:06:55,794
你看它是一个ACL

198
00:06:55,794 --> 00:06:56,194
没问题

199
00:06:56,874 --> 00:06:57,674
我们是不是在这里面

200
00:06:57,674 --> 00:06:58,514
说要写一点东西了

201
00:06:58,674 --> 00:06:59,114
我们这里边

202
00:06:59,114 --> 00:07:00,194
我们写一个叫做

203
00:07:00,194 --> 00:07:01,114
ZOO

204
00:07:01,114 --> 00:07:05,594
这个叫defs.ids.

205
00:07:05,594 --> 00:07:06,434
大家注意你看

206
00:07:06,434 --> 00:07:08,074
这块它有一堆常量

207
00:07:08,314 --> 00:07:09,354
这里有一堆常量

208
00:07:09,554 --> 00:07:10,954
常量让你写什么东西

209
00:07:11,474 --> 00:07:11,834
你看

210
00:07:12,634 --> 00:07:14,674
第一个就是open ACL

211
00:07:14,674 --> 00:07:17,234
它能则代表的就是完全开放

212
00:07:17,394 --> 00:07:18,314
就完全开放

213
00:07:18,314 --> 00:07:19,674
任何属性都能操作

214
00:07:19,954 --> 00:07:20,954
第二个是

215
00:07:21,514 --> 00:07:21,914
这个叫什么

216
00:07:22,074 --> 00:07:24,634
CREADOR

217
00:07:24,794 --> 00:07:27,034
这个也是只有创建者

218
00:07:27,034 --> 00:07:28,594
才能拥有的一个权限

219
00:07:28,594 --> 00:07:30,194
下边还有个read就是读

220
00:07:30,194 --> 00:07:32,434
就是这个叫可以读的一个权限

221
00:07:32,594 --> 00:07:33,354
让大家去选择

222
00:07:33,354 --> 00:07:34,834
我们就选择一个open

223
00:07:34,874 --> 00:07:36,994
就是完全开放的这种方式

224
00:07:37,154 --> 00:07:38,954
然后最后我们需要写一个

225
00:07:38,954 --> 00:07:40,674
我们参数的类型

226
00:07:40,914 --> 00:07:42,074
这个参数的类型

227
00:07:42,074 --> 00:07:43,034
我们写一下

228
00:07:43,554 --> 00:07:44,234
以大家注意

229
00:07:44,474 --> 00:07:45,434
就这个单词

230
00:07:45,434 --> 00:07:47,474
它则代表的就是持久的

231
00:07:48,034 --> 00:07:50,354
然后还有一个就一开头的单词

232
00:07:50,874 --> 00:07:53,674
这个单词它则代表的是临时的

233
00:07:53,834 --> 00:07:56,314
当然再往后还有个

234
00:07:57,034 --> 00:07:58,354
这个单词后边带来个什么

235
00:07:58,434 --> 00:07:59,434
叫SEQ的

236
00:07:59,434 --> 00:08:01,234
就是你后边带SEQ

237
00:08:01,234 --> 00:08:01,834
就代表的是什么

238
00:08:01,914 --> 00:08:03,234
它是一个持久的序号

239
00:08:03,234 --> 00:08:04,234
或者是临时的序号

240
00:08:04,354 --> 00:08:04,794
非常简单

241
00:08:04,794 --> 00:08:07,194
我们就创建一个持久的节点

242
00:08:07,234 --> 00:08:07,754
OK

243
00:08:07,794 --> 00:08:09,554
然后它肯定是需要抛出一个

244
00:08:09,554 --> 00:08:10,754
一成来抛一下

245
00:08:11,274 --> 00:08:11,634
走你

246
00:08:11,634 --> 00:08:13,314
你看我们是不是可以创建出来

247
00:08:13,314 --> 00:08:13,914
一个节点

248
00:08:14,074 --> 00:08:15,234
创建出来一个节点

249
00:08:15,474 --> 00:08:17,394
OK我们来运行起来试试看

250
00:08:17,834 --> 00:08:19,354
我们来看看我们这个节点

251
00:08:19,354 --> 00:08:21,994
它到底就是能不能创建

252
00:08:21,994 --> 00:08:22,354
是不是

253
00:08:22,354 --> 00:08:24,514
我们直接走你

254
00:08:25,434 --> 00:08:27,034
这块我们直接写一句话

255
00:08:27,394 --> 00:08:27,834
写一句话

256
00:08:27,834 --> 00:08:29,874
我们根根根代表的是什么

257
00:08:29,874 --> 00:08:31,614
创建成功

258
00:08:32,314 --> 00:08:34,034
创建节点成功

259
00:08:34,034 --> 00:08:36,474
OK 我们直接一运行

260
00:08:36,474 --> 00:08:37,474
我们来试试啊

261
00:08:37,474 --> 00:08:38,778
< No Speech >

262
00:08:38,778 --> 00:08:40,818
你看这里是不是有个创建成功

263
00:08:40,938 --> 00:08:42,258
我们打开我的命令和终端

264
00:08:42,258 --> 00:08:44,698
在这块我们可以使用ls斜杠

265
00:08:44,698 --> 00:08:45,658
我们可以看一下

266
00:08:45,658 --> 00:08:47,218
这个node1是不是又出现了

267
00:08:47,538 --> 00:08:48,858
这个node1出现了

268
00:08:48,858 --> 00:08:51,058
是不是说明我们刚刚所创建的节点

269
00:08:51,098 --> 00:08:52,098
就已经创建成功了

270
00:08:52,098 --> 00:08:53,538
并且它是一个什么

271
00:08:53,898 --> 00:08:56,378
它是一个持久型的一个节点

272
00:08:56,658 --> 00:08:57,418
没有问题

273
00:08:57,658 --> 00:09:00,938
我们第一个我们学会了如何创建节点

274
00:09:01,138 --> 00:09:02,658
我们再来继续学习

275
00:09:02,658 --> 00:09:04,258
我们该如何什么

276
00:09:04,858 --> 00:09:06,778
如何修改节点

277
00:09:06,778 --> 00:09:10,018
我们来看一下它到底该如何改这个节点

278
00:09:10,018 --> 00:09:10,538
是不是

279
00:09:10,538 --> 00:09:11,778
或者是我们来看一下

280
00:09:11,778 --> 00:09:13,658
我们该如何判断一个节点

281
00:09:13,658 --> 00:09:15,098
它到底是存在还是不存在

282
00:09:15,258 --> 00:09:15,858
来看一下

283
00:09:15,858 --> 00:09:17,538
判断

284
00:09:17,538 --> 00:09:18,714
< No Speech >

285
00:09:18,714 --> 00:09:22,514
判断节点它是否存在

286
00:09:22,514 --> 00:09:23,594
那是否存在呢

287
00:09:23,594 --> 00:09:25,754
我们肯定有一个叫做X

288
00:09:25,754 --> 00:09:28,674
看这个单词是用来判断我们这个节点啊

289
00:09:28,674 --> 00:09:30,354
它到底是存在的呢

290
00:09:30,354 --> 00:09:31,594
还是不是存在的啊

291
00:09:31,594 --> 00:09:32,834
我们直接写一个名

292
00:09:32,834 --> 00:09:35,274
比如说我们来判定这个node

293
00:09:35,274 --> 00:09:36,474
啊node1

294
00:09:36,474 --> 00:09:37,954
然后呢后边呢还有一个参数

295
00:09:37,954 --> 00:09:38,874
我们就写一个num

296
00:09:38,874 --> 00:09:39,994
因为后边是worker嘛

297
00:09:39,994 --> 00:09:40,834
就是我们的监听机制

298
00:09:40,834 --> 00:09:41,994
我们不需要让他去监听

299
00:09:41,994 --> 00:09:42,554
是不是

300
00:09:42,554 --> 00:09:44,394
我们呢所以说这里啊什么都不写

301
00:09:44,394 --> 00:09:45,354
那我们把这两句话呢

302
00:09:45,354 --> 00:09:46,434
我们先给他注释掉啊

303
00:09:46,434 --> 00:09:47,594
我们直接一运行

304
00:09:47,594 --> 00:09:48,554
我们来试试看啊

305
00:09:48,554 --> 00:09:50,114
他的返回结果是什么呢

306
00:09:50,114 --> 00:09:52,154
他的返回结果是stand

307
00:09:52,154 --> 00:09:52,954
是不是啊啊

308
00:09:52,954 --> 00:09:53,914
返回结果是一个stand

309
00:09:53,914 --> 00:09:55,870
我们直接把它返回回来

310
00:09:55,870 --> 00:09:57,402
< No Speech >

311
00:09:57,402 --> 00:09:58,402
走你

312
00:09:58,402 --> 00:09:59,842
然后点toString

313
00:09:59,842 --> 00:10:02,402
我们就可以看到这个节点里面所有的信息了

314
00:10:02,402 --> 00:10:04,522
那如果说这个节点它不存在

315
00:10:04,522 --> 00:10:06,282
就是这里它如果不存在的话

316
00:10:06,282 --> 00:10:07,122
你看看会扯脆

317
00:10:07,122 --> 00:10:08,362
因为没有这个node2是不是

318
00:10:08,362 --> 00:10:09,882
我们在运行的时候你会发现

319
00:10:09,882 --> 00:10:11,002
它会说什么呢

320
00:10:11,002 --> 00:10:12,642
你看直接就报错了是不是

321
00:10:12,642 --> 00:10:13,722
说这个节点它会空

322
00:10:13,722 --> 00:10:15,002
它不存在

323
00:10:15,002 --> 00:10:15,522
OK

324
00:10:15,522 --> 00:10:18,122
然后这个是我们通过这个方法判断这个节点

325
00:10:18,122 --> 00:10:19,082
来注释掉

326
00:10:19,082 --> 00:10:22,202
那我该如何删除一个节点呢

327
00:10:22,202 --> 00:10:24,606
删除节点

328
00:10:24,606 --> 00:10:27,482
< No Speech >

329
00:10:27,482 --> 00:10:30,362
删除节点

330
00:10:30,362 --> 00:10:31,802
那删除节点呢

331
00:10:31,802 --> 00:10:35,922
我们可以通过ZK.delete

332
00:10:35,922 --> 00:10:37,682
就是delete的这种方式

333
00:10:37,682 --> 00:10:38,482
我们来干嘛呢

334
00:10:38,482 --> 00:10:39,762
删除一个节点

335
00:10:39,762 --> 00:10:40,762
那删除节点呢

336
00:10:40,762 --> 00:10:43,242
我们通过delete就可以操作

337
00:10:43,242 --> 00:10:44,002
我们来看一下

338
00:10:44,002 --> 00:10:46,282
里边呢肯定是放的你节点的名字

339
00:10:46,282 --> 00:10:47,962
就是node1是不是

340
00:10:47,962 --> 00:10:49,122
node1

341
00:10:49,122 --> 00:10:50,162
OK

342
00:10:50,162 --> 00:10:52,082
那后边还需要一个什么参数呢

343
00:10:52,082 --> 00:10:53,322
就是我在删除的时候

344
00:10:53,322 --> 00:10:54,922
我需要删除的时候呢

345
00:10:54,922 --> 00:10:56,642
我们还需要一点什么操作

346
00:10:56,642 --> 00:10:59,042
我们来看一下它的原版里面需要的是什么

347
00:10:59,042 --> 00:10:59,962
一个版本

348
00:10:59,962 --> 00:11:01,322
你要删除的是哪个版本

349
00:11:01,322 --> 00:11:02,842
我们写一个-1

350
00:11:02,842 --> 00:11:04,482
就是我们全都删掉

351
00:11:04,482 --> 00:11:05,322
走你

352
00:11:05,322 --> 00:11:06,282
一运行

353
00:11:06,282 --> 00:11:08,002
我们来试试看

354
00:11:08,002 --> 00:11:08,402
然后呢

355
00:11:08,402 --> 00:11:09,882
它这里没反应

356
00:11:09,882 --> 00:11:10,122
是不是

357
00:11:10,122 --> 00:11:10,682
我们在这边呢

358
00:11:10,682 --> 00:11:11,962
我们在ls斜杠

359
00:11:11,962 --> 00:11:12,522
我们来看一下

360
00:11:12,522 --> 00:11:14,522
你看这块是不是就没了

361
00:11:14,522 --> 00:11:15,402
没有了呀

362
00:11:15,402 --> 00:11:16,042
这就是什么呢

363
00:11:16,042 --> 00:11:17,562
把我们这个节点给它干掉了

364
00:11:17,562 --> 00:11:17,882
然后呢

365
00:11:17,882 --> 00:11:18,762
我们再把这个节点呢

366
00:11:18,762 --> 00:11:20,202
给它创建出来

367
00:11:20,202 --> 00:11:21,322
我们还没修改节点呢

368
00:11:21,322 --> 00:11:21,882
是吧

369
00:11:21,882 --> 00:11:22,202
然后呢

370
00:11:22,202 --> 00:11:23,454
我们再运行

371
00:11:23,454 --> 00:11:24,634
< No Speech >

372
00:11:24,634 --> 00:11:26,634
然后这个节点它又创建成功了

373
00:11:26,634 --> 00:11:29,394
所以说在这块我们又出现了我们的这个Node1

374
00:11:30,138 --> 00:11:31,898
又出现了我们这个node1

375
00:11:31,898 --> 00:11:32,658
没问题吧

376
00:11:32,658 --> 00:11:34,538
然后我们再修改一下这个节点

377
00:11:34,538 --> 00:11:35,818
来再把这个注释掉

378
00:11:35,818 --> 00:11:37,098
我们再往上边

379
00:11:37,218 --> 00:11:39,818
然后我们通过zk.set

380
00:11:39,818 --> 00:11:42,538
你看有一个叫做setDate

381
00:11:42,538 --> 00:11:45,578
setDate就是我们需要修改一个节点

382
00:11:45,578 --> 00:11:46,418
你要修改谁呢

383
00:11:46,418 --> 00:11:50,178
我们需要修改的是node1的节点

384
00:11:50,258 --> 00:11:52,498
那第二个参数我们需要写的是什么

385
00:11:52,618 --> 00:11:53,578
我们来看一下

386
00:11:53,618 --> 00:11:55,298
但是你具体的你这个值是什么

387
00:11:55,298 --> 00:11:57,498
我们node1里边写的是什么值

388
00:11:57,938 --> 00:11:59,898
node1里边是不是写了个1

389
00:11:59,898 --> 00:12:00,418
是不是

390
00:12:00,538 --> 00:12:02,738
现在我想在我这里边写一个百战

391
00:12:02,938 --> 00:12:04,418
并且把它转成什么的

392
00:12:04,418 --> 00:12:05,298
字节输足

393
00:12:05,298 --> 00:12:07,258
最后你要改哪个版本

394
00:12:07,298 --> 00:12:10,458
OK我们直接全部一写set

395
00:12:10,618 --> 00:12:11,978
OK完了之后

396
00:12:12,178 --> 00:12:16,218
这个方法它则代表的就是修改节点

397
00:12:16,218 --> 00:12:16,938
太简单了

398
00:12:16,938 --> 00:12:17,858
只要我们参数名

399
00:12:17,858 --> 00:12:20,058
只要是pass代表的就是节点名

400
00:12:20,538 --> 00:12:22,058
如果说是date代表的

401
00:12:22,058 --> 00:12:23,498
就是我们节点的一个数据

402
00:12:23,578 --> 00:12:25,538
这个version代表的是我们节点的版本

403
00:12:25,538 --> 00:12:26,618
我们之前都说了

404
00:12:26,618 --> 00:12:28,178
每个节点它都是有什么

405
00:12:28,178 --> 00:12:29,818
修改的版本的

406
00:12:29,818 --> 00:12:30,178
是不是

407
00:12:30,178 --> 00:12:31,698
以及子节点更改的版本

408
00:12:31,698 --> 00:12:33,498
我们之前在讲节点状态的时候

409
00:12:33,738 --> 00:12:34,898
都已经说过了

410
00:12:34,938 --> 00:12:36,178
OK我们改完之后

411
00:12:36,298 --> 00:12:37,498
我们再来一运行

412
00:12:37,498 --> 00:12:38,910
我们来试试看

413
00:12:39,898 --> 00:12:40,898
没问题是吧

414
00:12:40,898 --> 00:12:41,658
然后打开这

415
00:12:41,658 --> 00:12:43,498
我们通过get这个命令

416
00:12:43,498 --> 00:12:44,258
我们来看一下

417
00:12:44,258 --> 00:12:47,818
node1里边是不是就变成了百战

418
00:12:48,098 --> 00:12:49,978
是不是非常的简单

419
00:12:50,178 --> 00:12:51,538
我们可以通过这个命令

420
00:12:51,538 --> 00:12:55,230
这一句话side data来修改节点

421
00:12:55,802 --> 00:12:57,362
修改完节点之后呢

422
00:12:57,362 --> 00:12:59,602
我们再来继续去学习啊

423
00:12:59,602 --> 00:13:04,842
就是我们还要去学习如何获取这个节点的数据啊

424
00:13:04,842 --> 00:13:08,202
如何获取节点的数据

425
00:13:08,202 --> 00:13:08,722
我们呢

426
00:13:08,722 --> 00:13:11,802
光在那添加数据以及修改数据了

427
00:13:11,802 --> 00:13:13,642
我们没有获取这个数据是不是

428
00:13:13,642 --> 00:13:16,202
那Z可以获取肯定就是点get

429
00:13:16,202 --> 00:13:17,922
那我们看有没有点get date

430
00:13:17,922 --> 00:13:18,122
哎

431
00:13:18,122 --> 00:13:19,122
真有是不是

432
00:13:19,122 --> 00:13:21,362
我们通过get date的这种方式

433
00:13:21,362 --> 00:13:24,802
我们可以看里边第一个肯定放的是你要获取哪个节点吗

434
00:13:24,802 --> 00:13:27,762
我们要获取的是node1的这个节点

435
00:13:27,762 --> 00:13:28,842
那第二个位置呢

436
00:13:28,842 --> 00:13:29,722
第二个参数啊

437
00:13:29,722 --> 00:13:31,122
人家肯定会问你是什么呢

438
00:13:31,122 --> 00:13:32,322
我们直接写上吧

439
00:13:32,322 --> 00:13:32,922
写个true

440
00:13:32,922 --> 00:13:33,282
然后呢

441
00:13:33,282 --> 00:13:33,842
写一个null

442
00:13:33,842 --> 00:13:35,082
< No Speech >

443
00:13:35,082 --> 00:13:35,962
OK

444
00:13:35,962 --> 00:13:36,842
那第二个位置呢

445
00:13:36,842 --> 00:13:40,562
则代表的是我们的一个监听机制

446
00:13:40,562 --> 00:13:42,722
我们之前说过它的监听机制呢

447
00:13:42,722 --> 00:13:43,722
有两种一种呢

448
00:13:43,722 --> 00:13:45,922
是针对于数据来进行监听机制

449
00:13:45,922 --> 00:13:46,522
还有一种呢

450
00:13:46,522 --> 00:13:49,362
是针针对于节点来进行一种监听机制

451
00:13:49,362 --> 00:13:49,802
那所以说呢

452
00:13:49,802 --> 00:13:50,322
这块啊

453
00:13:50,322 --> 00:13:52,162
我们如果设置的是true的话

454
00:13:52,162 --> 00:13:54,762
那则代表的是它直接会拿我们的监听机制

455
00:13:54,762 --> 00:13:56,282
那如果说我们设置的是什么呢

456
00:13:56,282 --> 00:13:59,082
null则不触发这种监听机制啊

457
00:13:59,082 --> 00:13:59,682
OK

458
00:13:59,682 --> 00:14:00,002
然后呢

459
00:14:00,002 --> 00:14:00,722
我们直接啊

460
00:14:00,722 --> 00:14:03,002
第三个就是我们的一个状态信息嘛

461
00:14:03,002 --> 00:14:03,962
我们也没有是吧

462
00:14:03,962 --> 00:14:05,042
也不需要给他

463
00:14:05,042 --> 00:14:05,362
然后呢

464
00:14:05,362 --> 00:14:07,162
我们获取到这个节点数据之后呢

465
00:14:07,162 --> 00:14:07,802
大家注意

466
00:14:07,802 --> 00:14:09,922
它是不是因为我们给数据的时候

467
00:14:09,922 --> 00:14:11,162
它是一个字节数组

468
00:14:11,162 --> 00:14:12,562
你看字节数组给进去的

469
00:14:12,562 --> 00:14:14,482
那我得到的时候是不是也是一个字节数组

470
00:14:14,482 --> 00:14:15,442
怎么办呢

471
00:14:15,442 --> 00:14:17,282
来我们直接new一个什么呢

472
00:14:17,282 --> 00:14:19,922
我们new一个string这个类型

473
00:14:19,922 --> 00:14:20,442
注意

474
00:14:20,442 --> 00:14:21,562
我new一个string类型

475
00:14:21,562 --> 00:14:21,962
并且呢

476
00:14:21,962 --> 00:14:24,242
把这个data我们扔到这个里边

477
00:14:24,242 --> 00:14:24,722
这个时候呢

478
00:14:24,722 --> 00:14:25,922
它就帮我们把这个字节数组呢

479
00:14:25,922 --> 00:14:27,442
又转成一个字母串啊

480
00:14:27,442 --> 00:14:28,882
并且给我们打印出来了啊

481
00:14:28,882 --> 00:14:29,962
我们来看一下

482
00:14:29,962 --> 00:14:32,322
能不能看到你看百战出来了

483
00:14:32,322 --> 00:14:34,762
我们可以通过这个guide data这个方法呢

484
00:14:34,762 --> 00:14:36,482
来获取一个节点

485
00:14:36,482 --> 00:14:36,842
然后呢

486
00:14:36,842 --> 00:14:37,482
完了之后呢

487
00:14:37,482 --> 00:14:38,642
我们来再继续啊

488
00:14:38,642 --> 00:14:39,642
我们还可以

489
00:14:39,642 --> 00:14:43,642
那我如何获取我们的这个节点信息呢

490
00:14:43,642 --> 00:14:46,402
就是我的这个节点下面有哪些节点呀

491
00:14:46,402 --> 00:14:47,602
就是我想干嘛呢

492
00:14:47,602 --> 00:14:49,722
获取节点啊

493
00:14:49,722 --> 00:14:50,882
获取节点

494
00:14:50,882 --> 00:14:51,682
那获取节点呢

495
00:14:51,682 --> 00:14:53,722
我们通过zk点什么呢

496
00:14:53,722 --> 00:14:56,202
叫guide data

497
00:14:56,202 --> 00:14:57,722
就在guide data的时候注意啊

498
00:14:57,722 --> 00:14:58,882
我们这第一个位置

499
00:14:58,882 --> 00:15:01,042
我们是写的是node1是不是

500
00:15:01,042 --> 00:15:01,642
但是啊

501
00:15:01,642 --> 00:15:03,242
如果说我们写成了什么呢

502
00:15:03,242 --> 00:15:03,922
对大家注意啊

503
00:15:03,922 --> 00:15:07,922
我们来写成了一个叫做node1

504
00:15:07,922 --> 00:15:08,642
这是第一个

505
00:15:08,642 --> 00:15:09,402
那第二个呢

506
00:15:09,402 --> 00:15:10,842
我们写了一个什么呢

507
00:15:10,842 --> 00:15:13,402
我们写的是我接受我想要获取一个节点

508
00:15:13,402 --> 00:15:14,270
就是这个Zrome notificationanos拥挂的一个转标

509
00:15:14,270 --> 00:15:15,546
< No Speech >

510
00:15:15,546 --> 00:15:17,346
在这个后边呢我们写一个tool

511
00:15:17,346 --> 00:15:18,386
诶不对啊不对啊

512
00:15:18,386 --> 00:15:20,466
因为我们现在获取的是节点是不是

513
00:15:20,466 --> 00:15:21,026
不是数据

514
00:15:21,026 --> 00:15:22,986
因为获取数据是用get data是不是

515
00:15:22,986 --> 00:15:23,906
那肯定不是这个方法

516
00:15:23,906 --> 00:15:24,826
我们再看一下

517
00:15:24,826 --> 00:15:27,026
我们呢直接点一个什么get

518
00:15:27,026 --> 00:15:28,986
我们来看看有没有什么方法可以用

519
00:15:28,986 --> 00:15:31,906
诶看这个是不是那个节点的意思吧

520
00:15:31,906 --> 00:15:33,386
那我们是不是可以用这个方法是不是

521
00:15:33,386 --> 00:15:34,626
来我们把这个方法写上啊

522
00:15:34,626 --> 00:15:35,826
c开头的一个

523
00:15:35,826 --> 00:15:36,906
然后呢第一个参数呢

524
00:15:36,906 --> 00:15:39,426
我们写的是节点的名字

525
00:15:39,426 --> 00:15:40,266
节点的名字

526
00:15:40,266 --> 00:15:42,866
那第二个位置呢我们直接写个num吧

527
00:15:42,866 --> 00:15:43,386
写个num

528
00:15:43,386 --> 00:15:45,306
因为我们也没有减强机制是不是啊

529
00:15:45,306 --> 00:15:46,106
所以说写个num

530
00:15:46,106 --> 00:15:47,786
如果有的话你就写上什么呢

531
00:15:47,786 --> 00:15:49,066
true啊就ok了

532
00:15:49,066 --> 00:15:50,186
然后在这个位置中

533
00:15:50,186 --> 00:15:51,426
我们既然说我们获得到了

534
00:15:51,426 --> 00:15:52,746
那他得到的是一个什么呢

535
00:15:52,746 --> 00:15:53,866
list啊

536
00:15:53,866 --> 00:15:56,266
然后呢我们既然得到了list

537
00:15:56,266 --> 00:15:57,226
我是不是首先第一步啊

538
00:15:57,226 --> 00:15:59,306
我先要便利出来所有的节点是不是啊

539
00:15:59,306 --> 00:16:00,866
把这个节点都给它便利出来

540
00:16:00,866 --> 00:16:03,166
然后呢我们来运行起来看看

541
00:16:03,166 --> 00:16:04,890
< No Speech >

542
00:16:04,890 --> 00:16:08,250
诶没有 因为我的这个node1里面压根就没有节点

543
00:16:08,250 --> 00:16:09,770
是不是 来给它放几个吧

544
00:16:09,770 --> 00:16:15,930
我们呢在create下发线node1里面放一个a等于a

545
00:16:15,930 --> 00:16:19,530
然后呢在node1里面放一个b等于b

546
00:16:19,530 --> 00:16:22,410
大家注意 你看我有一个a的节点和一个b的节点了吧

547
00:16:22,410 --> 00:16:24,970
那我们在运行的时候它可能会得到两个节点

548
00:16:24,970 --> 00:16:26,730
一个是a一个是b 没问题吧

549
00:16:26,730 --> 00:16:28,690
那这就是我们以上本节的所有内容

550
00:16:28,690 --> 00:16:32,930
我们该如何创建绘画啊以及如何创建节点

551
00:16:32,930 --> 00:16:35,050
以及判断这个节点是否存在

552
00:16:35,050 --> 00:16:37,490
以及如何删除节点 修改节点

553
00:16:37,490 --> 00:16:39,370
获取这个节点的数据啊

554
00:16:39,370 --> 00:16:41,450
以及获取节点啊

555
00:16:41,450 --> 00:16:42,250
非常的简单

556
00:16:42,250 --> 00:16:44,530
那小伙伴呢一定要动起手来

557
00:16:44,530 --> 00:16:46,654
我们下节课再见吧

