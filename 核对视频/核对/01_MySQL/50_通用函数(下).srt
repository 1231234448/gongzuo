1
00:00:00,890 --> 00:00:05,450
上节课我们讲解了常见的通用函数有哪些

2
00:00:05,450 --> 00:00:09,090
并且使用了一下通用函数,完成了一个案例

3
00:00:09,090 --> 00:00:10,850
我们用到哪个通用函数了?

4
00:00:10,850 --> 00:00:16,810
在上节课的案例当中,我们是不是用到了isNone以及if函数来解决问题

5
00:00:16,810 --> 00:00:20,410
那么接下来我们再来使用一下其他的通用函数

6
00:00:20,410 --> 00:00:23,170
看看它能帮助我们解决什么样的问题

7
00:00:23,170 --> 00:00:24,770
好,我们来看实例2

8
00:00:24,770 --> 00:00:28,570
实例2要求计算固原的年报酬

9
00:00:28,570 --> 00:00:32,530
你需要用12乘以月薪,这是它的年报酬

10
00:00:32,530 --> 00:00:39,410
还需要加上它的佣金,等于年薪乘以佣金的百分比

11
00:00:39,410 --> 00:00:44,570
这说的很清楚了,要计算佣金,佣金是等于它的年薪乘以佣金的百分比

12
00:00:44,570 --> 00:00:47,010
那么这里我们需要注意

13
00:00:47,010 --> 00:00:50,970
我们之前在讲解对空值处理的时候我们说过

14
00:00:50,970 --> 00:00:54,930
如果你的表达是运算当中,如果有空值出现

15
00:00:54,930 --> 00:00:57,970
那么它的运算结果必定是空的,对不对?

16
00:00:57,970 --> 00:01:04,130
那我们当时要算月薪并且加上佣金的话

17
00:01:04,130 --> 00:01:07,610
那么如果有的人佣金为空,那么反过来就是空值

18
00:01:07,610 --> 00:01:10,090
连它的年薪都计算不出来了,对不对?

19
00:01:10,090 --> 00:01:11,530
那么怎么解决这个问题呢?

20
00:01:11,530 --> 00:01:14,730
当时我们说了,在后面我们会解决掉

21
00:01:14,730 --> 00:01:18,570
那么这里我们就要用到通用函数来解决这个问题了

22
00:01:18,570 --> 00:01:22,850
怎么解决呢?如果它的佣金是空的

23
00:01:22,850 --> 00:01:25,850
那让它用一个零来代替不就可以了吗?

24
00:01:25,850 --> 00:01:27,210
对吧,同学们?

25
00:01:27,210 --> 00:01:30,610
好,那我们来看一下这个实现的方式

26
00:01:30,610 --> 00:01:34,370
首先select last name,要last name列celery

27
00:01:34,370 --> 00:01:36,290
然后还要commission pct

28
00:01:36,290 --> 00:01:39,410
如果commission pct为空的时候用零显示

29
00:01:39,410 --> 00:01:41,410
那这块是不是得用到一个ifnone了

30
00:01:41,410 --> 00:01:44,330
注意看ifnone,ifnone函数的作用是什么?

31
00:01:44,330 --> 00:01:47,970
当第一个参数不为空时返回第一个参数的值

32
00:01:47,970 --> 00:01:51,130
当第一个参数为空时返回第二个参数的值

33
00:01:51,130 --> 00:01:54,970
这个函数的特点恰恰是符合我们的需求的

34
00:01:54,970 --> 00:01:58,410
对吧,我们先看投影佣金这一列

35
00:01:58,410 --> 00:02:01,770
如果佣金不为空则显示佣金的值

36
00:02:01,770 --> 00:02:04,450
如果佣金为空则显示零

37
00:02:04,450 --> 00:02:07,130
这不用ifnone就可以解决了吗?

38
00:02:07,130 --> 00:02:09,010
把空换成零,对不对?

39
00:02:09,010 --> 00:02:12,530
然后接下来从这开始才是计算它的年薪

40
00:02:12,530 --> 00:02:15,970
并且年薪加上年佣金的百分比

41
00:02:15,970 --> 00:02:18,410
celery乘12,这是年薪没有问题吧

42
00:02:18,410 --> 00:02:21,290
还要加上它的年薪的佣金的百分比

43
00:02:21,290 --> 00:02:24,970
那就是年薪乘以佣金的百分比

44
00:02:24,970 --> 00:02:28,290
如果有佣金的百分比,那就是年薪的佣金的百分比

45
00:02:28,290 --> 00:02:30,410
如果没有佣金,那就是零

46
00:02:30,410 --> 00:02:34,010
零再加上年薪12,那就是它的工资

47
00:02:34,010 --> 00:02:37,050
就是celery乘12的年薪,没有佣金呗

48
00:02:37,050 --> 00:02:38,810
是不是很好理解这个问题啊?

49
00:02:38,810 --> 00:02:41,246
好,那我们接下来实现一下啊

50
00:02:41,246 --> 00:02:42,330
< No Speech >

51
00:02:42,330 --> 00:02:49,330
首先我们先把表定位出来

52
00:02:49,330 --> 00:02:51,194
< No Speech >

53
00:02:51,194 --> 00:02:58,074
然后他要什么呢 要last name 然后要salary

54
00:02:58,810 --> 00:03:01,170
然后还要commission pct 是吧

55
00:03:01,170 --> 00:03:04,890
这里我们给他定义了一个定义到了一个ifnum函数当中

56
00:03:04,890 --> 00:03:07,570
如果commission pct为空则返回0是吧

57
00:03:07,570 --> 00:03:09,970
那就ifnum用一下这个函数

58
00:03:09,970 --> 00:03:14,290
然后commission pct然后0对吧

59
00:03:14,290 --> 00:03:18,090
然后接下来从这开始才是计算它的年金

60
00:03:18,090 --> 00:03:21,170
加上它的年佣金的百分比对不对

61
00:03:21,170 --> 00:03:22,730
年薪怎么计算

62
00:03:22,730 --> 00:03:27,134
那就是salary乘12

63
00:03:27,134 --> 00:03:28,506
< No Speech >

64
00:03:28,506 --> 00:03:31,106
对吧 同学们 这就是他的年薪

65
00:03:31,106 --> 00:03:34,826
然后加上他还有一个年佣金的百分比

66
00:03:34,826 --> 00:03:37,826
年佣金的百分比就是年薪乘以他的佣金的百分比

67
00:03:37,826 --> 00:03:38,226
对不对

68
00:03:38,226 --> 00:03:40,226
那就是再一个括号

69
00:03:40,226 --> 00:03:41,426
< No Speech >

70
00:03:41,426 --> 00:03:42,346
salary

71
00:03:42,386 --> 00:03:44,946
然后乘以12

72
00:03:45,306 --> 00:03:46,266
乘以12

73
00:03:46,266 --> 00:03:48,546
然后再乘以佣金

74
00:03:48,706 --> 00:03:50,186
那么在乘以佣金的时候

75
00:03:50,186 --> 00:03:51,546
有的人没有佣金

76
00:03:51,546 --> 00:03:52,946
没有佣金的返回就是空了

77
00:03:52,946 --> 00:03:55,226
空再跟年薪运算又返回空了

78
00:03:55,226 --> 00:03:55,826
对不对

79
00:03:55,866 --> 00:03:56,586
所以怎么办呢

80
00:03:56,586 --> 00:03:58,266
我们得把空换成零

81
00:03:58,266 --> 00:04:00,186
这样没有佣金的人

82
00:04:00,186 --> 00:04:01,226
他无法他就不

83
00:04:01,226 --> 00:04:04,146
他在换算年佣金百分比的时候

84
00:04:04,146 --> 00:04:05,106
这直接是零了

85
00:04:05,106 --> 00:04:06,866
零再跟年薪相加

86
00:04:06,866 --> 00:04:08,706
他不会返回空

87
00:04:08,946 --> 00:04:09,906
那就是年薪的值

88
00:04:09,906 --> 00:04:10,746
年薪值加零

89
00:04:10,746 --> 00:04:11,786
那不就年薪的值吗

90
00:04:11,786 --> 00:04:12,386
明白意思吧

91
00:04:12,386 --> 00:04:15,346
所以这我们肯定要用到一个if not函数

92
00:04:15,346 --> 00:04:16,146
再去做判断

93
00:04:16,146 --> 00:04:18,026
然后commission pct

94
00:04:18,026 --> 00:04:19,226
第二个参数是零

95
00:04:19,226 --> 00:04:23,998
然后起个别名叫an下环线sl

96
00:04:24,570 --> 00:04:25,570
这样就可以了

97
00:04:25,570 --> 00:04:26,570
能明白了同学们

98
00:04:26,570 --> 00:04:26,810
哎

99
00:04:26,810 --> 00:04:28,610
接下来我们运行一下看看结果啊

100
00:04:28,610 --> 00:04:29,330
运行

101
00:04:29,690 --> 00:04:30,530
看到了吗

102
00:04:30,570 --> 00:04:31,450
这是年薪

103
00:04:31,450 --> 00:04:32,650
然后这是佣金零

104
00:04:32,650 --> 00:04:34,250
然后如果有佣金的

105
00:04:34,250 --> 00:04:35,330
加上佣金百分比

106
00:04:35,330 --> 00:04:35,570
是吧

107
00:04:35,570 --> 00:04:36,210
计算年薪

108
00:04:36,210 --> 00:04:36,850
如果没有呢

109
00:04:36,850 --> 00:04:38,130
那就是计算年薪了

110
00:04:38,490 --> 00:04:38,690
啊

111
00:04:38,690 --> 00:04:39,410
这是月薪

112
00:04:39,410 --> 00:04:40,250
这是年薪

113
00:04:40,410 --> 00:04:41,130
这是月薪

114
00:04:41,130 --> 00:04:41,730
这是年薪

115
00:04:41,730 --> 00:04:43,250
以及年薪加上百分比

116
00:04:43,250 --> 00:04:44,170
佣金百分比的

117
00:04:44,170 --> 00:04:44,490
是吧

118
00:04:44,490 --> 00:04:45,690
没有佣金百分比的

119
00:04:45,690 --> 00:04:46,530
那就是计算的

120
00:04:46,530 --> 00:04:47,650
就是他的年薪了

121
00:04:48,090 --> 00:04:48,890
明白了同学们

122
00:04:48,890 --> 00:04:49,050
哎

123
00:04:49,050 --> 00:04:50,050
这是他的月薪啊

124
00:04:50,170 --> 00:04:50,730
OK

125
00:04:50,770 --> 00:04:51,250
这样呢

126
00:04:51,250 --> 00:04:53,290
我们就通过EFNUM函数解决了

127
00:04:53,290 --> 00:04:54,690
对于空值的

128
00:04:54,810 --> 00:04:56,770
防止空值参与到

129
00:04:56,890 --> 00:04:58,690
具体运算当中的一个问题

130
00:04:58,690 --> 00:04:59,090
啊

131
00:04:59,090 --> 00:04:59,410
好

132
00:04:59,410 --> 00:05:00,170
这是实验

133
00:05:00,170 --> 00:05:02,174
我们再来看实例三

134
00:05:02,778 --> 00:05:05,818
我们看一下示例三

135
00:05:05,818 --> 00:05:11,098
示例三它要求查询员工表显示他们的名字

136
00:05:11,098 --> 00:05:16,098
名字长度该列为1

137
00:05:16,098 --> 00:05:18,098
也就是说还要计算它名字的长度

138
00:05:18,098 --> 00:05:20,098
这个列的名字为1

139
00:05:20,098 --> 00:05:23,698
然后姓氏的长度该列为2

140
00:05:23,698 --> 00:05:24,938
在蕊造的列当中

141
00:05:24,938 --> 00:05:28,418
如果名字与姓氏长度相同则显示空

142
00:05:28,418 --> 00:05:31,098
如果不相同则显示名字的长度

143
00:05:31,098 --> 00:05:33,578
我们先来看这几个问题怎么解决

144
00:05:33,578 --> 00:05:36,098
首先第一个显示名字

145
00:05:36,098 --> 00:05:38,698
名字的长度怎么办

146
00:05:38,698 --> 00:05:39,858
名字是谁

147
00:05:39,858 --> 00:05:42,498
我们表里有first name有last name

148
00:05:42,498 --> 00:05:45,618
那么国外的这个人的名字是名字在前

149
00:05:45,618 --> 00:05:46,298
姓氏在后

150
00:05:46,298 --> 00:05:49,578
所以first name指的是名

151
00:05:49,578 --> 00:05:51,018
last name指的是姓

152
00:05:51,018 --> 00:05:51,458
对不对

153
00:05:51,458 --> 00:05:53,538
那么名字那就是last name

154
00:05:53,538 --> 00:05:55,578
对不对

155
00:05:55,578 --> 00:05:56,698
它名字

156
00:05:56,698 --> 00:05:59,098
然后姓氏

157
00:05:59,098 --> 00:05:59,618
对吧

158
00:05:59,618 --> 00:06:01,418
名字是first name

159
00:06:01,418 --> 00:06:02,698
姓氏是last name

160
00:06:02,698 --> 00:06:03,098
对不对

161
00:06:03,098 --> 00:06:04,618
名字在前姓氏在后

162
00:06:04,618 --> 00:06:07,418
那名字就是first name

163
00:06:07,418 --> 00:06:09,218
长度就是length

164
00:06:09,218 --> 00:06:10,578
这是不是我们之前学过的

165
00:06:10,578 --> 00:06:12,218
可以用我们学过的字符串函数

166
00:06:12,218 --> 00:06:14,818
有一个length计算长度的这样一个函数

167
00:06:14,818 --> 00:06:15,378
是吧

168
00:06:15,378 --> 00:06:17,298
把first name放到length当中

169
00:06:17,298 --> 00:06:19,178
这样就可以返回名字的长度了

170
00:06:19,178 --> 00:06:21,098
然后命名为1

171
00:06:21,098 --> 00:06:22,258
然后姓氏

172
00:06:22,258 --> 00:06:24,098
姓氏指的就是last name

173
00:06:24,098 --> 00:06:25,258
last name的长度

174
00:06:25,258 --> 00:06:26,298
那仍然是用length

175
00:06:26,298 --> 00:06:27,818
然后把last name放到里面

176
00:06:27,818 --> 00:06:29,618
来返回姓氏的长度

177
00:06:29,618 --> 00:06:30,018
对不对

178
00:06:30,018 --> 00:06:32,098
并命名为part2

179
00:06:32,098 --> 00:06:34,738
然后他又要求在result列当中

180
00:06:34,738 --> 00:06:36,338
说明有一个列子名叫result

181
00:06:36,338 --> 00:06:37,658
这个列当中要干嘛

182
00:06:37,658 --> 00:06:40,418
如果名字与姓氏的长度相同

183
00:06:40,418 --> 00:06:41,258
则显示空

184
00:06:41,258 --> 00:06:42,338
如果不相同

185
00:06:42,338 --> 00:06:44,418
则显示名字的长度

186
00:06:44,418 --> 00:06:45,538
这个应该用谁判断

187
00:06:45,538 --> 00:06:46,858
大家考虑一下

188
00:06:46,858 --> 00:06:49,258
很显然会用到none if

189
00:06:49,258 --> 00:06:49,898
对吧

190
00:06:49,898 --> 00:06:51,338
if none再强调一遍

191
00:06:51,338 --> 00:06:53,938
if none有一个函数叫if none

192
00:06:53,938 --> 00:06:54,218
对吧

193
00:06:54,218 --> 00:06:55,138
我们刚刚说过的

194
00:06:55,138 --> 00:06:56,058
它的特点是

195
00:06:56,058 --> 00:06:57,578
如果第一个参数为空

196
00:06:57,578 --> 00:06:58,538
则返回第二个参数

197
00:06:58,538 --> 00:06:59,818
如果第一个参数不为空

198
00:06:59,818 --> 00:07:01,178
则返回第一个参数的值

199
00:07:01,178 --> 00:07:02,058
这是if none

200
00:07:02,058 --> 00:07:03,018
none if是什么

201
00:07:03,018 --> 00:07:04,458
是判断两个值

202
00:07:04,458 --> 00:07:05,658
它也需要两个参数

203
00:07:05,658 --> 00:07:07,578
是判断两个值是否相同

204
00:07:07,578 --> 00:07:09,698
如果两个值相同

205
00:07:09,698 --> 00:07:10,818
则返回空

206
00:07:10,818 --> 00:07:12,218
如果两个参数不相同

207
00:07:12,218 --> 00:07:13,738
则返回第一个参数的值

208
00:07:13,738 --> 00:07:14,818
那你看

209
00:07:14,818 --> 00:07:15,938
对于这样的问题

210
00:07:15,938 --> 00:07:17,818
我们是不是完全可以使用none if

211
00:07:17,818 --> 00:07:18,258
来解决

212
00:07:18,258 --> 00:07:19,258
是吧

213
00:07:19,258 --> 00:07:21,258
把谁放到第一个参数里

214
00:07:21,258 --> 00:07:23,138
他说如果不相同

215
00:07:23,138 --> 00:07:25,378
则显示名字的长度

216
00:07:25,378 --> 00:07:26,098
那很显然

217
00:07:26,098 --> 00:07:28,138
第一个参数是first name

218
00:07:28,138 --> 00:07:28,538
对吧

219
00:07:28,538 --> 00:07:30,898
但是它要的是长度是否相同

220
00:07:30,898 --> 00:07:31,818
把first name

221
00:07:31,818 --> 00:07:32,978
是不是还得放到一个length

222
00:07:32,978 --> 00:07:33,578
参数当中

223
00:07:33,578 --> 00:07:33,938
对吧

224
00:07:33,938 --> 00:07:34,418
逗号

225
00:07:34,418 --> 00:07:35,138
第二个参数

226
00:07:35,138 --> 00:07:36,578
仍然掉一个length参数

227
00:07:36,578 --> 00:07:39,458
去聚散姓氏的长度

228
00:07:39,458 --> 00:07:40,098
对吧

229
00:07:40,098 --> 00:07:41,898
当两个值都相同时返回空

230
00:07:41,898 --> 00:07:44,178
如果当名字不相同的时候

231
00:07:44,178 --> 00:07:45,458
则返回名字的

232
00:07:45,458 --> 00:07:47,898
不相同返回第一个参数的长度

233
00:07:47,898 --> 00:07:49,418
是不是就符合我们这个需求了

234
00:07:49,418 --> 00:07:50,498
好

235
00:07:50,498 --> 00:07:52,286
那我们去实现一下

236
00:07:53,178 --> 00:07:54,698
解释比较简单的是吧

237
00:07:55,378 --> 00:07:57,138
好嗯select

238
00:07:57,138 --> 00:08:00,030
然后from 安普拉伊

239
00:08:00,030 --> 00:08:02,266
< No Speech >

240
00:08:02,266 --> 00:08:04,186
然后没有什么选择条件 是吧

241
00:08:04,186 --> 00:08:06,826
接下来它投影哪些列呢

242
00:08:06,826 --> 00:08:08,666
first name

243
00:08:08,666 --> 00:08:10,586
然后呢还有一个length

244
00:08:10,586 --> 00:08:12,706
它要计算first name的长度

245
00:08:12,706 --> 00:08:14,466
这个是名字嘛 是吧

246
00:08:14,466 --> 00:08:15,866
first name

247
00:08:15,866 --> 00:08:17,866
然后 逗号

248
00:08:17,866 --> 00:08:18,786
还要计算什么

249
00:08:18,786 --> 00:08:20,906
last name以及last name的长度 是吧

250
00:08:20,906 --> 00:08:22,026
这是姓氏

251
00:08:22,026 --> 00:08:22,986
last name

252
00:08:22,986 --> 00:08:24,586
然后length

253
00:08:24,586 --> 00:08:26,586
然后last

254
00:08:26,586 --> 00:08:28,218
< No Speech >

255
00:08:28,218 --> 00:08:36,538
内部的长度啊 然后还有两个别名是吧 别名这个叫XPAR2

256
00:08:36,538 --> 00:08:37,946
< No Speech >

257
00:08:37,946 --> 00:08:39,746
这个是XPART1

258
00:08:39,746 --> 00:08:45,146
< No Speech >

259
00:08:45,146 --> 00:08:53,066
OK,然后他还要什么呢?接下来是不是就要去判断这个名字跟姓氏的长度了

260
00:08:53,066 --> 00:09:02,186
是吧,那这里就要用none if,然后第一个参数length,谁呢?名字,那是first name

261
00:09:02,186 --> 00:09:07,946
倒号,第二个参数length就是他的姓氏,last name,对吧

262
00:09:07,946 --> 00:09:19,946
然后起一个别名叫result,如果这两个人的名字跟姓氏相同,那么则返回空

263
00:09:19,946 --> 00:09:26,746
如果不相同呢,则返回这个名字的值,是吧,这是none if的一个函数的特点

264
00:09:26,746 --> 00:09:31,326
好,接下来我们运行看一下结果,看到了吗同学们?

265
00:09:32,058 --> 00:09:34,938
首先这是他的这个名字的长度

266
00:09:34,938 --> 00:09:36,338
这是他姓氏的长度

267
00:09:36,338 --> 00:09:36,698
是吧

268
00:09:36,698 --> 00:09:40,818
然后result5说明他们的名字跟姓氏的字符长度不相同

269
00:09:40,858 --> 00:09:42,938
不相同则返回名字的长度5嘛

270
00:09:42,938 --> 00:09:43,418
是不是

271
00:09:43,418 --> 00:09:43,818
哎

272
00:09:44,098 --> 00:09:45,538
往下看有没有空的呢

273
00:09:45,538 --> 00:09:46,098
有

274
00:09:46,218 --> 00:09:46,818
看到了吗

275
00:09:46,818 --> 00:09:47,458
返回空

276
00:09:47,498 --> 00:09:50,298
说明他的名字跟他的姓氏的长度是相同的

277
00:09:50,298 --> 00:09:51,298
那则返回空

278
00:09:51,978 --> 00:09:52,458
看到了吧

279
00:09:52,458 --> 00:09:52,938
同学们

280
00:09:52,978 --> 00:09:56,498
这样呢我们通过这个none if就解决了这个问题

281
00:09:56,498 --> 00:09:56,898
啊

282
00:09:57,218 --> 00:09:57,738
好

283
00:09:57,978 --> 00:09:59,658
这是这个示例3

284
00:09:59,698 --> 00:10:00,658
我们再看

285
00:10:00,658 --> 00:10:02,218
再来完成一个示例啊

286
00:10:02,258 --> 00:10:03,098
示例4

287
00:10:03,738 --> 00:10:04,138
呃

288
00:10:04,138 --> 00:10:06,618
示例4呢是要求查询员工表

289
00:10:06,658 --> 00:10:08,538
显示他们的名字

290
00:10:08,578 --> 00:10:12,418
如果commission pct这个值是非空的

291
00:10:12,458 --> 00:10:13,458
则显示它

292
00:10:13,498 --> 00:10:15,498
如果commission pct是空

293
00:10:15,498 --> 00:10:16,898
则显示salary

294
00:10:17,058 --> 00:10:17,458
啊

295
00:10:17,498 --> 00:10:20,498
如果commission pct和salary值都是空

296
00:10:20,498 --> 00:10:21,658
那么显示10

297
00:10:21,978 --> 00:10:24,578
在结果中对佣金进行排序

298
00:10:24,618 --> 00:10:24,938
哎

299
00:10:24,938 --> 00:10:26,458
同学们我们分析一下这个题啊

300
00:10:26,458 --> 00:10:27,298
我们可以看到

301
00:10:27,658 --> 00:10:28,938
他要求的是

302
00:10:28,938 --> 00:10:31,138
如果某个为空则显示谁

303
00:10:31,178 --> 00:10:33,138
如果则显示的这个又为空

304
00:10:33,138 --> 00:10:34,178
再往后判断

305
00:10:34,218 --> 00:10:36,298
这很显然是多空的一个判断

306
00:10:36,458 --> 00:10:38,898
那么这个时候我们肯定会想到哪个函数呢

307
00:10:38,938 --> 00:10:40,538
是不是想到这个coreless啊

308
00:10:40,658 --> 00:10:42,658
coreless可以是对多空判断的

309
00:10:42,658 --> 00:10:43,098
对不对

310
00:10:43,098 --> 00:10:43,458
哎

311
00:10:43,498 --> 00:10:43,898
好

312
00:10:44,138 --> 00:10:46,618
那么我们来看一下这个题该怎么去实现啊

313
00:10:46,618 --> 00:10:48,382
这个是比较简单的了

314
00:10:48,382 --> 00:10:51,098
< No Speech >

315
00:10:51,098 --> 00:10:55,098
好 我们先select

316
00:10:55,098 --> 00:10:56,418
哎呀啊啊阑珊

317
00:10:56,418 --> 00:10:57,530
< No Speech >

318
00:10:57,530 --> 00:10:58,610
I'm plate

319
00:10:58,610 --> 00:10:59,642
< No Speech >

320
00:10:59,642 --> 00:11:01,962
没有什么这个数据的选择是吧

321
00:11:01,962 --> 00:11:03,602
就没有什么条件了

322
00:11:03,642 --> 00:11:04,922
然后他要什么呢

323
00:11:04,922 --> 00:11:06,322
要显示他们的名字

324
00:11:06,322 --> 00:11:07,482
那就是last name

325
00:11:08,362 --> 00:11:09,202
然后他说了

326
00:11:09,202 --> 00:11:11,442
如果commission PCT值是非空的

327
00:11:11,442 --> 00:11:12,202
显示它

328
00:11:12,282 --> 00:11:13,842
如果它为空则显示salary

329
00:11:13,882 --> 00:11:15,162
如果salary也是空的

330
00:11:15,202 --> 00:11:16,602
那就显示10是吧

331
00:11:16,602 --> 00:11:18,522
那这很显然需要用到一个

332
00:11:18,722 --> 00:11:20,322
coverless函数了

333
00:11:20,322 --> 00:11:20,762
是吧

334
00:11:20,762 --> 00:11:22,082
coverless

335
00:11:22,082 --> 00:11:23,602
然后第一个参数

336
00:11:23,642 --> 00:11:25,362
commission PCT

337
00:11:25,402 --> 00:11:26,722
如果它为空

338
00:11:26,722 --> 00:11:29,662
那么显示salary

339
00:11:29,662 --> 00:11:31,258
< No Speech >

340
00:11:31,258 --> 00:11:35,902
对吧 如果sat又为空呢 那最后给它一个10 这显示10

341
00:11:36,442 --> 00:11:40,842
明白这些吧同学们 这是靠Lines函数的使用 我们运行

342
00:11:40,842 --> 00:11:47,706
< No Speech >

343
00:11:47,706 --> 00:11:48,706
这是出来了吧

344
00:11:48,706 --> 00:11:56,546
然后我们看啊这都是有用金的显示用金

345
00:11:56,546 --> 00:11:58,506
没有用金的显示薪水

346
00:11:58,506 --> 00:12:00,026
没有薪水的显示实

347
00:12:00,026 --> 00:12:00,986
我们看一下

348
00:12:00,986 --> 00:12:03,706
你看这些是没有用金的

349
00:12:04,546 --> 00:12:05,906
这些是有用金的

350
00:12:05,906 --> 00:12:07,146
上面我们看到有薪水的

351
00:12:07,146 --> 00:12:08,906
都是这个什么

352
00:12:09,146 --> 00:12:09,986
没有用金的

353
00:12:09,986 --> 00:12:11,066
没有用金返回薪水

354
00:12:11,066 --> 00:12:11,626
是吧

355
00:12:11,626 --> 00:12:12,906
那我们看到零了

356
00:12:12,906 --> 00:12:14,186
说明这些都是有用金的

357
00:12:14,186 --> 00:12:15,946
有用金的那commission PCT

358
00:12:15,946 --> 00:12:17,586
那不就不返回税率

359
00:12:17,586 --> 00:12:18,946
而是返回commission PCT了

360
00:12:18,946 --> 00:12:19,586
对吧

361
00:12:19,586 --> 00:12:21,306
然后后面我们看还有什么数据

362
00:12:21,306 --> 00:12:23,034
< No Speech >

363
00:12:23,034 --> 00:12:26,754
你像这个Kevin O'Drew,这数据是我们后添加的

364
00:12:26,754 --> 00:12:29,854
他既没有佣金也没有薪水,那这反为实

365
00:12:30,458 --> 00:12:34,498
明白了吗?这就是Coreless的使用

366
00:12:34,498 --> 00:12:36,498
好,我们再来看最后一个题

367
00:12:36,498 --> 00:12:39,098
< No Speech >

368
00:12:39,098 --> 00:12:45,778
查询员工表,如果JobID是IT PROG的,薪水增加10%

369
00:12:45,778 --> 00:12:49,778
如果JobID是ST CLICK的,薪水增加15%

370
00:12:49,778 --> 00:12:53,978
如果JobID是SARP的,薪水增加20%

371
00:12:53,978 --> 00:12:57,378
对于所有其他工作角色不增加薪水

372
00:12:57,378 --> 00:12:59,378
你看这个题,我们分析一下

373
00:12:59,378 --> 00:13:04,098
这个题最典型的一个特点是,它要有多个条件判断

374
00:13:04,098 --> 00:13:06,498
如果JobID是他的,怎么怎么样

375
00:13:06,498 --> 00:13:08,498
如果JobID是他的,怎么怎么样

376
00:13:08,498 --> 00:13:11,498
如果JobID是他的,又怎么怎么样

377
00:13:11,498 --> 00:13:15,578
那对于这种判断,肯定不能用correlate

378
00:13:15,578 --> 00:13:17,378
correlate是对空判断的

379
00:13:17,378 --> 00:13:19,978
那么对于这样的运算,这样的判断我们应该用谁啊

380
00:13:19,978 --> 00:13:23,978
肯定是case函数了,case函数是可以做条件的判断

381
00:13:23,978 --> 00:13:25,778
对不对,类似于我们家里的

382
00:13:25,778 --> 00:13:29,178
if,else,if,else,if,else,if,最后一个else

383
00:13:29,178 --> 00:13:33,698
对不对,所以说这道题我们一分析,只要往通用函数上一想

384
00:13:33,698 --> 00:13:38,698
马上就能判断出这个事儿肯定得用case函数来解决

385
00:13:38,698 --> 00:13:42,698
好,我们来写一个,这也比较简单

386
00:13:42,698 --> 00:13:44,978
我们把这里面换一下就可以了

387
00:13:44,978 --> 00:13:51,070
我们先看他要什么,要lastName,要JobID,然后还要Celerate

388
00:13:51,738 --> 00:13:55,978
对吧 然后呢 他的需求是用jobid来判断

389
00:13:55,978 --> 00:13:58,898
看看他的部门编号是不是这些特定的

390
00:13:58,898 --> 00:14:03,098
如果是特定的 那么他的薪水的增长是有变化的

391
00:14:03,098 --> 00:14:06,858
是吧 好 那这里我们就要用到case了

392
00:14:06,858 --> 00:14:12,938
case啊 然后用谁来作为条件判断的列呢

393
00:14:12,938 --> 00:14:16,658
这个我要取jobid的值来作为条件的判断 是吧

394
00:14:16,658 --> 00:14:19,178
然后判断的条件是什么呢 问

395
00:14:19,178 --> 00:14:25,018
如果jobid的值是it-prog

396
00:14:25,018 --> 00:14:26,298
< No Speech >

397
00:14:26,298 --> 00:14:29,258
是这个部门的,那么他的薪水就要增长了

398
00:14:29,258 --> 00:14:33,138
那就是任了,对吧?增长多少呢?增长10%

399
00:14:33,138 --> 00:14:37,178
那么我们现在要计算的是,他增长10%以后

400
00:14:37,178 --> 00:14:41,218
再加上原工资的,就增加完10%以后的工资是多少

401
00:14:41,218 --> 00:14:45,058
对吧?那么在这个数据库当中啊,对于百分比

402
00:14:45,058 --> 00:14:48,778
我们怎么去运算呢?这个百分比我们可以把它转化成小数

403
00:14:48,778 --> 00:14:53,018
是吧?10%的小数是多少?是0.1,或者是吧?0.1

404
00:14:53,018 --> 00:14:56,098
那么再加上他原来的工资,还要把他原来的工资算进去

405
00:14:56,098 --> 00:15:00,298
那就是乘以1.1,不就是他的增长10%以后的一个薪水了嘛

406
00:15:00,298 --> 00:15:06,750
明白我的意思吧?所以这是用1.10乘以薪水

407
00:15:07,258 --> 00:15:11,338
明白这意思吧?这是增长10%以后的一个结果

408
00:15:11,338 --> 00:15:15,138
不是增长10%,不是计算那个10%是多少

409
00:15:15,138 --> 00:15:17,578
是增长10%,薪水增长10%以后的

410
00:15:17,578 --> 00:15:20,858
所以肯定是1.10×celerate

411
00:15:20,858 --> 00:15:25,178
OK,然后接下来呢,这是IT PROG部门的

412
00:15:25,178 --> 00:15:27,538
我们再来,还有其他部门的呢?是吧

413
00:15:27,538 --> 00:15:32,126
还有什么部门呢?还有这个ST下滑线,CLICK是吧

414
00:15:32,826 --> 00:15:33,826
ERK

415
00:15:34,266 --> 00:15:35,266
ERK

416
00:15:35,266 --> 00:15:36,906
然后 继续

417
00:15:36,906 --> 00:15:38,554
< No Speech >

418
00:15:38,554 --> 00:15:43,794
如果是这个部门的,他的薪水增长是15%

419
00:15:43,794 --> 00:15:53,534
那就是1.15×薪水,这样就可以算出他薪水增长完以后的结果了,是吧,salary啊

420
00:15:53,534 --> 00:15:56,026
< No Speech >

421
00:15:56,026 --> 00:15:57,386
然后呢再来

422
00:15:57,386 --> 00:16:02,426
< No Speech >

423
00:16:02,426 --> 00:16:11,546
然后是哪个部门呢 是这个SA下滑线ERREP是吧

424
00:16:11,546 --> 00:16:14,490
< No Speech >

425
00:16:14,490 --> 00:16:20,610
如果是这个部门的薪水增长20% 那就是1.20×salary

426
00:16:20,610 --> 00:16:21,722
< No Speech >

427
00:16:21,722 --> 00:16:30,202
对吧 然后呢 如果不是这三个部门的 如果不是这三个部门的 那么给他一个else

428
00:16:30,202 --> 00:16:31,226
< No Speech >

429
00:16:31,226 --> 00:16:33,026
不做任何薪水的增长

430
00:16:33,026 --> 00:16:34,426
直接显示薪水就可以了

431
00:16:34,426 --> 00:16:35,934
那就是Salary嘛

432
00:16:35,934 --> 00:16:38,874
< No Speech >

433
00:16:38,874 --> 00:16:43,354
对吧同学们 然后不要忘了最后有一个end

434
00:16:43,354 --> 00:16:47,314
因为我说了KISS函数的特点是以KISS开头以end结尾的嘛

435
00:16:47,314 --> 00:16:49,354
所以这肯定有一个end的 明白我的意思吧

436
00:16:49,354 --> 00:16:54,494
然后给他起个别名 这个别名我们就我们跟他一样吧

437
00:16:54,494 --> 00:16:56,058
< No Speech >

438
00:16:56,058 --> 00:16:58,974
很好

439
00:16:59,866 --> 00:17:04,798
ED,然后不大写了,下滑线,Celery

440
00:17:04,798 --> 00:17:06,554
< No Speech >

441
00:17:06,554 --> 00:17:08,314
然后��

442
00:17:08,314 --> 00:17:11,034
< No Speech >

443
00:17:11,034 --> 00:17:15,634
对吧同学们 这样我们就实现了这样的一个功能 我们来看一下结果啊 运行

444
00:17:15,634 --> 00:17:17,754
好 我们看一下有Tool

445
00:17:17,754 --> 00:17:20,446
它说

446
00:17:20,446 --> 00:17:44,186
< No Speech >

447
00:17:44,186 --> 00:17:46,046
我们看一下是不是格式

448
00:17:46,046 --> 00:17:48,058
< No Speech >

449
00:17:48,058 --> 00:17:49,058
啊 是

450
00:17:49,978 --> 00:17:52,178
没有逗号啊,这没有逗号

451
00:17:52,178 --> 00:17:54,298
< No Speech >

452
00:17:54,298 --> 00:17:58,138
这个问认的后面是没有逗号的

453
00:17:58,874 --> 00:18:00,674
好这样就出来了看到了吗

454
00:18:00,674 --> 00:18:04,194
哎这是这个部门的PRES的薪水是这个

455
00:18:04,194 --> 00:18:06,194
然后增长20%以后

456
00:18:06,514 --> 00:18:08,874
哎我看看这个啊这个部门不增长

457
00:18:09,274 --> 00:18:11,914
好我们找一个啊看IT program对吧

458
00:18:11,954 --> 00:18:12,914
这是原薪水

459
00:18:12,914 --> 00:18:14,634
然后呢他增长10%

460
00:18:14,634 --> 00:18:16,114
增长百分之原来是9000

461
00:18:16,114 --> 00:18:18,954
增长10%以后的薪水不就是9900吗

462
00:18:19,674 --> 00:18:20,714
没有问题的是吧

463
00:18:20,714 --> 00:18:23,514
然后6000增长10%以后的6600啊

464
00:18:23,754 --> 00:18:25,914
好下面我们都可以看到这个结果已经

465
00:18:25,914 --> 00:18:26,754
运算出来了

466
00:18:26,954 --> 00:18:27,714
那么这个题呢

467
00:18:27,714 --> 00:18:30,034
就是通过这个case函数来解决的

468
00:18:30,034 --> 00:18:32,154
对于多条件的一个判断啊

469
00:18:32,154 --> 00:18:33,874
所以我们在写查询的时候

470
00:18:33,874 --> 00:18:35,434
如果遇到了这样的问题

471
00:18:35,474 --> 00:18:37,074
我们首先脑袋里要想

472
00:18:37,274 --> 00:18:40,554
能否用case语句来解决这种判断的

473
00:18:40,554 --> 00:18:41,034
问题

474
00:18:41,154 --> 00:18:41,714
明白吧

475
00:18:41,714 --> 00:18:43,034
哎好同学们

476
00:18:43,074 --> 00:18:45,474
啊这样呢在通用函数当中的所有的

477
00:18:45,474 --> 00:18:47,354
函数以及所有函数的使用啊

478
00:18:47,354 --> 00:18:48,634
我都通过不同的案例

479
00:18:48,634 --> 00:18:50,274
给大家做了一个讲解啊

480
00:18:50,274 --> 00:18:53,182
好同学们那我们这一课呢就到这

