1
00:00:00,986 --> 00:00:03,906
上节课我们讲解了字符函数

2
00:00:03,906 --> 00:00:07,706
那么这节课我们再来讲解一下数字函数

3
00:00:07,706 --> 00:00:11,146
那么在MySQL当中数字函数也是比较多的

4
00:00:11,146 --> 00:00:13,586
这里我给大家整理了一个表格

5
00:00:13,586 --> 00:00:17,226
这里把常见的一些数字函数都给大家整理出来了

6
00:00:17,226 --> 00:00:18,366
这里包含了

7
00:00:19,194 --> 00:00:23,514
函数的描述以及实例,这都比较简单,大家一看就能懂的

8
00:00:23,514 --> 00:00:26,994
这里我就不把这些函数为大家做一一介绍了

9
00:00:26,994 --> 00:00:31,514
然后这里我们讲三个比较有代表性的数字函数

10
00:00:31,514 --> 00:00:34,114
第一个就是这个Round函数

11
00:00:34,114 --> 00:00:37,594
那么我们通过这个Round函数的函数名也能知道它的作用

12
00:00:37,594 --> 00:00:39,198
就是来做施舍污辱处理的

13
00:00:39,198 --> 00:00:40,698
< No Speech >

14
00:00:40,698 --> 00:00:43,298
这个函数是需要两个参数

15
00:00:43,298 --> 00:00:46,498
第一个参数是一个列或者是一个表达式逗号

16
00:00:46,498 --> 00:00:47,938
第二个参数是一个n

17
00:00:47,938 --> 00:00:50,238
这个n表示四舍五入时

18
00:00:50,842 --> 00:00:52,362
小数多少倍

19
00:00:52,362 --> 00:00:54,494
当然通过这个n也可以控制

20
00:00:54,494 --> 00:00:56,154
< No Speech >

21
00:00:56,154 --> 00:00:59,070
整数还是小数还是整数的前半部分

22
00:00:59,070 --> 00:01:00,634
< No Speech >

23
00:01:00,634 --> 00:01:02,174
未熟的,明白这些是吧?

24
00:01:02,174 --> 00:01:03,262
好我们来看一下啊

25
00:01:03,262 --> 00:01:04,282
< No Speech >

26
00:01:04,282 --> 00:01:12,862
RUN的函数是否表达N位小数的值?如果第2个是0

27
00:01:12,862 --> 00:01:15,098
< No Speech >

28
00:01:15,098 --> 00:01:17,018
那么值会被试射误入到整数

29
00:01:17,018 --> 00:01:19,578
也就是说如果第二个参数你给0或者是你不给

30
00:01:19,578 --> 00:01:21,578
那它会试射误入到整数

31
00:01:21,578 --> 00:01:23,818
去掉小数值保留整数位

32
00:01:23,818 --> 00:01:25,182
如果第二个参数

33
00:01:25,182 --> 00:01:26,490
< No Speech >

34
00:01:26,490 --> 00:01:30,090
则被保留到四舍五入为小数的两位

35
00:01:30,090 --> 00:01:31,370
也就是说保留小数两位

36
00:01:31,370 --> 00:01:32,930
如果第二个参数是负二

37
00:01:32,930 --> 00:01:35,454
则表示从小数点向左侧保留

38
00:01:35,454 --> 00:01:36,474
< No Speech >

39
00:01:36,474 --> 00:01:38,754
来作为它的一个施舍污辱处理的值

40
00:01:38,754 --> 00:01:39,474
明白这一次吧

41
00:01:39,474 --> 00:01:40,314
好

42
00:01:40,314 --> 00:01:41,354
我们来看一下这个案例

43
00:01:41,354 --> 00:01:43,034
select round

44
00:01:43,034 --> 00:01:44,314
然后我调了三个round

45
00:01:44,314 --> 00:01:45,674
分别给了不同的值

46
00:01:45,674 --> 00:01:47,034
我们来看一下它的效果

47
00:01:47,034 --> 00:01:48,510
就知道这个函数的作用了

48
00:01:48,510 --> 00:01:51,034
< No Speech >

49
00:01:51,034 --> 00:01:55,514
select round 然后我这给了一个45.923

50
00:01:55,514 --> 00:02:00,190
然后后面给了一个2,这表示什么呢?保留小数点的后两位

51
00:02:00,190 --> 00:02:01,754
< No Speech >

52
00:02:01,754 --> 00:02:05,234
那么他会做四舍五入 那很显然3不够四舍五入的

53
00:02:05,234 --> 00:02:07,714
那他就是返回的就是45.92

54
00:02:07,714 --> 00:02:09,834
明白吧?然后这个round呢

55
00:02:09,834 --> 00:02:12,114
45.923又给了一个0

56
00:02:12,114 --> 00:02:14,034
或者是0跟不给是一样的

57
00:02:14,034 --> 00:02:15,954
0跟不给这个参数是一样的

58
00:02:15,954 --> 00:02:18,074
指的是只保留整数部位

59
00:02:18,074 --> 00:02:20,474
整数部位的时候由于小数的第一位是9

60
00:02:20,474 --> 00:02:22,474
所以他会做四舍五入变成46

61
00:02:22,474 --> 00:02:23,434
明白这意思吧?

62
00:02:23,434 --> 00:02:23,966
解 tidy

63
00:02:24,634 --> 00:02:29,854
我给了一个-1,-1是向小数点的左侧移移位

64
00:02:30,394 --> 00:02:31,678
那只保留4

65
00:02:32,250 --> 00:02:35,710
然后这个五是一个四舍五入可以进位的,所以他会爆

66
00:02:35,710 --> 00:02:37,658
< No Speech >

67
00:02:37,658 --> 00:02:40,990
没问题是吧,如果给-2呢,那就再往前走,这两位都没有了

68
00:02:41,530 --> 00:02:45,090
明白这意思吧?因为最后第一位是4嘛 不进位那就0了嘛

69
00:02:45,090 --> 00:02:48,158
是不是?好 我们来运行一下 看看是不是这个结果

70
00:02:48,158 --> 00:02:49,562
< No Speech >

71
00:02:49,562 --> 00:02:51,162
45.92没问题吧

72
00:02:51,162 --> 00:02:52,402
然后46没问题吧

73
00:02:52,402 --> 00:02:53,054
然后这个

74
00:02:53,946 --> 00:02:58,974
往前进了一位 4是不是变成5了 然后由于它是两位的整数

75
00:02:58,974 --> 00:03:00,762
< No Speech >

76
00:03:00,762 --> 00:03:02,462
50的这个零还是要有的

77
00:03:03,194 --> 00:03:06,110
明白这意思吧?那如果这是我给富二呢?

78
00:03:06,110 --> 00:03:10,202
< No Speech >

79
00:03:10,202 --> 00:03:12,126
我再给一个F2

80
00:03:12,126 --> 00:03:14,554
< No Speech >

81
00:03:14,554 --> 00:03:19,550
明白意思吧?往前再移一位,然后又进了一位

82
00:03:20,346 --> 00:03:22,302
然后后面还有两个人就变成100

83
00:03:23,002 --> 00:03:27,802
明白这意思吧?这是RUN的函数的使用,也比较简单

84
00:03:27,802 --> 00:03:30,562
好,我们再来看一个CHK的函数

85
00:03:30,562 --> 00:03:33,722
CHK的函数其实跟RUN的函数的作用是相同的

86
00:03:33,722 --> 00:03:36,318
只不过是它不会进行四则五则的函数

87
00:03:36,318 --> 00:03:38,746
< No Speech >

88
00:03:38,746 --> 00:03:40,382
他不会做似是而无的处理

89
00:03:40,382 --> 00:03:43,322
< No Speech >

90
00:03:43,322 --> 00:03:48,922
我们看这个存K的函数当中,45.923保留两位运行

91
00:03:48,922 --> 00:03:51,934
比如说这我给一个0

92
00:03:51,934 --> 00:03:53,178
< No Speech >

93
00:03:53,178 --> 00:03:55,418
用run的时候它会变成46

94
00:03:55,418 --> 00:03:56,978
因为9要向前进一位嘛

95
00:03:56,978 --> 00:03:58,398
现在你看到整数部位

96
00:03:59,354 --> 00:04:02,234
9不会进位 因为他不会做四舍五入的处理

97
00:04:02,234 --> 00:04:05,674
明白这一次吧 这是这个纯K的函数的一个特点

98
00:04:05,674 --> 00:04:08,734
还有一个就是使用MOD来取语

99
00:04:09,594 --> 00:04:15,714
这个mod跟我们java当中的取余函数和取余的百分号作用是相同的

100
00:04:15,714 --> 00:04:20,286
mod函数是找出m除以n的余数,它有两个参数,m和n

101
00:04:20,794 --> 00:04:24,154
好我们来用这个mod这个函数做一个安利啊

102
00:04:24,154 --> 00:04:25,534
看我们看这个实例

103
00:04:26,234 --> 00:04:34,046
所有Job ID是SA下滑械REP的雇员的名字,薪水以及薪水被5000除后的

104
00:04:34,046 --> 00:04:37,082
< No Speech >

105
00:04:37,082 --> 00:04:38,782
那我们先来写这样的一个查询

106
00:04:38,782 --> 00:04:40,986
< No Speech >

107
00:04:40,986 --> 00:04:42,462
我们先来看他的需求

108
00:04:42,462 --> 00:04:44,090
< No Speech >

109
00:04:44,090 --> 00:04:49,490
他要的是这个job id是sa下滑械rep的是不是

110
00:04:49,490 --> 00:04:52,210
那就是select先不管这个列要什么

111
00:04:52,210 --> 00:04:53,630
先把条件写出来

112
00:04:53,630 --> 00:04:57,146
< No Speech >

113
00:04:57,146 --> 00:04:58,654
呃 招吧

114
00:04:59,354 --> 00:05:00,670
下滑线IT

115
00:05:00,670 --> 00:05:06,106
< No Speech >

116
00:05:06,106 --> 00:05:07,358
REP

117
00:05:07,358 --> 00:05:08,570
< No Speech >

118
00:05:08,570 --> 00:05:11,570
对吧 这是他要的一个行选择的条件

119
00:05:11,570 --> 00:05:14,170
那对于列操作他要做什么呢

120
00:05:14,170 --> 00:05:16,370
他说显示这个雇员的名字

121
00:05:16,370 --> 00:05:18,142
那就是LastName

122
00:05:18,142 --> 00:05:19,322
< No Speech >

123
00:05:19,322 --> 00:05:21,950
以后再说名字我们就以lastname为主了

124
00:05:22,714 --> 00:05:24,394
然后还要薪水

125
00:05:24,394 --> 00:05:25,662
那就是salary

126
00:05:26,234 --> 00:05:29,662
还有吸水被五千除后的余数

127
00:05:30,298 --> 00:05:31,934
那就是MOD了吧

128
00:05:32,730 --> 00:05:34,078
第一个参数是

129
00:05:34,078 --> 00:05:35,930
< No Speech >

130
00:05:35,930 --> 00:05:38,110
对吧 然后第二个参数是5000

131
00:05:38,110 --> 00:05:43,866
< No Speech >

132
00:05:43,866 --> 00:05:47,038
这就是被5000除完雨后的一个结果

133
00:05:47,038 --> 00:05:48,506
< No Speech >

134
00:05:48,506 --> 00:05:49,986
我们可以看到这是余数啊

135
00:05:49,986 --> 00:05:51,866
这是MOD的一个作用啊

136
00:05:51,866 --> 00:05:52,306
好

137
00:05:52,306 --> 00:05:53,746
那么数字函数呢

138
00:05:53,746 --> 00:05:55,306
用起来也比较简单

139
00:05:55,306 --> 00:05:57,626
这里呢我们讲了三个比较有代表性的

140
00:05:57,626 --> 00:05:58,306
剩下那些呢

141
00:05:58,306 --> 00:06:00,466
同学们自己回去试一下就知道了啊

142
00:06:00,466 --> 00:06:00,826
好

143
00:06:00,826 --> 00:06:01,822
那我们自己的课呢

