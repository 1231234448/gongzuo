1
00:00:00,000 --> 00:00:01,114
< No Speech >

2
00:00:01,114 --> 00:00:06,074
到目前为止呢,SQL当中的DML语言我们都已经讲过了

3
00:00:06,074 --> 00:00:09,054
那么从这一刻开始呢,我们就来讲解一下

4
00:00:09,054 --> 00:00:10,106
< No Speech >

5
00:00:10,106 --> 00:00:14,346
DQL就是我们这个mySQL当中的查询数据啊

6
00:00:14,346 --> 00:00:17,310
那么查询是非常重要的

7
00:00:17,310 --> 00:00:18,426
< No Speech >

8
00:00:18,426 --> 00:00:27,198
因为每天我们在对数据库操作时,大部分的操作行为都是在对数据进行查询的

9
00:00:27,198 --> 00:00:28,314
< No Speech >

10
00:00:28,314 --> 00:00:35,114
对于MySQL的查询动作是我们在整个使用MySQL当中是非常重要的一个知识点

11
00:00:35,114 --> 00:00:39,114
所以同学们对于MySQL的查询这一块一定要认真听

12
00:00:39,114 --> 00:00:43,754
好,我们先来看一下MySQL当中的DQL查询

13
00:00:43,754 --> 00:00:49,834
DQL查询我们说了它是由像Select、From、Val这样的关键字所构成

14
00:00:49,834 --> 00:00:53,514
对吧,那我们先来看一下Select的基本查询

15
00:00:53,514 --> 00:00:55,274
好,Select语句的功能

16
00:00:55,274 --> 00:00:58,910
我们用Select语句做查询,那么它能帮助我们

17
00:00:58,910 --> 00:00:59,962
< No Speech >

18
00:00:59,962 --> 00:01:05,242
它能帮我们去查询表当中的指定显示某些列的数据

19
00:01:05,242 --> 00:01:10,430
还可以帮助我们去选择在表当中显示哪些行的数据

20
00:01:10,430 --> 00:01:11,866
< No Speech >

21
00:01:11,866 --> 00:01:13,866
多表的链接查询

22
00:01:13,866 --> 00:01:16,062
啊这都是slack语句的一个能力

23
00:01:16,062 --> 00:01:18,426
< No Speech >

24
00:01:18,426 --> 00:01:22,006
Slack 语句是从数据库当中返回信息

25
00:01:22,006 --> 00:01:24,926
使用一个slack的语句可以做到下面的事

26
00:01:25,498 --> 00:01:32,178
列选择,能够使用Select语句的列选择功能选择表当中的列

27
00:01:32,178 --> 00:01:34,814
这些列是想要查询返回的

28
00:01:35,322 --> 00:01:38,522
当查询时能够返回列中的数据

29
00:01:38,522 --> 00:01:41,402
也就是说当我去查询一个表的时候

30
00:01:41,402 --> 00:01:45,042
我想要表当中的哪些列的数据

31
00:01:45,042 --> 00:01:48,402
那我们通过slack的语句是可以来选择的

32
00:01:48,402 --> 00:01:54,282
那么其实对列的选择在我们这个数据库的这个操作当中

33
00:01:54,282 --> 00:01:58,042
我们也称之为列的投影

34
00:01:58,042 --> 00:02:00,042
如果是本专业的同学们

35
00:02:00,042 --> 00:02:03,882
我们在学这个数据库专业课的时候

36
00:02:03,882 --> 00:02:06,242
这本书应该还叫数据库系统概论

37
00:02:06,242 --> 00:02:09,642
这里有明确的说明我们对于这个列的选择的操作

38
00:02:09,642 --> 00:02:10,962
也称之为投影操作

39
00:02:10,962 --> 00:02:11,722
对吧

40
00:02:11,722 --> 00:02:13,322
好这是列选择

41
00:02:13,322 --> 00:02:17,282
那么我们用slack的语句还可以做行选择

42
00:02:17,282 --> 00:02:18,602
那所谓的行选择是什么呢

43
00:02:18,602 --> 00:02:22,442
就是能够使用slack的语句的行选择的功能

44
00:02:22,442 --> 00:02:23,614
选择表当中的行

45
00:02:24,346 --> 00:02:28,506
是想要查询返回的能够使用不同的标准限制

46
00:02:28,506 --> 00:02:29,466
看见的行

47
00:02:29,466 --> 00:02:31,786
就是我这个表里有很多的数据

48
00:02:31,786 --> 00:02:33,306
那么哪些数据啊

49
00:02:33,306 --> 00:02:35,946
这些数据在表里都是以一条一条的形式来出现的

50
00:02:35,946 --> 00:02:36,346
对吧

51
00:02:36,346 --> 00:02:37,786
那么在这个表当中

52
00:02:37,786 --> 00:02:39,866
我要哪些条数据

53
00:02:39,866 --> 00:02:42,906
那么对于这个条的选择其实就是行的选择

54
00:02:42,906 --> 00:02:46,426
我们可以给定不同的条件来做这个数据

55
00:02:46,426 --> 00:02:48,866
行数据的这样的一个选择处理

56
00:02:48,866 --> 00:02:49,546
明白这意思吧

57
00:02:49,546 --> 00:02:52,346
这也是slack语句的一个这样的一个功能

58
00:02:52,986 --> 00:02:55,906
那么除此之外还有就是链接查询

59
00:02:55,906 --> 00:02:57,586
那么所谓的链接指的是什么呢

60
00:02:57,586 --> 00:03:01,982
能够使用slack的语句链接功能来集合

61
00:03:01,982 --> 00:03:03,002
< No Speech >

62
00:03:03,002 --> 00:03:05,722
slack1的链接功能来集合数据

63
00:03:05,722 --> 00:03:08,482
这些数据被存储在不同的表当中

64
00:03:08,482 --> 00:03:11,162
它们之间可以创建链接

65
00:03:11,162 --> 00:03:12,922
查出我们所关心的数据

66
00:03:12,922 --> 00:03:14,602
也就是说我们有的时候

67
00:03:14,602 --> 00:03:15,962
在查询一些数据的时候

68
00:03:15,962 --> 00:03:19,562
这些数据未必是在某一个表当中存放的

69
00:03:19,562 --> 00:03:22,686
它可能是分别放到了不同的表当中

70
00:03:23,450 --> 00:03:25,342
那么我在查询数据的时候呢

71
00:03:25,850 --> 00:03:27,770
有一部分数据是来源于这个表

72
00:03:27,770 --> 00:03:29,290
有一部分数据是来源于这个表

73
00:03:29,290 --> 00:03:31,650
那么这个时候肯定要做一个多表链接查询

74
00:03:31,650 --> 00:03:31,970
是吧

75
00:03:31,970 --> 00:03:32,930
那么这个时候呢

76
00:03:32,930 --> 00:03:35,810
我们肯定也用到select语句的多表链接查询了

77
00:03:35,810 --> 00:03:38,370
select语句是支持多表链接查询的

78
00:03:38,370 --> 00:03:39,010
明白这意思吧

79
00:03:39,010 --> 00:03:39,690
哎好

80
00:03:39,690 --> 00:03:41,278
这是select语句的呃多表链接查询

81
00:03:41,278 --> 00:03:43,034
< No Speech >

82
00:03:43,034 --> 00:03:46,394
那我们再来看一下slack语句的一个基本语法

83
00:03:46,394 --> 00:03:48,154
注意基本语法指的是什么

84
00:03:48,154 --> 00:03:51,806
指的是构成slack的语句最基本的一个语句

85
00:03:52,538 --> 00:03:53,886
结构是什么呢?

86
00:03:53,886 --> 00:03:55,002
< No Speech >

87
00:03:55,002 --> 00:04:00,042
它有两个关键字,一个是select,select是确定哪些列

88
00:04:00,042 --> 00:04:03,070
from呢,还有一个from关键字是确定哪张表

89
00:04:04,026 --> 00:04:08,946
Select跟from的位置是不能变化的

90
00:04:08,946 --> 00:04:11,586
我们这个SQL它的全称叫什么呢

91
00:04:11,586 --> 00:04:14,066
叫结构化的查询语言

92
00:04:14,066 --> 00:04:14,506
对不对

93
00:04:14,506 --> 00:04:15,786
什么叫结构化

94
00:04:15,786 --> 00:04:17,666
也就是说它的语法格式

95
00:04:17,666 --> 00:04:20,426
一些关键字的位置是不能随意改变的

96
00:04:20,786 --> 00:04:22,386
我们以select一句为例

97
00:04:22,386 --> 00:04:25,186
select跟from的位置是不能换的

98
00:04:25,186 --> 00:04:27,186
肯定是先写select的

99
00:04:27,186 --> 00:04:28,666
然后投影哪些列

100
00:04:28,666 --> 00:04:30,466
或者叫列的选择

101
00:04:30,466 --> 00:04:31,906
然后在from

102
00:04:31,906 --> 00:04:33,466
然后再定位哪张表

103
00:04:33,466 --> 00:04:37,226
所以select的语句后面的作用是来定位哪些列的

104
00:04:37,226 --> 00:04:39,066
from是来定位哪张表的

105
00:04:39,066 --> 00:04:43,710
那么select跟from就构成了一个最基本的查询语句

106
00:04:43,710 --> 00:04:44,826
< No Speech >

107
00:04:44,826 --> 00:04:48,026
那么slack的home我们说了它确定哪些列

108
00:04:48,026 --> 00:04:50,226
其实这个home还可以给很多的内容

109
00:04:50,226 --> 00:04:51,166
可以给什么呢?

110
00:04:51,166 --> 00:04:55,418
< No Speech >

111
00:04:55,418 --> 00:05:01,618
基本的slack的语句,在最简单的形式中,slack的语句必须包含下面的内容,一个slack的子句

112
00:05:01,618 --> 00:05:03,290
< No Speech >

113
00:05:03,290 --> 00:05:04,574
一个Frams句

114
00:05:05,306 --> 00:05:08,606
该表当中包含Select的子句中的字段列

115
00:05:08,606 --> 00:05:09,690
< No Speech >

116
00:05:09,690 --> 00:05:12,010
也就是说一个基本的select的语句

117
00:05:12,010 --> 00:05:15,770
select和from子句二者之间是缺一不可的

118
00:05:15,770 --> 00:05:16,250
明白吧

119
00:05:16,250 --> 00:05:18,142
那么在语法当中啊

120
00:05:18,142 --> 00:05:19,610
< No Speech >

121
00:05:19,610 --> 00:05:22,654
表示的什么含义呢?是一个或多个字段的列表

122
00:05:22,654 --> 00:05:26,298
< No Speech >

123
00:05:26,298 --> 00:05:29,098
表示的是什么?是你要选择哪些列

124
00:05:29,098 --> 00:05:29,534
看这

125
00:05:30,394 --> 00:05:31,934
这是不是可以有星啊?

126
00:05:31,934 --> 00:05:32,954
< No Speech >

127
00:05:32,954 --> 00:05:39,914
然后这个数线是或者啊或者是这个distinct的关键字啊或者是列名或者是表达式或者是别名

128
00:05:39,914 --> 00:05:44,874
是吧这些是都可以在列当中在select的语句后面当中对列来定义的啊

129
00:05:44,874 --> 00:05:46,634
那么这个星表示什么意思呢

130
00:05:46,634 --> 00:05:53,114
如果你写的是select的星那就表示要显示这个表当中的所有的列啊

131
00:05:53,114 --> 00:05:54,558
如果我只想

132
00:05:54,558 --> 00:05:55,674
< No Speech >

133
00:05:55,674 --> 00:05:57,354
这个表当中的部分的列

134
00:05:57,354 --> 00:06:00,354
我们就把新区调换成具体的列名

135
00:06:00,354 --> 00:06:03,034
列名与列名之间用多少分割就可以了

136
00:06:03,034 --> 00:06:03,514
明白吧

137
00:06:03,514 --> 00:06:06,354
然后distinct是禁止重复的

138
00:06:06,354 --> 00:06:09,314
如果我在查询语句当中查出来的数据

139
00:06:09,314 --> 00:06:11,034
有很多条是重复的

140
00:06:11,034 --> 00:06:11,794
我不想要看

141
00:06:11,794 --> 00:06:13,274
我不想要重复的数据

142
00:06:13,274 --> 00:06:15,034
那么去除重复的怎么办

143
00:06:15,034 --> 00:06:17,154
我们可以使用distinct的关键字

144
00:06:17,154 --> 00:06:18,514
这是禁止重复的

145
00:06:18,514 --> 00:06:21,634
然后接下来column或者是表达式

146
00:06:21,634 --> 00:06:24,914
也就是说如果我想写是指定的列

147
00:06:24,914 --> 00:06:24,926
我可以启用这条in variable

148
00:06:25,786 --> 00:06:28,666
不是显示所有的,那我们给列名就可以了

149
00:06:28,666 --> 00:06:31,066
甚至我们还可以添加一些表达式做处理

150
00:06:31,066 --> 00:06:33,786
对列的内容做一些表达式的处理

151
00:06:33,786 --> 00:06:35,786
然后还有个aliens别名

152
00:06:35,786 --> 00:06:37,246
我们还可以对列名做一些表达式的处理

153
00:06:37,246 --> 00:06:38,266
< No Speech >

154
00:06:38,266 --> 00:06:40,286
起别名的这样的一个处理

155
00:06:40,986 --> 00:06:42,346
就是从 recognizes From Table

156
00:06:42,346 --> 00:06:44,410
< No Speech >

157
00:06:44,410 --> 00:06:46,770
指定包含这个列的那个表

158
00:06:46,770 --> 00:06:48,490
这些列来源于哪个表

159
00:06:48,490 --> 00:06:50,770
你要用from关键字来定位表的

160
00:06:50,770 --> 00:06:53,050
所以说from后面给的是表名

161
00:06:53,050 --> 00:06:54,690
table name表名

162
00:06:54,690 --> 00:06:55,450
明白这一次吧

163
00:06:55,450 --> 00:06:57,650
这是slack的语句的一个基本构成

164
00:06:57,650 --> 00:06:58,770
非常的简单

165
00:06:58,770 --> 00:06:59,450
好

166
00:06:59,450 --> 00:07:02,770
那么接下来我们再来添加测试数据

167
00:07:02,770 --> 00:07:06,090
我们接下来在讲这个mysql的查询的时候

168
00:07:06,090 --> 00:07:08,090
我们要一些案例表

169
00:07:08,090 --> 00:07:09,810
那么这个案例表在哪

170
00:07:09,810 --> 00:07:13,130
这个案例表我已经给大家整理出来了

171
00:07:13,130 --> 00:07:16,410
放到了一个叫data.cycle的一个文件里

172
00:07:16,410 --> 00:07:17,010
看到了吗

173
00:07:17,010 --> 00:07:18,810
这个文件我给大家放到

174
00:07:18,810 --> 00:07:20,970
本套视频的软件的目录当中

175
00:07:20,970 --> 00:07:23,930
那么我们只用这只需要用NaviCat

176
00:07:23,930 --> 00:07:27,170
把它添加到我们的数据库当中就可以了

177
00:07:27,170 --> 00:07:29,050
或者是在NaviCat当中去运行

178
00:07:29,050 --> 00:07:30,750
data.cycle就可以了

179
00:07:31,418 --> 00:07:32,698
好我们看一下

180
00:07:33,274 --> 00:07:37,234
将DataSql文件通过NaviCat导入到

181
00:07:37,234 --> 00:07:38,490
< No Speech >

182
00:07:38,490 --> 00:07:42,330
ITBZ数据库当中就是我们IT百赞的数据库当中

183
00:07:42,330 --> 00:07:44,010
那说明我们需要创建一个数据库

184
00:07:44,010 --> 00:07:45,210
名字为IT百赞了是吧

185
00:07:45,210 --> 00:07:49,650
然后该文件包含了我们课程当中所使用的案例表

186
00:07:49,650 --> 00:07:50,430
明白吧

187
00:07:51,130 --> 00:07:54,490
好 那我们先用NaviCat来创建一个数据库

188
00:07:54,490 --> 00:07:55,454
怎么创建数据库?

189
00:07:56,090 --> 00:07:58,494
点击这个链接,然后右键

190
00:07:59,034 --> 00:08:00,914
然后新建数据库对吧

191
00:08:00,914 --> 00:08:03,550
数据库的名字我们叫itbz

192
00:08:03,550 --> 00:08:04,826
< No Speech >

193
00:08:04,826 --> 00:08:07,230
然后字符集我们用UTF-8

194
00:08:07,230 --> 00:08:09,018
< No Speech >

195
00:08:09,018 --> 00:08:12,938
好这样我们这个ITBJ的这个库就创建好了

196
00:08:12,938 --> 00:08:15,938
然后接下来我们要去运行这个SQL文件是吧

197
00:08:15,938 --> 00:08:20,938
怎么运行呢?选中这个库点击右键有一个运行SQL文件看到了吗

198
00:08:20,938 --> 00:08:23,938
选择它然后在这呢去选择你文件

199
00:08:23,938 --> 00:08:25,566
那么我这个文件在哪呢?

200
00:08:25,566 --> 00:08:26,970
< No Speech >

201
00:08:26,970 --> 00:08:29,370
我这个文件现在在我的桌面上

202
00:08:29,370 --> 00:08:30,910
然后我们来选择一下

203
00:08:30,910 --> 00:08:37,690
< No Speech >

204
00:08:37,690 --> 00:08:38,530
看到了吗

205
00:08:38,530 --> 00:08:40,062
然后我们选择它

206
00:08:40,062 --> 00:08:44,026
< No Speech >

207
00:08:44,026 --> 00:08:48,786
如果说这提示这个execute successful表示执行成功了

208
00:08:48,786 --> 00:08:50,386
然后就是我们点击关闭

209
00:08:50,386 --> 00:08:52,346
然后右键刷新

210
00:08:52,346 --> 00:08:53,666
选择这个表

211
00:08:53,666 --> 00:08:55,906
然后右键刷新就可以看到了

212
00:08:55,906 --> 00:08:59,666
那么我们此次的案例当中一共有7张表

213
00:08:59,666 --> 00:09:01,666
但是不一定每张都会用到

214
00:09:01,666 --> 00:09:03,186
不一定每张都会用到

215
00:09:03,186 --> 00:09:04,386
但是一共有7张表

216
00:09:04,386 --> 00:09:08,666
未来我们所写的案例都是参照于这些表当中的某一个表来实现的

217
00:09:08,666 --> 00:09:09,426
明白吧

218
00:09:09,426 --> 00:09:12,826
这样我们就把测试数据添加到我们的数据库当中了

219
00:09:12,826 --> 00:09:12,862
请自己是否感觉到同样的参数

220
00:09:12,862 --> 00:09:13,978
< No Speech >

221
00:09:13,978 --> 00:09:21,018
好,那么再来看一下我们,这是我们用Navigate添加数据文件的这样一个详细操作步骤

222
00:09:21,018 --> 00:09:24,938
大家如果要不会的话,按照我的笔记上的操作步骤去做就可以了

223
00:09:24,938 --> 00:09:28,538
好,我们再来看一下这节课的这个实时效果反馈

224
00:09:28,538 --> 00:09:33,630
好,在最简单的形式当中,最简单的这个查询形式当中啊

225
00:09:33,630 --> 00:09:41,210
< No Speech >

226
00:09:41,210 --> 00:09:52,930
必须包含什么呢?A一个selected 字句,一个from 字句,B一个selected 字句,C一个from 字句,D一个selected 字句,一个from 字句,一个inserted 字句

227
00:09:52,930 --> 00:09:55,162
< No Speech >

228
00:09:55,162 --> 00:09:57,162
这道题的答案应该是什么呢?

229
00:09:57,162 --> 00:10:00,574
很显然,这道题的答案是不是应该是什么呢?

230
00:10:00,574 --> 00:10:02,234
< No Speech >

231
00:10:02,234 --> 00:10:04,474
最简单的一个查询形式当中

232
00:10:04,474 --> 00:10:06,434
它必须要包含两个子句

233
00:10:06,434 --> 00:10:07,594
一个是select子句

234
00:10:07,594 --> 00:10:08,514
一个是from子句

235
00:10:08,514 --> 00:10:10,110
所以这个题答案是A

236
00:10:10,842 --> 00:10:16,082
好同学们,那么以上我们就介绍了一下这个Select语句的一个基本构成

237
00:10:16,082 --> 00:10:18,322
以及Select语句的一个特点

238
00:10:18,322 --> 00:10:19,518
好,那我们进行一个课呢

