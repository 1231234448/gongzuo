1
00:00:00,000 --> 00:00:01,114
< No Speech >

2
00:00:01,114 --> 00:00:03,742
从这一刻开始呢,我们再来讲解一下

3
00:00:03,742 --> 00:00:05,690
< No Speech >

4
00:00:05,690 --> 00:00:11,610
那什么是多表查询呢?多表查询指的就是我们在做数据查询时

5
00:00:11,610 --> 00:00:16,970
结果集并不是来源于某一张表,而是来源于多张表

6
00:00:16,970 --> 00:00:20,970
那么这种查询方式我们就需要用到多表查询了

7
00:00:20,970 --> 00:00:24,890
好,我们来看这一个图,在这个图当中只有一个结果集

8
00:00:24,890 --> 00:00:32,010
在这个结果集当中有三个列,分别是emplieeid、departmentid和departmentname

9
00:00:32,010 --> 00:00:39,370
那么在这三个列当中,emplieeid和departmentid这两个列是来源于empliee这个表

10
00:00:39,370 --> 00:00:43,290
而departmentname是来源于department这个表

11
00:00:43,290 --> 00:00:50,330
所以现在我想查到这样一个结果集,我肯定要去查询empliee和department这个表

12
00:00:50,330 --> 00:00:56,170
那么对于这个结果集的查询其实就是一个多表查询了,明白这意思吧?

13
00:00:56,170 --> 00:01:02,250
好,那我们在讲解多表查询之前,我们再来了解一下笛卡尔乘积

14
00:01:02,250 --> 00:01:07,370
那么什么是笛卡尔乘积呢?我们学过线性代数、学过高数的

15
00:01:07,370 --> 00:01:09,450
或者学过历史数学的同学们都应该知道

16
00:01:09,450 --> 00:01:13,130
在这些课程里面都有对笛卡尔乘积做一个介绍,对吧?

17
00:01:13,130 --> 00:01:15,690
我记得这个课程里有这样的一个说明

18
00:01:15,690 --> 00:01:19,370
笛卡尔乘积可以表示为x轴与y轴的直积,对不对?

19
00:01:19,370 --> 00:01:23,290
那么在我们多表查询当中也是有笛卡尔乘积的概念的

20
00:01:23,290 --> 00:01:27,130
好,我们看一下笛卡尔乘积,笛卡尔乘积的形成

21
00:01:27,130 --> 00:01:30,650
什么情况下会产生笛卡尔乘积呢?

22
00:01:30,650 --> 00:01:35,770
就是一个链接条件被遗漏时,一个链接条件不正确时

23
00:01:35,770 --> 00:01:41,850
在一个表中所有的行被连接到第二个表的所有的行时

24
00:01:41,850 --> 00:01:45,530
这都会产生笛卡尔乘积,笛卡尔乘积是非常可怕的

25
00:01:45,530 --> 00:01:49,130
它会拿你两个表,比如说A表和B表,对吧?

26
00:01:49,130 --> 00:01:52,010
它会拿A表的数据跟B表的所有数据都连一遍

27
00:01:52,010 --> 00:01:55,450
然后又再拿B表的所有的数据跟A表的所有的数据连一遍

28
00:01:55,450 --> 00:01:58,730
相当于每个数据都会相互连接一次,对不对?

29
00:01:58,730 --> 00:02:02,490
所以我们在做多表查询时也有这么一句话,是这么说的

30
00:02:02,490 --> 00:02:07,290
我们在多表查询时所产生的结果集

31
00:02:07,290 --> 00:02:08,890
或者我们可以这么理解

32
00:02:08,890 --> 00:02:14,974
任何的一个多表查询的结果都是笛卡尔乘积的一个子集

33
00:02:15,482 --> 00:02:17,482
对吧?OK

34
00:02:17,482 --> 00:02:20,162
那么为了避免得迪卡尔乘积的形成

35
00:02:20,162 --> 00:02:23,522
在VALS纸巨当中应当总是包含正确的链接条件

36
00:02:23,522 --> 00:02:25,842
那么我们在做多表查询时

37
00:02:25,842 --> 00:02:28,802
我们一定要给定正确的链接条件

38
00:02:28,802 --> 00:02:32,202
否则就会出现AB两表的迪卡尔乘积

39
00:02:32,202 --> 00:02:33,482
明白这意思吧?

40
00:02:33,482 --> 00:02:35,122
好 我们再来看一下

41
00:02:35,122 --> 00:02:38,602
迪卡尔乘积当一个链接条件无效或被遗漏时

42
00:02:38,602 --> 00:02:40,802
其结果是一个迪卡尔乘积

43
00:02:40,802 --> 00:02:43,842
其中所有行的组合都会被显示

44
00:02:43,842 --> 00:02:45,442
第一个表中的所有行

45
00:02:45,442 --> 00:02:47,522
链接到第二个表中的所有行

46
00:02:47,522 --> 00:02:47,962
对吧?

47
00:02:47,962 --> 00:02:51,042
一个迪卡尔乘积产生大量的行

48
00:02:51,042 --> 00:02:52,562
其结果没有什么用

49
00:02:52,562 --> 00:02:54,962
你应该在VALS纸巨当中

50
00:02:54,962 --> 00:02:57,562
始终包含一个有效的链接条件

51
00:02:57,562 --> 00:02:58,842
除非你有特殊的需求

52
00:02:58,842 --> 00:03:05,322
需要从所有表中组合所有的行数据

53
00:03:05,322 --> 00:03:07,522
这样的需求肯定不会有的

54
00:03:07,522 --> 00:03:09,762
所以我们在写多表查询的时候

55
00:03:09,762 --> 00:03:12,602
千万不要产生迪卡尔乘积

56
00:03:12,602 --> 00:03:16,882
这就是我为什么要讲解迪卡尔乘积的原因

57
00:03:16,882 --> 00:03:19,202
我们千万不要去产生迪卡尔乘积

58
00:03:19,202 --> 00:03:20,322
那么怎么避免呢?

59
00:03:20,322 --> 00:03:23,482
就是在多表查询时一定要给定链接条件

60
00:03:23,482 --> 00:03:24,202
明白这意思吧?

61
00:03:24,202 --> 00:03:26,122
给定正确的链接条件

62
00:03:26,122 --> 00:03:26,362
好

63
00:03:26,362 --> 00:03:29,122
我们再来看一下这个图片里产生的就是迪卡尔乘积

64
00:03:29,122 --> 00:03:29,762
比如说

65
00:03:29,762 --> 00:03:31,762
Employees表里有20行数据

66
00:03:31,762 --> 00:03:33,522
Departments表里有8行数据

67
00:03:33,522 --> 00:03:36,242
那迪卡尔乘积我在做这两个表查询时

68
00:03:36,242 --> 00:03:37,802
没有给定链接条件

69
00:03:37,802 --> 00:03:40,082
那么这个时候就会产生迪卡尔乘积了

70
00:03:40,082 --> 00:03:42,682
那么迪卡尔乘积会产生多少条数据呢?

71
00:03:42,682 --> 00:03:46,042
是20×8等于160行

72
00:03:46,042 --> 00:03:46,842
明白吧?

73
00:03:46,842 --> 00:03:49,402
这只是你Employee里有20

74
00:03:49,402 --> 00:03:50,842
Department里有8行

75
00:03:50,842 --> 00:03:52,082
那如果行数越多

76
00:03:52,082 --> 00:03:54,002
它产生的这个成绩就越大

77
00:03:54,002 --> 00:03:54,882
明白这意思吧?

78
00:03:54,882 --> 00:03:56,574
数据量也越大

79
00:03:56,574 --> 00:03:58,234
< No Speech >

80
00:03:58,234 --> 00:04:02,794
好 那我们再来看一下在mySQL当中的多表查询分类

81
00:04:02,794 --> 00:04:04,954
那么在mySQL数据库当中

82
00:04:04,954 --> 00:04:08,314
它既支持SQL92标准也支持SQL99标准

83
00:04:08,314 --> 00:04:12,954
那么这个SQL的标准我们之前在讲SQL介绍的时候我们已经说过了

84
00:04:12,954 --> 00:04:15,434
那么在SQL92标准当中

85
00:04:15,434 --> 00:04:18,314
它的多表查询方式分为内连接

86
00:04:18,314 --> 00:04:19,634
只有一个内连接

87
00:04:19,634 --> 00:04:23,954
内连接里又包含了等值连接、非等值连接以及自连接

88
00:04:23,954 --> 00:04:26,354
那么在SQL99标准当中

89
00:04:26,354 --> 00:04:30,314
它的SQL语句的查询方式又分为内连接、外连接

90
00:04:30,314 --> 00:04:32,954
外连接又分为左外、右外和全外

91
00:04:32,954 --> 00:04:36,314
但是这是标准的SQL当中所定义的

92
00:04:36,314 --> 00:04:40,554
但是mySQL在执行SQL99标准的时候

93
00:04:40,554 --> 00:04:43,914
它对外连接当中的全外连接没有做实现

94
00:04:43,914 --> 00:04:45,674
它只实现了左外跟右外

95
00:04:45,674 --> 00:04:49,354
但是我们可以用其他的方式来实现全外连接的效果

96
00:04:49,354 --> 00:04:50,234
明白这个意思吧

97
00:04:50,234 --> 00:04:51,354
但这我们要知道

98
00:04:51,354 --> 00:04:53,274
mySQL当中是不只是全外连接的

99
00:04:53,274 --> 00:04:55,154
然后还有一个交叉连接

100
00:04:55,154 --> 00:04:57,754
这些都是SQL99标准当中所定义的

101
00:04:57,754 --> 00:05:00,274
那么接下来我们在讲解多表查询时

102
00:05:00,274 --> 00:05:01,874
这些连接方式

103
00:05:01,874 --> 00:05:04,074
用这些方式去查多表的方式

104
00:05:04,074 --> 00:05:05,274
我们也都会讲到的

105
00:05:05,274 --> 00:05:06,686
明白这意思吧

106
00:05:07,290 --> 00:05:16,770
好 那我们再来看一个题 实时效果反馈 当一个什么无效或遗漏时 其结果是一个笛卡尔升级

107
00:05:16,770 --> 00:05:24,530
A 运算符 B 函数运算 C 链接条件 D 排序

108
00:05:24,530 --> 00:05:30,770
那么这个选项应该是什么呢 大家考虑一下 这个答案很显然是C

109
00:05:30,770 --> 00:05:37,010
当一个链接条件无效或被遗漏时 其结果是一个笛卡尔升级

110
00:05:37,010 --> 00:05:39,770
OK 我们看一下答案 C 没有问题

111
00:05:39,770 --> 00:05:44,290
好同学们 那么这节课我们主要是先来了解一下什么是多表查询

112
00:05:44,290 --> 00:05:47,930
以及在多表查询当中什么是笛卡尔升级

113
00:05:47,930 --> 00:05:50,530
好 那我们这节课就到这

