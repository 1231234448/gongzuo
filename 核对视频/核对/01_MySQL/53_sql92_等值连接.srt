1
00:00:00,122 --> 00:00:07,762
好,同学们,这节课我们再来讲解一下SQL-92当中的查询标准的等值链接

2
00:00:07,762 --> 00:00:15,122
那么什么是等值链接呢?我们在讲解等值链接之前,我们要先明白一个道理

3
00:00:15,122 --> 00:00:18,642
我们之前在讲解数据库介绍的时候,我们说了

4
00:00:18,642 --> 00:00:26,842
在所有的官型数据库当中,对于数据的存储,它采用的都是二维的结构来进行存储的

5
00:00:26,842 --> 00:00:33,322
那么什么是二维的结构呢?二维的结构指的就是有行有列

6
00:00:33,322 --> 00:00:37,882
由行跟列构成的一个结构,这就是二维结构

7
00:00:37,882 --> 00:00:42,282
那么大家想,现在在我的数据库当中有多个表

8
00:00:42,282 --> 00:00:46,762
那就等同于有多个这种二维的结构来存储不同的数据

9
00:00:46,762 --> 00:00:55,522
那么大家考虑这样的一个问题,在多个二维结构当中,结构与结构本身能产生关联性吗?

10
00:00:55,522 --> 00:00:58,562
答案肯定是没有任何关联性的呀,对吧?

11
00:00:58,562 --> 00:01:01,402
我这是一个二维结构,我这是一个二维结构

12
00:01:01,402 --> 00:01:04,602
我二维结构,两个二维结构之间没有任何的关联性啊

13
00:01:04,602 --> 00:01:08,442
都是独立的,相互独立的嘛,只是记录不同的数据而已,对不对?

14
00:01:08,442 --> 00:01:16,322
那么如果现在我想去找出这两个结构当中有关联性的数据得依靠谁呢?

15
00:01:16,322 --> 00:01:19,042
我们说了,不是依靠这个表本身

16
00:01:19,042 --> 00:01:27,682
而是依靠表当中所存储的数据本身来决定哪些数据是有关联性的

17
00:01:27,682 --> 00:01:29,202
这个道理大家能不能明白?

18
00:01:29,202 --> 00:01:33,082
比如说在安普拉一表当中有一个department id

19
00:01:33,082 --> 00:01:36,242
在department表当中也有个department id

20
00:01:36,242 --> 00:01:40,122
那么这两个列本身是有关联的吗?

21
00:01:40,122 --> 00:01:45,042
这两个列本身没有任何关联关系,只是它们的名字恰巧相同而已

22
00:01:45,042 --> 00:01:52,402
明白这意思吧?但是这两个列是存在于两个独立的二维表结构当中,没有任何关系

23
00:01:52,402 --> 00:02:02,002
那么这两个列当中的值,我可以作为来联系这两个表当中的两条数据的一个连接关系

24
00:02:02,002 --> 00:02:13,802
能不能明白?那么如果我们用这两个列的值来用相等的关系来判断这两个表当中的这两个列所对应的数据是不是有关系的话

25
00:02:13,802 --> 00:02:18,202
那么这种连接方式就是等值连接

26
00:02:19,066 --> 00:02:20,346
同学们有没有听明白

27
00:02:20,346 --> 00:02:24,346
也就是说我对两个表当中的列

28
00:02:24,346 --> 00:02:27,666
基于两个表当中或者多个表当中的列

29
00:02:27,666 --> 00:02:31,666
以列当中的值的相等性来作为一个链接条件

30
00:02:31,666 --> 00:02:34,866
那么这种查询方式就是等值链接

31
00:02:34,866 --> 00:02:38,746
所以等值链接势必是用等号来作为链接条件的

32
00:02:39,482 --> 00:02:47,802
这样在查询时就会把这两个表当中根据你给定的某个列之间的值的相等关系

33
00:02:47,802 --> 00:02:49,722
满足这个条件的数据查询出来

34
00:02:49,722 --> 00:02:54,042
那些两个列的值不相等的数据就不会解锁出来了

35
00:02:54,722 --> 00:02:55,442
明白这意思吧

36
00:02:55,442 --> 00:02:55,922
同学们

37
00:02:55,922 --> 00:02:58,922
这就是等值连接的一个含义

38
00:02:58,922 --> 00:03:00,042
很好理解

39
00:03:00,042 --> 00:03:05,322
那么一般我们为了保证有关联的这两个列的值

40
00:03:05,682 --> 00:03:08,882
能够查询出的数据非常的准确

41
00:03:08,882 --> 00:03:11,002
一般情况下我们都会给这两个列

42
00:03:11,002 --> 00:03:14,002
未来作为有关联性数据查询的两个列

43
00:03:14,002 --> 00:03:16,282
做一个主外件的定义

44
00:03:16,282 --> 00:03:17,762
用一个主件

45
00:03:17,762 --> 00:03:18,842
用一个外件

46
00:03:18,842 --> 00:03:20,962
外件是关联另一个表的主件

47
00:03:20,962 --> 00:03:23,642
这样我们加了外件约数

48
00:03:23,642 --> 00:03:25,002
其实加了就是外件约数

49
00:03:25,002 --> 00:03:26,002
加了外件约数后

50
00:03:26,002 --> 00:03:29,962
起码能保证这个列当中的结果及这个数据本身是没有问题的

51
00:03:29,962 --> 00:03:32,282
那我们在查询的数据肯定也没有问题了

52
00:03:32,282 --> 00:03:33,002
明白这意思吧

53
00:03:33,002 --> 00:03:33,922
OK

54
00:03:33,922 --> 00:03:35,202
但是这不是必须的

55
00:03:35,202 --> 00:03:35,642
同学们

56
00:03:35,642 --> 00:03:37,762
这不是说我在用等值连接时

57
00:03:37,762 --> 00:03:40,282
两个列必须要具备主外件的

58
00:03:40,282 --> 00:03:42,162
要用外件和主件来表示

59
00:03:42,162 --> 00:03:43,042
不是这样的

60
00:03:43,042 --> 00:03:45,682
你这两个列不具备主件和外件

61
00:03:45,682 --> 00:03:48,042
就不用外件去做主外件的产生完整性

62
00:03:48,042 --> 00:03:49,122
也没有问题的

63
00:03:49,122 --> 00:03:52,882
只是可能数据未来可能会有出错的风险

64
00:03:52,882 --> 00:03:54,922
查到的数据不对的这样的一个问题

65
00:03:54,922 --> 00:03:56,762
因为你没有加外件约数

66
00:03:56,762 --> 00:03:57,242
是吧

67
00:03:57,242 --> 00:03:59,842
相当于你少了一个校验数据的机制

68
00:03:59,842 --> 00:04:01,042
那未来查询数据的时候

69
00:04:01,042 --> 00:04:03,162
可能就会有出错的风险

70
00:04:03,162 --> 00:04:05,482
除非你的数据控制的非常的精准

71
00:04:05,482 --> 00:04:06,122
明白这意思吧

72
00:04:06,122 --> 00:04:08,282
OK

73
00:04:08,282 --> 00:04:08,602
好

74
00:04:08,602 --> 00:04:09,962
我们再来看等值连接

75
00:04:09,962 --> 00:04:10,682
等值连接

76
00:04:10,682 --> 00:04:13,562
为了确保一个雇员的部门

77
00:04:13,562 --> 00:04:16,962
需要比较安普拉伊表当中的departmentid

78
00:04:16,962 --> 00:04:20,962
与department表当中的department列的id

79
00:04:20,962 --> 00:04:22,762
这个列的值

80
00:04:22,762 --> 00:04:26,602
那么在iplye跟department表当中之间的关系

81
00:04:26,602 --> 00:04:27,762
是一个相等的关系

82
00:04:27,762 --> 00:04:28,162
对吧

83
00:04:28,162 --> 00:04:30,642
我们现在要用安普拉伊

84
00:04:30,642 --> 00:04:32,642
安普拉伊表当中的departmentid

85
00:04:32,642 --> 00:04:35,082
和department表当中的departmentid

86
00:04:35,082 --> 00:04:38,562
用这两个列去判断这两个列当中的值

87
00:04:38,562 --> 00:04:39,482
是否相等

88
00:04:39,482 --> 00:04:40,882
如果这两个列的值相等

89
00:04:40,882 --> 00:04:42,362
那就是我所关心的数据

90
00:04:42,362 --> 00:04:43,802
如果这两个列的值不相等

91
00:04:43,802 --> 00:04:45,242
那就不是我所关心的数据

92
00:04:45,242 --> 00:04:47,122
那么这种连接方式

93
00:04:47,122 --> 00:04:50,142
用相等来判断的就是等值连接

94
00:04:50,142 --> 00:04:52,410
< No Speech >

95
00:04:52,410 --> 00:04:54,930
那么它们之间的关系是一个相等的关系

96
00:04:54,930 --> 00:04:59,890
即两个表当中的departmentid列的值必须相等

97
00:04:59,890 --> 00:05:02,650
那么这样的连接就是等值连接

98
00:05:02,650 --> 00:05:03,450
很好理解吧

99
00:05:03,450 --> 00:05:05,050
等值连接记住一句话

100
00:05:05,050 --> 00:05:11,130
等值连接指的就是用相等的方式来判断

101
00:05:11,130 --> 00:05:13,050
多个表当中的列的值是否相同

102
00:05:13,050 --> 00:05:14,210
那么这就是等值连接

103
00:05:14,210 --> 00:05:15,250
好

104
00:05:15,250 --> 00:05:16,770
等值连接的特点

105
00:05:16,770 --> 00:05:20,890
多表等值连接的结果为多表的交集部分

106
00:05:20,890 --> 00:05:22,610
相等的才会查询出来

107
00:05:22,610 --> 00:05:25,810
n表连接至少需要n-1个连接条件

108
00:05:25,810 --> 00:05:27,330
这一点同学们一定要注意

109
00:05:27,330 --> 00:05:30,090
我们可以用等值连接去连接多个表

110
00:05:30,090 --> 00:05:32,210
那么如果你要连接是多个表

111
00:05:32,210 --> 00:05:36,570
那么你的连接条件表哪两个列是相等连接

112
00:05:36,570 --> 00:05:38,370
哪两个列是相等连接

113
00:05:38,370 --> 00:05:39,410
这样的连接条件

114
00:05:39,410 --> 00:05:40,530
如果你有n个表的话

115
00:05:40,530 --> 00:05:42,850
至少是要n-1个连接条件的

116
00:05:42,850 --> 00:05:46,130
5个表至少有4个连接条件

117
00:05:46,130 --> 00:05:46,850
这是最少的

118
00:05:46,850 --> 00:05:48,050
如果你有3个连接条件

119
00:05:48,050 --> 00:05:52,810
那其中前3个表加最后一个表就会产生笛卡尔乘积了

120
00:05:52,810 --> 00:05:55,010
因为这你没给连接条件

121
00:05:55,010 --> 00:05:56,410
明白这些是吧同学们

122
00:05:56,410 --> 00:05:56,606
好

123
00:05:56,606 --> 00:05:57,626
< No Speech >

124
00:05:57,626 --> 00:06:10,346
我们再看,多表不分主次,没有顺序要求,一般为表起别名,提高阅读性和性能,可以搭配排序、分组、筛选等子句使用。

125
00:06:10,970 --> 00:06:14,290
也就是说我们在使用等值链接去查询数据时

126
00:06:14,290 --> 00:06:17,410
我们还可以去对数据查询结果去做排序

127
00:06:17,410 --> 00:06:18,650
也可以做分组

128
00:06:18,650 --> 00:06:19,610
分组我们还没讲

129
00:06:19,610 --> 00:06:20,770
还可以去做筛选

130
00:06:20,770 --> 00:06:22,330
以及子据的使用

131
00:06:22,330 --> 00:06:25,250
也就是说我们在查到的多表链接的等值链接

132
00:06:25,250 --> 00:06:27,770
查到的这一部分数据以后

133
00:06:27,770 --> 00:06:29,530
我们还可以再使用条件

134
00:06:29,530 --> 00:06:33,370
使用VAL子据去过滤我们这些数据的内容

135
00:06:33,370 --> 00:06:34,970
明白这意思吧

136
00:06:34,970 --> 00:06:35,890
OK

137
00:06:35,890 --> 00:06:36,490
好

138
00:06:36,490 --> 00:06:37,370
我们再来看

139
00:06:37,370 --> 00:06:37,930
注意

140
00:06:37,930 --> 00:06:41,610
等值链接也被称之为简单链接或内链接

141
00:06:41,610 --> 00:06:44,490
那么其实等值链接就是内链接

142
00:06:44,490 --> 00:06:47,810
只是它使用的链接的关键字是有区别的

143
00:06:47,810 --> 00:06:49,250
我们后面会讲到内链接

144
00:06:49,250 --> 00:06:51,810
等值链接和内链接的作用是一样的

145
00:06:51,810 --> 00:06:52,490
明白这意思吧

146
00:06:52,490 --> 00:06:55,410
都是以相等的方式来作为链接条件的判断

147
00:06:55,410 --> 00:06:56,530
OK

148
00:06:56,530 --> 00:06:56,930
好

149
00:06:56,930 --> 00:06:59,290
我们再来看一下等值链接的使用

150
00:06:59,290 --> 00:07:01,130
用等值链接返回记录

151
00:07:01,130 --> 00:07:02,330
我们看查询

152
00:07:02,330 --> 00:07:03,850
在查询当中

153
00:07:03,850 --> 00:07:08,050
他用了哪两个表去做对哪两个表做了等值链接的查询

154
00:07:08,050 --> 00:07:10,530
是不是安普拉一表跟department表

155
00:07:10,530 --> 00:07:11,130
对不对

156
00:07:11,130 --> 00:07:12,650
然后注意看VAL条件

157
00:07:12,650 --> 00:07:14,530
VAL条件这你看

158
00:07:14,530 --> 00:07:16,730
他为什么前面加了一个这个是什么

159
00:07:16,730 --> 00:07:18,130
这不表明吗

160
00:07:18,130 --> 00:07:20,570
表明点列明等于表明点列明

161
00:07:20,570 --> 00:07:23,890
为什么要加这样的一个区这样的一个表明前缀

162
00:07:23,890 --> 00:07:27,850
原因就是department id这个列

163
00:07:27,850 --> 00:07:30,570
在安普拉一表当中也叫这个名字

164
00:07:30,570 --> 00:07:33,370
在department表当中也叫这个名字

165
00:07:33,370 --> 00:07:35,570
那么如果我们在给定VAL条件时

166
00:07:35,570 --> 00:07:39,970
并没有指定这个department id来源于哪个表

167
00:07:39,970 --> 00:07:42,170
比如说你VAL条件是这么写的

168
00:07:42,170 --> 00:07:45,170
department id等于department id

169
00:07:45,170 --> 00:07:48,290
那Cycle在解析这个Cycle语言的时候就蒙了

170
00:07:48,290 --> 00:07:50,890
这个department id到底是哪个department id

171
00:07:50,890 --> 00:07:51,730
就会有问题了

172
00:07:51,730 --> 00:07:52,890
对不对

173
00:07:52,890 --> 00:07:55,090
所以为了避免出现这样的问题

174
00:07:55,090 --> 00:07:58,370
我们是需要在相同的列明前面

175
00:07:58,370 --> 00:08:01,930
加上不同的前缀来表示

176
00:08:01,930 --> 00:08:04,130
这个department id列指的是谁的

177
00:08:04,130 --> 00:08:04,890
明白我的意思吧

178
00:08:04,890 --> 00:08:06,450
我们可以用表明作为前缀

179
00:08:06,450 --> 00:08:08,890
也可以使用表别名作为前缀

180
00:08:08,890 --> 00:08:11,730
那么我们再看现在加上表前缀以后

181
00:08:11,730 --> 00:08:15,130
那就是告诉MySQL这个服务器

182
00:08:15,130 --> 00:08:18,650
这个department id是安普拉一表的department id

183
00:08:18,650 --> 00:08:22,130
这个department id是department的department id

184
00:08:22,130 --> 00:08:23,130
对吧

185
00:08:23,130 --> 00:08:26,010
那么同时加上了表前缀以后

186
00:08:26,010 --> 00:08:28,930
其实我们自己在阅读这个Cycle语句的时候

187
00:08:28,930 --> 00:08:30,450
也可以很好的理解到

188
00:08:30,450 --> 00:08:32,810
到底你现在department id是哪个表的

189
00:08:32,810 --> 00:08:34,770
哪个列是哪个表的

190
00:08:34,770 --> 00:08:35,530
是不是同学们

191
00:08:35,530 --> 00:08:37,370
这样可以增加我们的阅读性

192
00:08:37,370 --> 00:08:41,410
以及在执行时会避免一些问题的出现

193
00:08:41,410 --> 00:08:42,370
好

194
00:08:42,370 --> 00:08:43,210
我们再来看

195
00:08:43,210 --> 00:08:47,490
Slack的纸句需要返回的列名

196
00:08:47,490 --> 00:08:48,530
比如像这个

197
00:08:48,530 --> 00:08:50,090
安普拉一last name

198
00:08:50,090 --> 00:08:52,410
然后安普拉一number和department number

199
00:08:52,410 --> 00:08:54,130
这些是安普拉一表当中的

200
00:08:54,130 --> 00:08:55,490
而department number

201
00:08:55,490 --> 00:08:57,370
department name和location id

202
00:08:57,370 --> 00:08:59,330
这些是department的表当中的

203
00:08:59,330 --> 00:09:01,330
所以我要想做这样的一个查询

204
00:09:01,330 --> 00:09:03,370
肯定会用到一个多表查询

205
00:09:03,370 --> 00:09:05,050
那么我们用多表的什么呢

206
00:09:05,050 --> 00:09:09,170
我们想判断department id部门相同的那些员工

207
00:09:09,170 --> 00:09:10,730
以及他的工作id

208
00:09:10,730 --> 00:09:12,650
他的location id

209
00:09:12,650 --> 00:09:13,170
是吧

210
00:09:13,170 --> 00:09:14,970
这时候肯定会用到等值链接

211
00:09:14,970 --> 00:09:17,930
并且以department的id

212
00:09:17,930 --> 00:09:20,370
作为一个链接条件的列

213
00:09:20,370 --> 00:09:22,370
判断相等的一个链接条件列

214
00:09:22,370 --> 00:09:23,570
明白这意思吧

215
00:09:23,570 --> 00:09:24,414
好

216
00:09:25,018 --> 00:09:27,818
from 子句指定数据库必须访问两个表

217
00:09:27,818 --> 00:09:29,978
一个是安波拉意识表,一个是department表

218
00:09:29,978 --> 00:09:31,498
所以在这我们看

219
00:09:31,498 --> 00:09:35,298
slack子句的作用就是来定位你要投影哪些列

220
00:09:35,298 --> 00:09:37,458
如果你要做的是多表连接

221
00:09:37,458 --> 00:09:40,618
那么这两个表的列你都可以任意选择你要投影的列

222
00:09:40,618 --> 00:09:41,818
或者叫你要选择的列

223
00:09:41,818 --> 00:09:46,058
而from后面定义的是这些数据来源于哪些表

224
00:09:46,058 --> 00:09:49,338
我们现在这个查询数据来源于安波拉意识表跟department表

225
00:09:49,338 --> 00:09:49,978
对不对

226
00:09:49,978 --> 00:09:53,938
然后where子句后面来指定怎样被连接

227
00:09:53,938 --> 00:09:55,218
你用什么连接方式

228
00:09:55,218 --> 00:09:58,418
我们除了有等值,后面还有非等值连接

229
00:09:58,418 --> 00:09:59,338
对不对

230
00:09:59,338 --> 00:10:01,498
那么这些我们都需要指定的

231
00:10:01,498 --> 00:10:03,058
比如说我现在用的是等值连接

232
00:10:03,058 --> 00:10:08,298
那就正常的用相等的方式去做连接列的一个相等判断

233
00:10:08,298 --> 00:10:09,658
那么谁是连接列呢

234
00:10:09,658 --> 00:10:11,966
department的ID是连接列

235
00:10:12,666 --> 00:10:19,026
我是要判断部门相同的 所以我肯定要用departmentid去作为链接列的相等的链接

236
00:10:19,026 --> 00:10:25,826
这就是等着链接 明白吧 因为departmentid的列两个表同名列

237
00:10:25,826 --> 00:10:30,346
这两个表都叫departmentid 所以它必须要用表名作为前缀以避免混淆

238
00:10:30,346 --> 00:10:35,786
我们刚刚说过了 是吧 好 我们再来看 增加搜索条件

239
00:10:35,786 --> 00:10:41,026
那么我们除了可以在多表链接当中来给定链接条件以外

240
00:10:41,026 --> 00:10:47,386
那么我们给定链接条件以后 它所查询的所有的数据就是符合这个链接条件的数据

241
00:10:47,386 --> 00:10:53,346
那么除此之外 我们还可以使用and操作符去附加其他的搜索条件

242
00:10:53,346 --> 00:10:58,066
比如说现在我要去判断 我要去链接查询部门相同的员工

243
00:10:58,066 --> 00:11:03,106
那可能查出了500条数据 那么在这500条数据当中 我又要做一些条件的过滤

244
00:11:03,106 --> 00:11:09,506
比如说年龄是多少的 部门名字是多少的 部门ID是什么的 姓名是什么的

245
00:11:09,506 --> 00:11:16,426
你都可以在继续后面 继续在这个查询后面去添加搜索条件 明白这些是吧

246
00:11:16,426 --> 00:11:28,466
好 我们再看 添加条件查询 除链接之外 可能还需要要求用val子据在链接中限制一个或多个表当中的行

247
00:11:28,466 --> 00:11:32,866
这是可以的 我们再看 限制不明确的列

248
00:11:32,866 --> 00:11:38,826
那么什么是限制不明确的列呢 在多表当中使用表前缀限制修饰列名

249
00:11:38,826 --> 00:11:45,346
用表前缀改善性能 用列别名区别相同列 但在不同表当中列

250
00:11:45,346 --> 00:11:51,146
什么意思 就是我们可以使用表名作为前缀来区别那些同名的列

251
00:11:51,146 --> 00:11:54,706
在多个表当中 如果列都同名 那这就是不明确的列

252
00:11:54,706 --> 00:12:02,826
我们可以使用表前缀 甚至还可以使用别名来作为一个不明确列的区分 明白这些是吧

253
00:12:02,826 --> 00:12:11,946
这比较简单 我们再看 使用表别名 我们之前上面那个例子是使用表名来区分那些不明确列的

254
00:12:11,946 --> 00:12:18,466
那么我们除了可以使用表名作为前缀以外 我们还可以使用表别名

255
00:12:18,466 --> 00:12:24,266
那么所谓的表别名我们之前也讲过了 就是在表的后面定义一个字符

256
00:12:24,266 --> 00:12:27,386
那么这个字符用空格分割 就是这个表的别名

257
00:12:27,386 --> 00:12:36,226
我们可以通过这个别名去指明调用或者是指明当前使用的是这个表的哪个列 明白这些是吧

258
00:12:36,226 --> 00:12:41,346
所以我们刚才这个案例 如果用表别名的方式也可以改造成这种形式

259
00:12:41,346 --> 00:12:45,226
比如说emplye的表别名e,department的表别名d

260
00:12:45,226 --> 00:12:51,826
那接下来我再给定链接条件是 由于departmentid这两个表当中的departmentid链接列都叫这个名

261
00:12:51,826 --> 00:12:57,546
那我就可以这么去说了 1.departmentid等于d.departmentid 那很显然告诉他

262
00:12:57,546 --> 00:13:03,066
这个是emplye表的departmentid 这个是department字表当中的departmentid

263
00:13:03,066 --> 00:13:08,666
对吧 这样也可以实现用表名作为前缀的这样的区别

264
00:13:08,666 --> 00:13:15,146
那么其实很显然表名的方式更好理解一些 因为表名前缀表名太长了

265
00:13:15,146 --> 00:13:21,946
如果表名很长的话看起来也麻烦 阅读性不高 用表名前缀 用别名的方式会更好一些

266
00:13:21,946 --> 00:13:23,646
明白这些吧同学们

267
00:13:23,646 --> 00:13:24,858
< No Speech >

268
00:13:24,858 --> 00:13:27,578
好,那我们再看一下表别名的定义原则

269
00:13:27,578 --> 00:13:29,738
表别名不宜过长,短一些更好

270
00:13:29,738 --> 00:13:31,818
然后表别名应该具有意义

271
00:13:31,818 --> 00:13:33,218
这句话非常重要

272
00:13:33,218 --> 00:13:35,018
我们在定义表别名的时候

273
00:13:35,018 --> 00:13:36,578
最好是能定义出这个

274
00:13:36,578 --> 00:13:39,538
通过这个别名能看出这个意义是什么

275
00:13:39,538 --> 00:13:42,298
然后表别名只对当前的slack的语句有效

276
00:13:42,298 --> 00:13:44,298
也就是说你现在定义的表别名

277
00:13:44,298 --> 00:13:46,378
只对当前这个查询语句有效

278
00:13:46,378 --> 00:13:47,658
在其他的查询当中

279
00:13:47,658 --> 00:13:48,978
这个表别名是用不了的

280
00:13:48,978 --> 00:13:49,578
明白这一次吧

281
00:13:49,578 --> 00:13:53,378
好,那么我们再来看一下多表连接

282
00:13:53,378 --> 00:13:56,018
我们刚才所谓的多表只是两个表

283
00:13:56,018 --> 00:13:59,538
用employee去连接了departments表

284
00:13:59,538 --> 00:14:01,738
并且使用的是等值连接的方式

285
00:14:01,738 --> 00:14:04,138
因为用departmentid这个列

286
00:14:04,138 --> 00:14:06,498
用相等来判断的这两个列

287
00:14:06,498 --> 00:14:08,898
所以这是一个两个表的连接

288
00:14:08,898 --> 00:14:11,738
那么如果这个连接表的数量更多

289
00:14:11,738 --> 00:14:14,178
比如说我现在要用employee

290
00:14:14,178 --> 00:14:17,418
employees这个表去连接departments

291
00:14:17,418 --> 00:14:19,418
他们的连接列是departmentid

292
00:14:19,418 --> 00:14:21,778
并且用相等来判断连接的

293
00:14:21,778 --> 00:14:24,098
然后同时我要用departments表

294
00:14:24,098 --> 00:14:25,858
去连接locations表

295
00:14:25,858 --> 00:14:28,058
而且用的是locationsid作为连接列

296
00:14:28,058 --> 00:14:30,578
然后也是用相等来做的连接条件

297
00:14:30,578 --> 00:14:32,658
这就是三个表的等值连接了

298
00:14:32,658 --> 00:14:33,138
对不对

299
00:14:33,138 --> 00:14:33,898
可不可以呢

300
00:14:33,898 --> 00:14:34,538
可以的

301
00:14:34,538 --> 00:14:36,658
你可以做n表的等值连接

302
00:14:36,658 --> 00:14:38,098
明白吧

303
00:14:38,098 --> 00:14:40,578
这个对于连接的表的数量没有什么限制

304
00:14:40,578 --> 00:14:43,498
我之前在公司里做开发的时候

305
00:14:43,498 --> 00:14:46,338
由于我们这个系统当中所涉及的表比较多

306
00:14:46,338 --> 00:14:47,778
我们有的时候写一个查询

307
00:14:47,778 --> 00:14:49,298
去做一个等值连接

308
00:14:49,298 --> 00:14:50,378
会连到好几张

309
00:14:50,378 --> 00:14:51,738
比如说10张表都有可能

310
00:14:51,738 --> 00:14:53,018
我们的一个cycle语句

311
00:14:53,018 --> 00:14:54,138
写这个word文档

312
00:14:54,138 --> 00:14:54,898
写大半

313
00:14:54,898 --> 00:14:56,058
就是这个整个word文档

314
00:14:56,058 --> 00:14:58,058
写在一半的这个空间

315
00:14:58,058 --> 00:14:59,018
甚至一多半的空间

316
00:14:59,018 --> 00:15:02,298
就是一个这个cycle语句比较长

317
00:15:02,298 --> 00:15:03,618
cycle语句比较长

318
00:15:03,618 --> 00:15:06,778
所以说这个它是可以连接多个表的

319
00:15:06,778 --> 00:15:08,258
那么为了连接n个表

320
00:15:08,258 --> 00:15:10,218
你至少需要n-1个连接条件

321
00:15:10,218 --> 00:15:12,138
这句话同学们一定要注意

322
00:15:12,138 --> 00:15:12,738
什么意思呢

323
00:15:12,738 --> 00:15:15,138
比如说我连接这三个表

324
00:15:15,138 --> 00:15:16,538
这块我要详细的说一下

325
00:15:16,538 --> 00:15:18,098
我连接这三个表

326
00:15:18,098 --> 00:15:20,138
那这里我至少需要几个连接条件

327
00:15:20,138 --> 00:15:21,298
肯定两个

328
00:15:21,298 --> 00:15:23,218
这是一个连接条件

329
00:15:23,218 --> 00:15:24,778
这是一个连接条件

330
00:15:24,778 --> 00:15:26,338
这个连接条件是来连接

331
00:15:26,338 --> 00:15:28,578
employee跟department的

332
00:15:28,578 --> 00:15:30,018
department表的对吧

333
00:15:30,018 --> 00:15:31,138
而这个连接条件

334
00:15:31,138 --> 00:15:34,058
是来连接department跟location的

335
00:15:34,058 --> 00:15:36,138
所以说我在连接三个表的时候

336
00:15:36,138 --> 00:15:38,538
我的连接条件肯定是需要两个的

337
00:15:38,538 --> 00:15:39,298
对吧

338
00:15:39,298 --> 00:15:42,138
那么如果我给定的是一个连接条件

339
00:15:42,138 --> 00:15:43,938
比如说我只给了一个employee

340
00:15:43,938 --> 00:15:45,738
跟department表的连接条件

341
00:15:45,738 --> 00:15:48,578
而department跟location没有给连接条件

342
00:15:48,578 --> 00:15:50,418
那么这里势必会产生

343
00:15:50,418 --> 00:15:53,298
employees跟department连接完以后的

344
00:15:53,298 --> 00:15:55,418
那个结果和location这个表

345
00:15:55,418 --> 00:15:57,278
产生笛卡尔乘积

346
00:15:58,202 --> 00:16:02,802
明白这意思吧同学们 所以说这句话已经说得很清楚了

347
00:16:03,082 --> 00:16:10,602
你连接的n个表至少需要n减一个表 我连接三个表那至少是要有两个连接条件的

348
00:16:10,602 --> 00:16:12,542
对不对同学们

349
00:16:12,542 --> 00:16:14,010
< No Speech >

350
00:16:14,010 --> 00:16:23,810
那么我们对这个多表的等值链接已经知道了 其实等值链接一句话就是对链接列用相等的方式去做链接条件

351
00:16:23,810 --> 00:16:28,210
那么它就是等值链接 好,那么接下来我们来看一个案例

352
00:16:28,210 --> 00:16:33,278
是利于查询雇员King所在的部门名称

353
00:16:33,914 --> 00:16:36,234
查询King所在的不如名称

354
00:16:36,234 --> 00:16:39,354
这里我们得需要了解一下表结构了

355
00:16:39,354 --> 00:16:41,474
同学们我们在做多表链接的时候

356
00:16:41,474 --> 00:16:44,754
肯定要先去了解你要链接的这些表

357
00:16:44,754 --> 00:16:46,794
它的表结构是什么样的

358
00:16:46,794 --> 00:16:49,354
好 我们先来看一下这个表结构

359
00:16:49,354 --> 00:16:50,394
我们先看谁呢

360
00:16:50,394 --> 00:16:51,914
先看安卜拉一表

361
00:16:51,914 --> 00:16:53,914
右键对象信息

362
00:16:53,914 --> 00:16:56,234
在安卜拉一表当中

363
00:16:56,234 --> 00:16:57,594
它有一个什么呢

364
00:16:57,594 --> 00:16:59,954
Department ID

365
00:16:59,954 --> 00:17:01,074
看到了吗

366
00:17:01,074 --> 00:17:01,554
同学们

367
00:17:01,554 --> 00:17:03,354
然后我们看它的约束

368
00:17:03,354 --> 00:17:04,754
看它的约束

369
00:17:04,754 --> 00:17:06,034
下面有foreign key

370
00:17:06,034 --> 00:17:07,194
有很多foreign key

371
00:17:07,194 --> 00:17:07,674
是吧

372
00:17:07,674 --> 00:17:10,314
其中有一个叫EMP下滑线

373
00:17:10,314 --> 00:17:11,354
DPT下滑线

374
00:17:11,354 --> 00:17:12,754
FK的

375
00:17:12,754 --> 00:17:14,114
那么这个DEPT

376
00:17:14,114 --> 00:17:16,674
EMP和DPT其实就是两个表的简写

377
00:17:16,674 --> 00:17:17,194
谁呢

378
00:17:17,194 --> 00:17:19,594
安卜拉一跟department表的简写

379
00:17:19,594 --> 00:17:21,114
它们的外界

380
00:17:21,114 --> 00:17:22,794
谁作为外界链呢

381
00:17:22,794 --> 00:17:24,514
Department ID

382
00:17:24,514 --> 00:17:26,554
它参照于哪个表呢

383
00:17:26,554 --> 00:17:29,554
参照于department的department ID

384
00:17:29,554 --> 00:17:31,954
也就是说在安卜拉一表当中

385
00:17:31,954 --> 00:17:34,314
有一个department ID这个列

386
00:17:34,314 --> 00:17:35,914
这个列它是一个外界

387
00:17:35,914 --> 00:17:39,514
它参照于department表的主件

388
00:17:39,514 --> 00:17:40,314
对吧

389
00:17:40,314 --> 00:17:42,434
那么我们现在要的这个结果集是什么

390
00:17:42,434 --> 00:17:45,634
我们要的查询的结果集是部门名称

391
00:17:45,634 --> 00:17:48,954
那么部门名称在安卜拉一表当中吗

392
00:17:48,954 --> 00:17:49,954
我们看一下

393
00:17:49,954 --> 00:17:50,954
没有

394
00:17:50,954 --> 00:17:52,314
在安卜拉一表当中

395
00:17:52,314 --> 00:17:54,434
只有一个department ID列

396
00:17:54,434 --> 00:17:56,638
而没有department的name

397
00:17:56,638 --> 00:17:57,818
< No Speech >

398
00:17:57,818 --> 00:18:00,218
那么这个时候部门名称在哪呢

399
00:18:00,218 --> 00:18:02,538
它在department这个表里呢

400
00:18:02,538 --> 00:18:06,178
看department这个表里有一个department的name

401
00:18:07,066 --> 00:18:10,266
看到了吗同学们 那么现在我们要查的是谁呢

402
00:18:10,266 --> 00:18:12,946
是king这个人的部门 king这个数据在哪

403
00:18:12,946 --> 00:18:16,346
是不是在employee表 所以说现在我要查的数据

404
00:18:16,346 --> 00:18:20,506
用户的这个用雇员的名字在employee表

405
00:18:20,506 --> 00:18:24,346
而我要的department的内部呢 却在department表当中

406
00:18:24,346 --> 00:18:26,466
所以现在我的数据肯定要来于两个表了

407
00:18:26,466 --> 00:18:29,386
那我得去做一个department

408
00:18:29,386 --> 00:18:33,146
employees跟department一个多表链接查询了是吧

409
00:18:33,146 --> 00:18:34,746
那么用什么链接呢

410
00:18:34,746 --> 00:18:35,102
由于要做department1做department2

411
00:18:35,102 --> 00:18:36,154
< No Speech >

412
00:18:36,154 --> 00:18:38,834
我要看他的部门的名称

413
00:18:38,834 --> 00:18:41,154
在安波拉一表当中有部门ID

414
00:18:41,154 --> 00:18:45,674
他是参照于department的那个表的departmentID

415
00:18:45,674 --> 00:18:48,354
那我是不是可以用这两个列去做一个相等的判断

416
00:18:48,354 --> 00:18:51,354
这样是不是就可以找到king这个人的部门了

417
00:18:51,354 --> 00:18:53,354
找到部门了我们去拿部门的name

418
00:18:53,354 --> 00:18:55,754
不就等于取到这个人的部门名称了吗

419
00:18:55,754 --> 00:18:56,354
对吧

420
00:18:56,354 --> 00:18:58,914
那这里肯定要去用department的ID

421
00:18:58,914 --> 00:19:01,274
两个表的departmentID做相等的判断

422
00:19:01,274 --> 00:19:03,994
所以这就是一个多表的等值链接就可以搞定

423
00:19:03,994 --> 00:19:05,114
是吧

424
00:19:05,114 --> 00:19:05,594
同学们

425
00:19:05,594 --> 00:19:06,314
好

426
00:19:06,314 --> 00:19:07,314
我们来写一个

427
00:19:07,314 --> 00:19:08,794
< No Speech >

428
00:19:08,794 --> 00:19:13,234
select,然后from我们先把结构搭建出来

429
00:19:13,234 --> 00:19:14,954
然后where对吧

430
00:19:14,954 --> 00:19:16,514
三个关键字三个子句

431
00:19:16,514 --> 00:19:17,594
先来看from

432
00:19:17,594 --> 00:19:20,034
现在你要查的这个数据来源于哪个表

433
00:19:20,034 --> 00:19:22,634
是不是来源于unplye表起个别名e

434
00:19:22,634 --> 00:19:24,234
还有一个department的表

435
00:19:24,234 --> 00:19:25,234
对吧

436
00:19:25,234 --> 00:19:26,634
d是不是

437
00:19:26,634 --> 00:19:29,514
虽然你要的这个数据只是department里面的

438
00:19:29,514 --> 00:19:31,914
但是你给定的条件却是用的这个表里的

439
00:19:31,914 --> 00:19:33,594
所以肯定两个表都要用到的

440
00:19:33,594 --> 00:19:34,314
对不对

441
00:19:34,314 --> 00:19:36,274
然后where这个时候先写什么

442
00:19:36,274 --> 00:19:37,834
先写链接条件

443
00:19:37,834 --> 00:19:41,154
那你先想用什么样的一个链接

444
00:19:41,154 --> 00:19:46,994
用unplye的department的列的值和department里的departmentid的值

445
00:19:46,994 --> 00:19:48,794
departmentid这个列的值做相等判断

446
00:19:48,794 --> 00:19:49,634
那就是等值链接

447
00:19:49,634 --> 00:19:50,114
对吧

448
00:19:50,114 --> 00:19:56,414
那就是一点departmentid等于d.departmentid

449
00:19:57,210 --> 00:19:57,810
对吧

450
00:19:57,810 --> 00:20:03,130
然后这是查询出所有部门相同的员工了

451
00:20:04,026 --> 00:20:05,386
以及部门信息了

452
00:20:05,386 --> 00:20:06,026
对不对

453
00:20:06,266 --> 00:20:09,146
那么现在我要的是king这个人的

454
00:20:09,346 --> 00:20:10,026
那怎么办

455
00:20:10,026 --> 00:20:13,586
继续加and来作为搜索条件的一个过滤

456
00:20:13,586 --> 00:20:13,946
对吧

457
00:20:13,946 --> 00:20:14,426
什么呢

458
00:20:14,426 --> 00:20:18,686
lastname总约key

459
00:20:18,686 --> 00:20:20,154
< No Speech >

460
00:20:20,154 --> 00:20:26,874
对吧同学们 然后投影什么呢?列要什么呢?要D.DepartmentName

461
00:20:26,874 --> 00:20:27,930
< No Speech >

462
00:20:27,930 --> 00:20:34,530
对吧?好,我们查询,OK,可以看到,现在这个King应该有两个

463
00:20:34,530 --> 00:20:39,210
一个是销售部,一个是Executive部,所以说我们可以看到

464
00:20:39,210 --> 00:20:44,130
现在在这个多表链接当中,这个是链接条件

465
00:20:44,130 --> 00:20:49,250
两个表链接时至少有n-1个条件,那么两个表链接时肯定只有一个链接

466
00:20:49,250 --> 00:20:52,010
至少有一个链接条件的,对吧?链接条件在这儿呢

467
00:20:52,010 --> 00:20:58,610
然后后面我通过AND又去加了除了链接条件以外的其他的数据过滤的行选择的一个条件

468
00:20:58,610 --> 00:21:03,570
就是Name的等于King的这个人,明白这些吧,同学们

469
00:21:03,570 --> 00:21:08,530
这样我们就把这个功能,把这个需求做了一个实现,比较简单

470
00:21:08,530 --> 00:21:15,810
好,我们再来看4.2,4.2要求显示每个雇员的Last Name,Department Name跟City

471
00:21:15,810 --> 00:21:23,050
我们看,Last Name在安普莱意表当中,Department Name在Department表当中

472
00:21:23,050 --> 00:21:28,222
City工作的城市在哪?工作的城市我们看一下表结构

473
00:21:28,954 --> 00:21:34,074
在department表当中并没有一个location并没有一个cty

474
00:21:34,074 --> 00:21:35,034
对吧

475
00:21:35,034 --> 00:21:37,034
安普拉一表当中也没有cty

476
00:21:37,034 --> 00:21:38,314
那这个cty在哪呢

477
00:21:38,314 --> 00:21:40,874
这个cty在有一个location的表看到了吗

478
00:21:40,874 --> 00:21:42,634
这里有一个cty

479
00:21:42,634 --> 00:21:44,634
然后注意看

480
00:21:44,634 --> 00:21:49,114
在department表当中有一个locationid

481
00:21:49,114 --> 00:21:49,834
看到了吗

482
00:21:49,834 --> 00:21:51,434
然后我们看它的约束

483
00:21:51,434 --> 00:21:53,194
它有一个约束

484
00:21:53,194 --> 00:21:57,034
第一批t下滑线lc然后下滑线fk

485
00:21:57,034 --> 00:22:01,034
那么这是department跟location表的一个外界fk

486
00:22:01,034 --> 00:22:01,834
是吧

487
00:22:01,834 --> 00:22:03,754
然后foreign key谁呢

488
00:22:03,754 --> 00:22:05,514
locationid

489
00:22:05,514 --> 00:22:09,354
department表里的locationid是一个外界

490
00:22:09,354 --> 00:22:11,034
然后它参照于谁呢

491
00:22:11,034 --> 00:22:14,474
参照于location表的locationid

492
00:22:14,474 --> 00:22:14,874
哦

493
00:22:14,874 --> 00:22:16,554
那我们现在知道它的关系了

494
00:22:16,554 --> 00:22:20,714
我们可以通过department表的locationid

495
00:22:20,714 --> 00:22:25,194
去找到location表当中我们所关心的数据

496
00:22:25,194 --> 00:22:25,994
是吧

497
00:22:25,994 --> 00:22:28,714
那现在我们要想查询到这个数据

498
00:22:28,714 --> 00:22:31,354
是不是得做到一个三个表的链接了

499
00:22:31,354 --> 00:22:33,194
第一个安普拉一表

500
00:22:33,194 --> 00:22:34,634
第二个department表

501
00:22:34,634 --> 00:22:36,314
第三个location表

502
00:22:36,314 --> 00:22:36,874
对吧

503
00:22:36,874 --> 00:22:38,874
然后用什么链接方式呢

504
00:22:38,874 --> 00:22:41,034
他要的是这个人的姓名名称

505
00:22:41,034 --> 00:22:42,314
以及他所工作的城市

506
00:22:42,314 --> 00:22:45,754
那肯定要用安普拉一表的department id

507
00:22:45,754 --> 00:22:49,994
和department表当中的departmentid去链接

508
00:22:49,994 --> 00:22:52,714
以及department当中的locationid

509
00:22:52,714 --> 00:22:55,194
跟location表当中的locationid链接

510
00:22:55,194 --> 00:22:57,594
然后才能拿到我们需要的数据

511
00:22:57,594 --> 00:22:58,794
部门相同

512
00:22:58,794 --> 00:23:00,318
locationid相同的

513
00:23:00,826 --> 00:23:04,346
对不对?好,那我们来写这样的一个查询

514
00:23:04,346 --> 00:23:08,570
< No Speech >

515
00:23:08,570 --> 00:23:09,170
对吧

516
00:23:09,170 --> 00:23:10,890
然后from

517
00:23:10,890 --> 00:23:12,930
然后re

518
00:23:12,930 --> 00:23:14,130
from什么呢

519
00:23:14,130 --> 00:23:15,010
umplye

520
00:23:15,010 --> 00:23:16,170
e逗号

521
00:23:16,170 --> 00:23:17,730
depart

522
00:23:17,730 --> 00:23:19,354
< No Speech >

523
00:23:19,354 --> 00:23:23,714
DepartmentD,然后LocationL

524
00:23:23,714 --> 00:23:26,634
可以吧,这是三个表,然后给定链接条件

525
00:23:26,634 --> 00:23:29,674
那么我们现在要链接三个表,链接条件至少应该有几个

526
00:23:29,674 --> 00:23:31,954
至少有两个是吧,那怎么连呢

527
00:23:31,954 --> 00:23:37,994
是不是用一表的DepartmentID等于D表的DepartmentID

528
00:23:37,994 --> 00:23:39,954
现在完成这两个表的链接了

529
00:23:39,954 --> 00:23:42,954
对吧,那现在这个表跟这个表还没连呢

530
00:23:42,954 --> 00:23:46,594
那怎么连呢,AND加条件,什么呢

531
00:23:46,594 --> 00:23:52,754
DepartmentID的LocationID等于L的LocationID

532
00:23:52,754 --> 00:23:53,786
< No Speech >

533
00:23:53,786 --> 00:24:00,546
是吧同学们 这样我们链接表的三个表的链接三个表的两个链接条件就已经搞定了

534
00:24:00,546 --> 00:24:05,786
是吧 然后他要什么呢 要last name那就一点 last name

535
00:24:05,786 --> 00:24:10,986
还要什么呢 department name啊 那就是D点department name

536
00:24:10,986 --> 00:24:17,566
以及什么location那就L点location啊 L点city是吧 要的是city

537
00:24:18,234 --> 00:24:19,966
我若最近一个人陪你耍太阳没必要

538
00:24:19,966 --> 00:24:22,650
< No Speech >

539
00:24:22,650 --> 00:24:24,330
这样就可以了,然后运行

540
00:24:24,330 --> 00:24:25,450
看到了吗同学们

541
00:24:25,450 --> 00:24:27,358
这样就查到了这些数据了

542
00:24:27,358 --> 00:24:29,178
< No Speech >

543
00:24:29,178 --> 00:24:31,978
好我们来看一下这个呃习题

544
00:24:31,978 --> 00:24:33,402
< No Speech >

545
00:24:33,402 --> 00:24:44,242
第一个,n表链接至少需要几个链接条件?A,n个,B,一个,C,n-1个,D,n加1个

546
00:24:44,242 --> 00:24:50,962
那这道题的答案是什么?很显然是C嘛,n个表链接至少需要n-1个链接条件

547
00:24:50,962 --> 00:24:54,362
对吧?OK,我们再来看第二题

548
00:24:54,362 --> 00:25:05,882
等值链接是使用什么作为链接条件?A,值的相等性,B,值的相反性,C,值的不同性,D,值的相似性

549
00:25:05,882 --> 00:25:13,882
应该是哪个呢?很显然是A嘛,值的相等性,我们用等号来作为两个链的链接的判断

550
00:25:13,882 --> 00:25:18,962
那这肯定是等值链接了,对不对?好,所以这个题的答案是A

551
00:25:18,962 --> 00:25:27,842
1,C,2,A,没问题吧?好,同学们,这样我们就把Mysql当中的SQL-92的等值链接为大家做了一个讲解

552
00:25:27,842 --> 00:25:32,158
其实等值链接还是很好理解的,好,那我们这节课就到这

