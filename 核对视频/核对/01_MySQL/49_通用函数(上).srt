1
00:00:00,000 --> 00:00:01,050
< No Speech >

2
00:00:01,050 --> 00:00:08,414
从这一刻开始,我们再来讲解一下MySQL数据库中的单行函数的最后一类函数

3
00:00:09,114 --> 00:00:10,714
通用函数

4
00:00:10,714 --> 00:00:14,834
那么通用函数我们会分为两个视频去讲解

5
00:00:14,834 --> 00:00:16,954
我们为什么会分为两个视频呢?

6
00:00:16,954 --> 00:00:24,034
原因就是通用函数的难度相比较我们之前所讲过的那些函数而言

7
00:00:24,034 --> 00:00:26,594
要显得稍稍复杂一些

8
00:00:26,594 --> 00:00:28,754
那么通用函数为什么会复杂呢?

9
00:00:28,754 --> 00:00:37,234
原因就是它完成的工作更多的是用于一些逻辑判断性质的这样的一些函数

10
00:00:37,234 --> 00:00:45,114
也就是说当我们在一个查询当中想对查询当中的一些内容去做带有逻辑判断的这样的处理的时候

11
00:00:45,114 --> 00:00:47,354
那么我们就要用到通用函数了

12
00:00:47,354 --> 00:00:48,514
明白这意思吧?

13
00:00:48,514 --> 00:00:55,394
好,那么我们先来看一下在Meseco的单函函数当中常见的通用函数有哪些

14
00:00:55,394 --> 00:00:57,834
首先第一个,义父函数

15
00:00:57,834 --> 00:01:00,274
义父函数它需要三个参数

16
00:01:00,274 --> 00:01:03,874
那我们来看一下这个义父函数的作用是什么?

17
00:01:03,874 --> 00:01:08,434
如果表达式成立,第一个参数就是表达式

18
00:01:08,434 --> 00:01:12,394
如果表达式成立,则返回第二个参数

19
00:01:12,394 --> 00:01:16,234
如果第一个表达式不成立,则返回第三个参数

20
00:01:16,234 --> 00:01:19,194
同学们考虑一下,这个有点像什么?

21
00:01:19,194 --> 00:01:22,514
是不是和我们家里的三元运算比较相似?

22
00:01:22,514 --> 00:01:26,754
当条件满足时返回第一个值,否则返回第二个值

23
00:01:26,754 --> 00:01:29,834
是不是?跟我们这个三元运算是比较相似的

24
00:01:29,834 --> 00:01:34,754
那么其实这个义父函数的作用就是来实现类似于三元运算的这种操作的

25
00:01:34,754 --> 00:01:36,274
明白这些是吧?

26
00:01:36,274 --> 00:01:37,954
好,我们来看一下这个实例

27
00:01:37,954 --> 00:01:41,514
首先是这个select,然后义父函数

28
00:01:41,514 --> 00:01:45,554
第一个参数是表达式,第二个参数跟第三个参数都是值

29
00:01:45,554 --> 00:01:50,274
如果1大于0成立了,那么这个时候它会返回第二个参数的值

30
00:01:50,274 --> 00:01:54,674
如果第一个参数的值不成立,则返回第三个参数的值

31
00:01:54,674 --> 00:01:57,994
那我们看一下1大于0吗?答案肯定是大于0的

32
00:01:57,994 --> 00:02:01,074
所以它返回的是第二个参数的值,那就是正确

33
00:02:01,074 --> 00:02:04,914
那么如果现在我把1改成0了呢?0大于0吗?

34
00:02:04,914 --> 00:02:07,074
很显然这个表达式是不成立的

35
00:02:07,074 --> 00:02:12,194
不成立这回返回的是谁啊?就是第三个参数,错误这个字符串

36
00:02:12,194 --> 00:02:14,994
明白这些是吧?这是这个义父函数的作用

37
00:02:14,994 --> 00:02:18,754
好,我们再来看第二个函数,叫ifnone

38
00:02:18,754 --> 00:02:21,834
那么这个函数它是需要两个参数的

39
00:02:21,834 --> 00:02:23,874
那么这个函数的作用是什么呢?

40
00:02:23,874 --> 00:02:28,874
如果唯一的值不为空,也就是说第一个参数的值不为空时

41
00:02:28,874 --> 00:02:31,274
则返回第一个参数

42
00:02:31,274 --> 00:02:37,074
如果第一个参数的值为空呢?则返回第二个参数的值

43
00:02:37,074 --> 00:02:39,834
明白这些是吧?这是这个ifnone的函数的作用

44
00:02:39,834 --> 00:02:43,634
如果第一个参数不为空,它是跟空有关的

45
00:02:43,634 --> 00:02:46,674
如果第一个参数不为空,则返回第一个参数的值

46
00:02:46,674 --> 00:02:50,314
如果第一个参数为空,则返回第二个参数的值

47
00:02:50,314 --> 00:02:52,394
好,我们来看一下实例

48
00:02:52,394 --> 00:02:55,034
select,然后ifnone,第一个参数为空

49
00:02:55,034 --> 00:02:57,234
那应该返回的是谁?第二个参数的值

50
00:02:57,234 --> 00:02:59,154
所以它返回的是hello world,对吧?

51
00:02:59,154 --> 00:03:02,034
那么如果第一个参数的值是odd rule呢?

52
00:03:02,034 --> 00:03:05,874
很显然,odd rule是不为空的,那只要返回odd rule

53
00:03:05,874 --> 00:03:09,194
明白这些是吧?这是这个ifnone的一个作用

54
00:03:09,194 --> 00:03:12,754
好,我们再来看第三个函数,isnone

55
00:03:12,754 --> 00:03:16,794
那么我们通过这个函数的名也能知道这个函数的作用了

56
00:03:16,794 --> 00:03:21,234
就是来判断是不是为空的,是吧?isnone是不是空的

57
00:03:21,234 --> 00:03:27,834
如果参数,如果给定的参数是空,那么isnone则返回true

58
00:03:27,834 --> 00:03:31,674
如果是空,则返回true,否则返回false

59
00:03:31,674 --> 00:03:33,674
判断表达式是否为空

60
00:03:33,674 --> 00:03:37,754
select,isnone,如果是none,则返回1,否则返回false

61
00:03:37,754 --> 00:03:40,154
明白这些是吧?否则返回0

62
00:03:40,154 --> 00:03:43,194
好,那么我们再来看一下noneif

63
00:03:43,194 --> 00:03:48,074
noneif它跟我们刚才所讲过的这个ifnone的函数的名字比较相似

64
00:03:48,074 --> 00:03:49,354
只是位置发生了变化

65
00:03:49,354 --> 00:03:51,354
一个叫ifnone,一个叫noneif,对吧?

66
00:03:51,354 --> 00:03:55,354
那别看这个名字的相似度比较高

67
00:03:55,354 --> 00:03:58,354
但是这两个函数的作用是截然不同的

68
00:03:58,354 --> 00:04:01,714
我们来看一下noneif函数,它也是需要两个参数

69
00:04:01,714 --> 00:04:05,634
那么它的作用是什么呢?是来比较两个参数是否相同

70
00:04:05,634 --> 00:04:09,754
如果参数x2,1与x2相等

71
00:04:09,754 --> 00:04:13,874
如果这两个参数相同相等,那么则返回空

72
00:04:13,874 --> 00:04:16,834
否则返回第一个参数的值

73
00:04:16,834 --> 00:04:19,594
看到了吗?这就是noneif函数的作用

74
00:04:19,594 --> 00:04:22,914
好,我们来看,select noneif,然后25,25

75
00:04:22,914 --> 00:04:26,354
两个值是不是相等啊?那它应该返回空

76
00:04:26,354 --> 00:04:28,834
那如果我第一个参数给的是24呢?

77
00:04:28,834 --> 00:04:32,634
那很显然这两个值不相等,那它返回的就是24

78
00:04:32,634 --> 00:04:35,234
不相同的时候返回第一个参数的值

79
00:04:35,234 --> 00:04:38,474
明白这些是吧?OK,这是noneif

80
00:04:38,474 --> 00:04:42,314
好,我们再来看下一个函数,叫coreless

81
00:04:42,314 --> 00:04:45,274
coreless函数它可以给定多个参数

82
00:04:45,274 --> 00:04:48,634
那么它的作用是什么呢?返回参数中

83
00:04:48,634 --> 00:04:51,954
第一个非空表达式从左向右,什么意思啊?

84
00:04:51,954 --> 00:04:55,394
它会从第一个参数来判断是不是为空

85
00:04:55,394 --> 00:04:58,554
直到找到那个不为空的,把它返回

86
00:04:58,554 --> 00:05:01,914
这个也比较好理解吧?我们来看一下实例

87
00:05:01,914 --> 00:05:05,074
select coreless,第一个参数为空,再往后找

88
00:05:05,074 --> 00:05:08,394
第二个参数为空,再往后找,第三个参数为空,再往后找

89
00:05:08,394 --> 00:05:12,314
第四个参数不为空了,这个值为北京商堂.com

90
00:05:12,314 --> 00:05:15,794
那么这个coreless函数就返回的,返回的值就是

91
00:05:15,794 --> 00:05:18,314
北京商堂.com,明白这些是吧?

92
00:05:18,314 --> 00:05:20,834
如果这个位置的值再为空,继续往下找

93
00:05:20,834 --> 00:05:24,554
找到这个google.com,把它再返回

94
00:05:24,554 --> 00:05:27,154
但是如果这个参数已经不为空了

95
00:05:27,154 --> 00:05:30,114
那就直接把它返回了,后面的都不会再去判断了

96
00:05:30,114 --> 00:05:33,234
明白这些是吧?这是这个coreless函数的作用

97
00:05:33,234 --> 00:05:36,794
好,我们再来看最后一个函数,叫case函数

98
00:05:36,794 --> 00:05:41,074
这个函数的语法和我们其他函数的语法使用起来不太一样

99
00:05:41,074 --> 00:05:43,314
我们其他函数使用都是有小括号的

100
00:05:43,314 --> 00:05:45,314
但是case函数是没有小括号的

101
00:05:45,314 --> 00:05:48,034
明白这些是吧?但是它也是一个函数

102
00:05:48,034 --> 00:05:50,594
好,我们来看一下case函数的作用

103
00:05:50,594 --> 00:05:56,914
case表示函数的开始,and表示函数的结束

104
00:05:56,914 --> 00:06:01,394
这里注意,case函数必定是以case关键字开始,以and结尾的

105
00:06:01,394 --> 00:06:05,514
然后,如果条件1成立,则返回result1

106
00:06:05,514 --> 00:06:07,714
如果条件2成立,则返回result2

107
00:06:07,714 --> 00:06:10,954
当全部不成立的时候,返回result

108
00:06:10,954 --> 00:06:16,434
这个就有点像什么呢?像我们家当中的if,else if,else if,else if

109
00:06:16,434 --> 00:06:17,914
然后最后一个else

110
00:06:17,914 --> 00:06:20,234
有点像我们家里的这种判断结构

111
00:06:20,234 --> 00:06:21,954
我们来看一下

112
00:06:21,954 --> 00:06:24,794
比如说现在这个值跟我的

113
00:06:24,794 --> 00:06:32,674
注意啊,它的表达式,它的判断的条件和结果是用一个问跟认来表示的

114
00:06:32,674 --> 00:06:36,314
问后面跟的是一个条件,认表示的是一个结果

115
00:06:36,314 --> 00:06:40,154
明白吧?如果这个表达式跟我第一个问的表达式

116
00:06:40,154 --> 00:06:43,154
跟我第一个问的条件相同了,满足了

117
00:06:43,154 --> 00:06:47,434
那则返回第一个问后面的认的结果

118
00:06:47,434 --> 00:06:49,714
如果这个条件没满足,继续往下判断

119
00:06:49,714 --> 00:06:52,154
第二个问,如果第二个问的条件满足它了

120
00:06:52,154 --> 00:06:55,154
那则返回第二个问的所对应的认的结果

121
00:06:55,154 --> 00:06:58,714
如果都没满足,则返回else的结果

122
00:06:58,714 --> 00:07:01,194
能明白这意思吧?同学们听得好像挺绕的

123
00:07:01,194 --> 00:07:02,878
我们看一个案例就知道了

124
00:07:03,546 --> 00:07:05,306
比如说这个kiss的使用

125
00:07:05,306 --> 00:07:06,626
select kiss

126
00:07:06,626 --> 00:07:07,786
然后最后一个end

127
00:07:07,786 --> 00:07:08,586
这没问题吧

128
00:07:08,586 --> 00:07:10,346
然后kiss后面给了一个字符串

129
00:07:10,346 --> 00:07:10,946
o的卢

130
00:07:10,946 --> 00:07:13,826
接下来我就要判断哪些问当中

131
00:07:13,826 --> 00:07:15,026
有o的卢这个参数

132
00:07:15,026 --> 00:07:15,746
如果有

133
00:07:15,746 --> 00:07:17,306
那就把它所对应的

134
00:07:17,306 --> 00:07:18,466
任的值返回回来

135
00:07:18,466 --> 00:07:20,506
我们看第一个问后面

136
00:07:20,906 --> 00:07:21,906
是不是字符串o的卢

137
00:07:22,346 --> 00:07:24,986
然后任是一个大写的o的卢

138
00:07:24,986 --> 00:07:27,626
那我现在这个查询执行完以后

139
00:07:27,626 --> 00:07:28,426
会返回什么

140
00:07:28,426 --> 00:07:30,026
很显然会返回大写的o的卢

141
00:07:30,386 --> 00:07:32,666
因为第一个问的条件

142
00:07:32,666 --> 00:07:33,906
已经符合我的需求了

143
00:07:34,458 --> 00:07:34,978
对吧

144
00:07:34,978 --> 00:07:39,098
那如果现在我的case后面只给的是admin呢

145
00:07:39,098 --> 00:07:41,618
很显然第一个问是不符合需求的

146
00:07:41,618 --> 00:07:42,978
继续判断第二个问

147
00:07:42,978 --> 00:07:44,338
第二个问的条件

148
00:07:44,338 --> 00:07:45,858
admin是符合他的需求的

149
00:07:45,858 --> 00:07:48,378
那就会把第二个问的认的值返回回去

150
00:07:48,378 --> 00:07:51,018
那我们查询返回的就是admin

151
00:07:51,018 --> 00:07:53,498
如果我这块给的是aa呢

152
00:07:53,498 --> 00:07:55,898
如果我这给的是aa呢

153
00:07:55,898 --> 00:07:59,098
很显然第一个问和第二个问都不满足

154
00:07:59,098 --> 00:07:59,458
对吧

155
00:07:59,458 --> 00:08:00,618
那么这时候怎么办呢

156
00:08:00,618 --> 00:08:01,898
是不是还有一个else呢

157
00:08:01,898 --> 00:08:03,978
这时候会返回一个Kevin

158
00:08:03,978 --> 00:08:05,658
明白了同学们

159
00:08:05,658 --> 00:08:08,538
这个case函数也是很好理解的

160
00:08:08,538 --> 00:08:09,978
并不是我们想象的那么复杂

161
00:08:09,978 --> 00:08:11,258
你只要记住

162
00:08:11,258 --> 00:08:13,698
一个问跟一个认是一个对应的

163
00:08:13,698 --> 00:08:15,178
一个问跟一个认是对应的

164
00:08:15,178 --> 00:08:18,098
哪个case后面的条件这个值

165
00:08:18,098 --> 00:08:18,978
符合哪个问了

166
00:08:18,978 --> 00:08:21,258
就会把哪个问对应的认的值返回

167
00:08:21,258 --> 00:08:23,978
如果都不满足则返回else的值

168
00:08:23,978 --> 00:08:25,378
明白这些吧

169
00:08:25,378 --> 00:08:25,938
好

170
00:08:25,938 --> 00:08:29,658
这样我们就把Mysql当中常用的通用函数

171
00:08:29,658 --> 00:08:31,938
给大家做了一个逐一的讲解

172
00:08:31,938 --> 00:08:32,338
好

173
00:08:32,338 --> 00:08:34,578
我们接下来完成一个示例

174
00:08:34,578 --> 00:08:37,378
去体会一下这些通用函数的一个作用

175
00:08:37,378 --> 00:08:37,978
好

176
00:08:37,978 --> 00:08:39,178
我们来看第一个题

177
00:08:39,178 --> 00:08:40,018
示例一

178
00:08:40,858 --> 00:08:46,618
查询部门编号是50或者80的员工信息

179
00:08:46,618 --> 00:08:50,418
包含他们的薪水名字佣金

180
00:08:50,418 --> 00:08:52,858
并且在income列当中

181
00:08:52,858 --> 00:08:57,098
如果有佣金的则显示sl.com

182
00:08:57,098 --> 00:08:59,966
无佣金的则显示sl.com

183
00:09:00,922 --> 00:09:06,362
那我们来分析一下这个查询啊 我们先看他要的数据是什么

184
00:09:06,362 --> 00:09:10,122
他要的数据是部门编号是50或80的

185
00:09:10,122 --> 00:09:12,602
部门编号是departmentid嘛

186
00:09:12,602 --> 00:09:17,482
那也就是说departmentid是50或者是80的员工的信息

187
00:09:17,482 --> 00:09:18,282
对不对

188
00:09:18,282 --> 00:09:23,518
好 我们先把这个条件 把数据的过滤的条件写出来啊

189
00:09:24,218 --> 00:09:35,338
select from employee表,对吧,然后where什么条件,department下滑线ID是吧,是80或者50的

190
00:09:35,338 --> 00:09:42,814
那我是不是可以写department的ID等于50,or departmentID是吧

191
00:09:42,814 --> 00:09:44,026
< No Speech >

192
00:09:44,026 --> 00:09:46,386
等于80,没有问题吧

193
00:09:46,386 --> 00:09:46,786
是吧

194
00:09:46,786 --> 00:09:49,506
但是我们之前学过了int关键字

195
00:09:50,026 --> 00:09:50,426
是吧

196
00:09:50,426 --> 00:09:54,706
我们是不是可以使用int关键字来完成多个条件间

197
00:09:54,706 --> 00:09:56,826
并且是获得关系的一个判断呢

198
00:09:56,866 --> 00:09:58,266
那对于这样的一个语句

199
00:09:58,266 --> 00:10:01,266
我们是不是就可以简化成departmentid int

200
00:10:01,266 --> 00:10:03,026
然后空格

201
00:10:03,226 --> 00:10:04,906
这个括号50

202
00:10:05,906 --> 00:10:06,906
80是吧

203
00:10:06,906 --> 00:10:07,866
多谢

204
00:10:07,866 --> 00:10:10,106
< No Speech >

205
00:10:10,106 --> 00:10:14,106
看到了吗?同学们,它的效果跟我们刚刚所写的这个

206
00:10:14,106 --> 00:10:18,866
等于50or,departmentid等于80的效果是一样的

207
00:10:18,866 --> 00:10:21,866
明白这意思吧?我们把它格式化一下

208
00:10:21,866 --> 00:10:26,066
这样我们就把它所要的数据已经搞定了

209
00:10:26,066 --> 00:10:31,066
然后接下来我们再看,它要选择哪些列呢?或者叫投影哪些列呢?

210
00:10:31,066 --> 00:10:35,066
它要这个雇员的信息里包含了雇员的名字

211
00:10:35,066 --> 00:10:39,466
那就是last name,还有什么?薪水,那就是salary

212
00:10:39,466 --> 00:10:43,466
对吧?还要什么?佣金,commission,pct

213
00:10:43,466 --> 00:10:47,466
对吧?还要什么?它还要说在一个新的列里

214
00:10:47,466 --> 00:10:52,466
在income这个列当中去计算如果有佣金的

215
00:10:52,466 --> 00:10:56,466
则显示薪水加佣金,salary加com

216
00:10:56,466 --> 00:10:59,466
对吧?如果没有佣金显示一个字符算是sl

217
00:10:59,466 --> 00:11:03,466
那这怎么判断呢?同学们想一下,你看它的这个

218
00:11:03,466 --> 00:11:07,466
逻辑条件,它要的这个条件是什么?如果是什么就给什么

219
00:11:07,466 --> 00:11:09,466
如果不是什么就给另一个

220
00:11:09,466 --> 00:11:13,466
那这种情况是不是跟我们的三元运算的判断结构是比较相似的?

221
00:11:13,466 --> 00:11:19,230
对不对?所以这里我们是不是可以用EF来判断呢?

222
00:11:20,122 --> 00:11:22,722
如果commission我先写啊

223
00:11:22,722 --> 00:11:24,002
如果commission

224
00:11:24,922 --> 00:11:28,362
PCAT等于空,那就显示什么

225
00:11:28,362 --> 00:11:30,282
否则不为空就显示什么

226
00:11:30,282 --> 00:11:31,602
是不是这样的一个意思啊

227
00:11:31,602 --> 00:11:32,402
对不对

228
00:11:32,402 --> 00:11:33,722
但是同学们注意啊

229
00:11:33,722 --> 00:11:38,962
IF函数它的第一个参数要的是一个能够返回true跟false的表达式

230
00:11:38,962 --> 00:11:40,082
而不是空啊

231
00:11:40,082 --> 00:11:43,282
我们commission PCAT要么是空要么具体的值嘛

232
00:11:43,282 --> 00:11:46,762
那么这样的一个值能作用在IF的第一个参数当中吗

233
00:11:46,762 --> 00:11:47,602
是不能的

234
00:11:47,602 --> 00:11:54,082
因为IF的第一个参数要根据它返回的true跟false来决定返回第二个参数还是第三个参数嘛

235
00:11:54,082 --> 00:11:54,882
对不对

236
00:11:54,882 --> 00:12:00,242
很显然我们现在不能直接把commission PCAT放到IF的第一个参数当中的

237
00:12:00,242 --> 00:12:01,842
那怎么办呢

238
00:12:01,842 --> 00:12:02,962
谁能返回true跟

239
00:12:02,962 --> 00:12:07,122
对于空而言谁能判断出如果是空返回true否则返回false呢

240
00:12:07,122 --> 00:12:08,562
同学们马上想到了

241
00:12:08,562 --> 00:12:12,042
我们刚刚讲过一个函数叫isNone嘛

242
00:12:12,042 --> 00:12:17,282
如果参数为空isNone返回true否则返回false

243
00:12:17,282 --> 00:12:18,442
对吧同学们

244
00:12:18,442 --> 00:12:21,362
那么如果isNone返回true说明什么

245
00:12:21,362 --> 00:12:23,402
说明commission PCAT为空

246
00:12:23,402 --> 00:12:28,082
那么commission PCAT为空是不是只显示他有薪水没有佣金呢

247
00:12:28,082 --> 00:12:29,602
那是不是就是ICL啊

248
00:12:29,602 --> 00:12:33,482
否则如果佣金不为空说明他有佣金

249
00:12:33,482 --> 00:12:34,602
isNone返回false

250
00:12:34,602 --> 00:12:38,962
返回false说明这个人他的薪水的构成是有佣金加薪水的

251
00:12:38,962 --> 00:12:41,246
所以是不是salary加

252
00:12:41,246 --> 00:12:43,258
< No Speech >

253
00:12:43,258 --> 00:12:50,138
那么同学们,这样我们就通过两个通用函数的嵌套,解决了这个问题

254
00:12:50,138 --> 00:12:53,498
是不是?我们来执行一下看看效果,运行

255
00:12:53,498 --> 00:13:00,298
现在这个人名,薪水,以及佣金,你看啊,佣金贩售为空的

256
00:13:00,298 --> 00:13:04,830
这是我们少了一个别名,别名我们叫婴儿,婴儿贩售为空的,我们来看一下效果

257
00:13:04,830 --> 00:13:05,850
< No Speech >

258
00:13:05,850 --> 00:13:07,130
incom

259
00:13:07,130 --> 00:13:08,634
< No Speech >

260
00:13:08,634 --> 00:13:10,154
我们再运行

261
00:13:10,154 --> 00:13:14,154
现在在income当中只要佣金为空的都是SAL

262
00:13:14,154 --> 00:13:15,834
但是如果有佣金的呢

263
00:13:15,834 --> 00:13:16,674
我们往下看

264
00:13:16,674 --> 00:13:19,914
有佣金的是不是变成了SAL加com了

265
00:13:19,914 --> 00:13:20,954
明白了同学们

266
00:13:20,954 --> 00:13:22,714
这样我们就通过两个函数

267
00:13:22,714 --> 00:13:24,754
一个if函数一个isnone函数

268
00:13:24,754 --> 00:13:26,114
解决了这个问题

269
00:13:26,114 --> 00:13:27,794
所以我们通过这第一个案例

270
00:13:27,794 --> 00:13:30,194
来体会一下通用函数的作用

271
00:13:30,194 --> 00:13:32,074
当你有这种带有判断

272
00:13:32,074 --> 00:13:33,834
逻辑判断性质的问题了

273
00:13:33,834 --> 00:13:38,154
我们就可以考虑是否能用某个通用函数来解决

274
00:13:38,154 --> 00:13:40,154
明白了同学们

275
00:13:40,154 --> 00:13:43,554
那么这节课我们就是先来讲解一下

276
00:13:43,554 --> 00:13:45,194
常见的通用函数有哪些

277
00:13:45,194 --> 00:13:49,474
以及通过一个示例来使用一下通用函数

278
00:13:49,474 --> 00:13:52,318
那么这节课我们就到这

