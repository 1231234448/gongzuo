1
00:00:00,954 --> 00:00:06,154
上节课我们讲解了聚合函数当中的min函数以及max函数

2
00:00:06,154 --> 00:00:10,954
那么这节课我们再来讲解一下聚合函数当中的count函数

3
00:00:10,954 --> 00:00:13,354
那么count函数的作用是什么呢?

4
00:00:13,354 --> 00:00:19,914
它的作用就是来做结果集的一个计数的返回分组当中的总函数

5
00:00:19,914 --> 00:00:21,834
那么分组我们之前说了

6
00:00:21,834 --> 00:00:27,434
所有的聚合函数势必是要运行在分组的基础之上的

7
00:00:27,434 --> 00:00:31,434
如果你在你的查询当中并没有去指定分组

8
00:00:31,434 --> 00:00:35,434
那么你所查到的结果集就是一个唯一的大的分组

9
00:00:35,434 --> 00:00:39,114
那么这些聚合函数都会以这个大的分组来作为一个运算处理

10
00:00:39,114 --> 00:00:40,074
明白吧?

11
00:00:40,074 --> 00:00:44,874
所以说我们现在如果在一个查询当中用count去做一个计数的话

12
00:00:44,874 --> 00:00:50,474
其实它返回的就是你查询到的这个结果集当中的总函数或者叫总条数

13
00:00:50,474 --> 00:00:51,646
明白这些吗?

14
00:00:52,634 --> 00:00:55,514
好,那我们来看一下Count函数的三种格式

15
00:00:55,514 --> 00:00:57,634
我们在使用这个Count函数的时候

16
00:00:57,634 --> 00:00:59,914
我们可以给定三种不同的参数

17
00:00:59,914 --> 00:01:02,074
那么我们给定不同的三种参数时

18
00:01:02,074 --> 00:01:04,194
它所表示的含义可是截然不同的

19
00:01:04,194 --> 00:01:05,794
比如说我们可以给星

20
00:01:05,794 --> 00:01:07,394
这个星表示什么呢

21
00:01:07,394 --> 00:01:10,034
那么Count的这个参数我们要先明白

22
00:01:10,034 --> 00:01:11,794
Count函数的参数指的是

23
00:01:11,794 --> 00:01:15,994
你要以什么来作为计数的一个参考点

24
00:01:15,994 --> 00:01:17,914
我给星,这个星指的就是

25
00:01:17,914 --> 00:01:19,794
Select子句当中的那个星

26
00:01:19,794 --> 00:01:22,154
我们以前讲Select子句的时候说

27
00:01:22,154 --> 00:01:26,314
如果我想在查询当中想去投影表当中的所有列

28
00:01:26,314 --> 00:01:29,154
想选择所有的列,我们是可以用星来表示

29
00:01:29,154 --> 00:01:31,714
那么这个Count星,这个星指的就是它

30
00:01:31,714 --> 00:01:36,094
也就是说这个Count星它会以查询到的结果集当中的所有的列

31
00:01:36,730 --> 00:01:41,182
构成的这一条完整的数据来作为一个记录函数的参考数据

32
00:01:41,754 --> 00:01:45,274
明白这意思吧?一个数据的记录

33
00:01:45,274 --> 00:01:49,954
那么它会返回表当中满足slack语句当中所有的列的函数

34
00:01:49,954 --> 00:01:53,314
这里包含了重复包含了有空值的列

35
00:01:53,314 --> 00:01:56,674
那么这样呢,con的函数都会把它做一个技术处理的

36
00:01:56,674 --> 00:01:57,950
明白这意思吧?同学们

37
00:01:57,950 --> 00:02:00,410
< No Speech >

38
00:02:00,410 --> 00:02:03,290
第二个这里给的是一个列

39
00:02:03,290 --> 00:02:08,650
如果我在count的参数当中给定的是某一个列的列名

40
00:02:08,650 --> 00:02:13,330
那么这个时候它会以这个列当中所返回的数据作为一个计数的处理

41
00:02:13,330 --> 00:02:17,210
那么如果这个列当中的结果集里还有空的时候

42
00:02:17,210 --> 00:02:20,890
那么这个时候count是不会对空的数据作计数的

43
00:02:20,890 --> 00:02:24,970
我们之前一直强调,所有的聚合函数

44
00:02:24,970 --> 00:02:29,610
它在运行时或者在运算时都会忽略空值的

45
00:02:29,610 --> 00:02:31,290
明白这意思吗?

46
00:02:31,290 --> 00:02:34,090
所以你要给星,那有可能包含空值

47
00:02:34,090 --> 00:02:37,450
你给的是某个具体的列,它是不会包含空值的

48
00:02:37,450 --> 00:02:39,690
举个例子,我们来看一下

49
00:02:39,690 --> 00:02:42,730
比如说我们这写一个select

50
00:02:42,730 --> 00:02:47,210
然后from employee查询员工表所有的数据

51
00:02:47,210 --> 00:02:49,210
对吧?然后count

52
00:02:50,010 --> 00:02:52,690
这里我给星,这是什么意思?

53
00:02:52,690 --> 00:02:56,690
这是查询所有的员工,然后返回它的总条数

54
00:02:56,690 --> 00:02:59,690
对吧,也就是返回员工的总数量了,是不是

55
00:02:59,690 --> 00:03:02,970
我们运行,107条数据

56
00:03:02,970 --> 00:03:05,210
是吧,那你比如说我这里再写一个

57
00:03:05,210 --> 00:03:07,930
我把星换成commission PCT

58
00:03:07,930 --> 00:03:10,770
运行,看结果就变成35了

59
00:03:10,770 --> 00:03:12,370
为什么不是107啊

60
00:03:12,370 --> 00:03:14,610
因为我们在写星的时候

61
00:03:14,610 --> 00:03:17,650
它相当于对这个查询的所有的列

62
00:03:17,650 --> 00:03:20,370
所构成的这一行的数据去做计数嘛

63
00:03:20,370 --> 00:03:23,450
对不对,所以说如果这里commission PCT有空

64
00:03:23,450 --> 00:03:25,250
也不会影响这一条数据的

65
00:03:25,250 --> 00:03:27,970
因为你只是这一条数据当中某个字段有空

66
00:03:27,970 --> 00:03:29,970
你不代表这一条数据为空

67
00:03:29,970 --> 00:03:33,050
所以这条数据commission PCT为空的

68
00:03:33,050 --> 00:03:35,770
这一条数据仍然会被count做计数处理的

69
00:03:35,770 --> 00:03:37,330
明白这意思吧,同学们

70
00:03:37,330 --> 00:03:39,650
那么如果我们现在换成commission PCT呢

71
00:03:39,650 --> 00:03:43,290
我们现在记录的数据仅仅是commission PCT的一个列的值

72
00:03:43,290 --> 00:03:45,050
那如果这里有空,那就是空了

73
00:03:45,050 --> 00:03:48,570
那遇到空了,聚合函数就会对空做忽略处理

74
00:03:48,570 --> 00:03:50,810
所以我们最后得到的结果是35

75
00:03:50,810 --> 00:03:54,330
其实现在我们所返回的含义是什么

76
00:03:54,330 --> 00:03:56,210
如果我们这给的是星

77
00:03:56,210 --> 00:04:01,490
所表达的含义是返回员工表当中所有的员工的

78
00:04:01,490 --> 00:04:03,570
员工表当中的员工总数对不对

79
00:04:03,570 --> 00:04:05,650
那如果这我给commission PCT呢

80
00:04:05,650 --> 00:04:11,010
那只要返回的是这个表当中有佣金的员工的总数

81
00:04:11,010 --> 00:04:14,930
因为那些没有佣金的空它会忽略掉

82
00:04:14,930 --> 00:04:16,050
明白这意思吧,同学们

83
00:04:16,050 --> 00:04:21,810
所以你这给星和给具体的列名所表达的含义可是截然不同的

84
00:04:21,810 --> 00:04:26,730
OK,还有我们除了可以给定这个星或者是具体的列名以外

85
00:04:26,730 --> 00:04:31,370
我们还可以用distinct的关键字来做一个重复的过滤

86
00:04:31,370 --> 00:04:33,010
举个例子

87
00:04:33,010 --> 00:04:36,890
其实在我们聚合函数当中都是可以使用distinct的函数的

88
00:04:36,890 --> 00:04:38,810
比如说我们之前讲过的awg函数

89
00:04:38,810 --> 00:04:41,330
看到了吗,前面是不是可以给定个distinct的

90
00:04:41,330 --> 00:04:44,730
只不过是我们在给定distinct的时候不用加逗号

91
00:04:44,730 --> 00:04:47,930
它虽然说体现的像两个参数

92
00:04:47,930 --> 00:04:49,210
但事实上是不用加逗号的

93
00:04:49,210 --> 00:04:53,250
AWG,SUM,你看是不是也可以给定distinct的

94
00:04:53,250 --> 00:04:56,890
还有MIN,MAX,都有distinct的

95
00:04:56,890 --> 00:05:00,210
包括这个Count也有distinct的

96
00:05:00,210 --> 00:05:01,290
明白这意思吧

97
00:05:01,290 --> 00:05:02,610
那比如说现在是这样的

98
00:05:02,610 --> 00:05:04,770
我的这个列又换了

99
00:05:04,770 --> 00:05:05,570
换成什么呢

100
00:05:05,570 --> 00:05:07,770
换成用job id

101
00:05:07,770 --> 00:05:09,450
我们运行

102
00:05:09,450 --> 00:05:10,530
看现在有多少条

103
00:05:10,530 --> 00:05:11,730
一条107条

104
00:05:11,730 --> 00:05:13,130
为什么会有107条呢

105
00:05:13,130 --> 00:05:17,410
因为我安卓仪表当中所有的员工都有它的工作编码

106
00:05:18,010 --> 00:05:19,170
都有它的叫白帝

107
00:05:19,190 --> 00:05:22,570
那么其实叫白帝是有重复的

108
00:05:22,570 --> 00:05:24,410
你看我把它拿出来

109
00:05:24,410 --> 00:05:25,570
把count去掉

110
00:05:25,570 --> 00:05:27,290
放到这里我运行

111
00:05:27,290 --> 00:05:28,222
你看

112
00:05:28,730 --> 00:05:30,930
同学们这肯定是有重复的

113
00:05:30,930 --> 00:05:32,330
我们往下查一查

114
00:05:32,330 --> 00:05:34,930
看这都是重复的

115
00:05:34,930 --> 00:05:38,130
所以它返回的数据由于有重复的出现

116
00:05:38,130 --> 00:05:40,810
那它返回的就不是你这个表当中的

117
00:05:40,810 --> 00:05:43,050
唯一的叫byD的数量有多少个了

118
00:05:43,050 --> 00:05:44,410
比如现在我要查

119
00:05:44,410 --> 00:05:48,210
在我安普拉一表当中叫byD有多少个

120
00:05:48,210 --> 00:05:49,410
工作编码有多少个

121
00:05:49,410 --> 00:05:51,010
这么查肯定不对

122
00:05:51,010 --> 00:05:54,206
你直接抗的系统叫byD肯定是不对的

123
00:05:54,778 --> 00:05:57,178
是吧 怎么会有107个叫白帝呢

124
00:05:57,178 --> 00:05:58,738
只有107个员工

125
00:05:58,738 --> 00:06:00,418
每个员工都有叫白帝而已

126
00:06:00,418 --> 00:06:00,978
对不对

127
00:06:00,978 --> 00:06:03,218
那现在我要想查有多少个叫白帝

128
00:06:03,218 --> 00:06:05,138
那你这里肯定要去掉重复的呀

129
00:06:05,138 --> 00:06:06,750
Distinct air

130
00:06:06,750 --> 00:06:07,866
< No Speech >

131
00:06:07,866 --> 00:06:10,666
明白吧同学们,运行,是吧

132
00:06:10,666 --> 00:06:13,546
所以我们在用count去做计数的时候

133
00:06:13,546 --> 00:06:17,586
你一定要搞清楚现在你要做计数的结果

134
00:06:17,586 --> 00:06:19,586
业务需求到底是什么

135
00:06:19,586 --> 00:06:22,946
然后你要考虑是用星呢还是用列呢

136
00:06:22,946 --> 00:06:24,946
用具体的列名呢

137
00:06:24,946 --> 00:06:27,186
还要考虑到有没有空值的问题

138
00:06:27,186 --> 00:06:29,306
还要考虑到有没有重复的问题

139
00:06:29,306 --> 00:06:33,306
这样才能达到你满足业务的一个正常的需求的查询

140
00:06:33,306 --> 00:06:37,866
否则你查到的数据未必是你业务当中所要求的数据

141
00:06:37,866 --> 00:06:39,866
会有这个数据错误的问题

142
00:06:39,866 --> 00:06:41,866
能不能明白同学们

143
00:06:41,866 --> 00:06:43,866
所以这块一定要考虑根据你的业务需求

144
00:06:43,866 --> 00:06:46,586
一定要考虑清楚是用星还是用具体的列

145
00:06:46,586 --> 00:06:49,066
如果是具体的列里面有空值怎么办

146
00:06:49,066 --> 00:06:51,306
如果有重复的怎么办你都要考虑好

147
00:06:51,306 --> 00:06:55,146
那么Distinct这个我们就不说了

148
00:06:55,146 --> 00:06:56,106
刚才已经说过了

149
00:06:56,106 --> 00:06:57,386
好我们来看一个实例

150
00:06:57,386 --> 00:06:59,986
实例一要求显示员工表当中

151
00:06:59,986 --> 00:07:03,186
部门编号是80中有佣金的雇员的人数

152
00:07:03,186 --> 00:07:05,466
我们看这个查询他要什么

153
00:07:05,466 --> 00:07:07,066
他要部门编号是80的

154
00:07:07,066 --> 00:07:09,266
部门编号就是Department ID

155
00:07:09,266 --> 00:07:11,066
Department ID是80的

156
00:07:11,066 --> 00:07:12,906
然后有佣金的人数

157
00:07:12,906 --> 00:07:14,106
那就用count

158
00:07:14,106 --> 00:07:16,586
然后里面直接给commission PCT不就行了吗

159
00:07:16,586 --> 00:07:17,826
他会忽略空值的嘛

160
00:07:17,826 --> 00:07:18,586
对不对

161
00:07:18,586 --> 00:07:19,626
好我们来写一个

162
00:07:19,626 --> 00:07:20,986
这个查询也比较简单

163
00:07:20,986 --> 00:07:25,466
select from employee

164
00:07:25,466 --> 00:07:27,866
然后起个别名吧

165
00:07:27,866 --> 00:07:33,466
very.departmentid等于80对吧

166
00:07:33,466 --> 00:07:34,942
然后count

167
00:07:34,942 --> 00:07:36,474
< No Speech >

168
00:07:36,474 --> 00:07:42,354
Count什么呢?1.commission PCT 对吧同学们?运行

169
00:07:42,354 --> 00:07:47,514
这就是部门ID是80的有佣金的员工的总数量

170
00:07:47,514 --> 00:07:51,514
有佣金的员工数量是34个人 明白这一次吧?OK

171
00:07:51,514 --> 00:07:53,674
好 我们再来看第二个题

172
00:07:53,674 --> 00:07:57,874
第二题是显示员工表当中的部门数

173
00:07:57,874 --> 00:08:00,634
部门数是谁啊?Department ID 是吧

174
00:08:00,634 --> 00:08:02,494
我们来看一下啊

175
00:08:02,494 --> 00:08:03,834
< No Speech >

176
00:08:03,834 --> 00:08:09,234
Select它,然后From,还是Unplay一遍

177
00:08:09,234 --> 00:08:10,906
< No Speech >

178
00:08:10,906 --> 00:08:13,466
那么我们这里先直接去投影

179
00:08:13,466 --> 00:08:16,410
< No Speech >

180
00:08:16,410 --> 00:08:20,810
直接投影部门ID,1.departmentid

181
00:08:21,410 --> 00:08:24,610
是不是返回这么多,一共有107条

182
00:08:24,610 --> 00:08:28,990
那我们要想去做一个他的技术,直接用count给他可不可以啊

183
00:08:29,914 --> 00:08:32,794
你要考虑这个结果对不对?肯定不对的

184
00:08:32,794 --> 00:08:36,354
因为我这个员工标里有很多员工都是在同一部门下的

185
00:08:36,354 --> 00:08:38,194
所以他们部门ID是相同的

186
00:08:38,194 --> 00:08:44,034
所以现在返回的数量是,这怎么加上抗子以后又106呢?

187
00:08:44,034 --> 00:08:45,726
因为有一个人他没有部门

188
00:08:46,234 --> 00:08:48,434
有一个人没有部门,明白这意思吧?

189
00:08:48,434 --> 00:08:50,554
谁没有部门呢?我们可以查一下

190
00:08:50,874 --> 00:08:52,914
我们看一下,一点

191
00:08:52,914 --> 00:08:55,134
事国 slashter Name

192
00:08:55,134 --> 00:08:56,570
< No Speech >

193
00:08:56,570 --> 00:08:57,570
where

194
00:08:57,570 --> 00:09:00,090
< No Speech >

195
00:09:00,090 --> 00:09:08,690
departmentid1.departmentid is none 是吧,是空的,谁呢?看一下

196
00:09:08,690 --> 00:09:12,170
Grant这个人没有部门,是吧,咱们之前也做过了

197
00:09:12,170 --> 00:09:16,170
讲这个外连接查询的时候,是吧,有一个

198
00:09:16,170 --> 00:09:18,170
孤人书记是Grant,他没有部门嘛,是吧

199
00:09:18,170 --> 00:09:23,006
那么你看啊,现在呢我再去用count

200
00:09:23,006 --> 00:09:25,242
< No Speech >

201
00:09:25,242 --> 00:09:29,522
去做一点departmentid的一个计数的时候

202
00:09:29,522 --> 00:09:31,042
反馈的结果肯定是不对的

203
00:09:31,522 --> 00:09:32,882
那不对的原因是什么

204
00:09:32,882 --> 00:09:33,842
我刚刚也说了

205
00:09:33,842 --> 00:09:34,842
在这个员工表当中

206
00:09:34,842 --> 00:09:35,522
有很多员工

207
00:09:35,522 --> 00:09:36,642
他都是同一个部门的

208
00:09:36,642 --> 00:09:38,162
所以departmentid是有重复的

209
00:09:38,162 --> 00:09:38,642
对不对

210
00:09:38,642 --> 00:09:39,842
那怎么去除重复呢

211
00:09:39,842 --> 00:09:40,922
我们是不是可以在这里面

212
00:09:40,922 --> 00:09:42,282
使用distinct的关键字

213
00:09:42,282 --> 00:09:44,002
用它去去除重复就行了

214
00:09:44,002 --> 00:09:45,242
运行

215
00:09:45,242 --> 00:09:46,962
这才是一个正确的答案

216
00:09:46,962 --> 00:09:48,002
11个部门

217
00:09:48,562 --> 00:09:49,522
明白了同学们

218
00:09:49,522 --> 00:09:52,002
这个时候你肯定要用distinct的关键字

219
00:09:52,002 --> 00:09:52,962
来剔除重复的

220
00:09:52,962 --> 00:09:53,762
好

221
00:09:53,762 --> 00:09:56,122
那我们再来看一下主函数和num值

222
00:09:56,122 --> 00:09:58,282
我们一再强调

223
00:09:58,282 --> 00:09:59,922
主函数指的就是聚合函数

224
00:09:59,922 --> 00:10:00,562
是吧

225
00:10:00,562 --> 00:10:03,322
聚合函数它是不会处理num值的

226
00:10:03,322 --> 00:10:05,162
那如果有num值怎么办呢

227
00:10:05,522 --> 00:10:08,602
我们就要用到ifnum去做一个处理了

228
00:10:08,842 --> 00:10:09,322
是吧

229
00:10:09,322 --> 00:10:11,326
比如说现在是这样的一个需求

230
00:10:11,834 --> 00:10:22,554
我们现在要去计算一下,如果有佣金的话,对所有有佣金的人去做一个平均值的佣金计算,那应该怎么办?

231
00:10:22,554 --> 00:10:23,738
< No Speech >

232
00:10:23,738 --> 00:10:26,738
有佣金的佣金平均值做计算

233
00:10:26,738 --> 00:10:28,738
那就是AVG呗

234
00:10:28,738 --> 00:10:29,338
是吧

235
00:10:29,338 --> 00:10:30,738
AVG这里给谁啊

236
00:10:30,738 --> 00:10:33,738
是不是给一点commission PCT

237
00:10:33,738 --> 00:10:34,138
对吧

238
00:10:34,138 --> 00:10:36,138
因为AVG是聚合函数

239
00:10:36,138 --> 00:10:37,138
它会忽略空值嘛

240
00:10:37,138 --> 00:10:38,430
运行哦

241
00:10:38,430 --> 00:10:41,786
< No Speech >

242
00:10:41,786 --> 00:10:45,666
现在返回的平均值是0.22

243
00:10:45,666 --> 00:10:47,146
这里同学们需要注意

244
00:10:47,146 --> 00:10:49,626
我们之前的这个我给大家发的

245
00:10:49,626 --> 00:10:51,986
就最开始给大家这个数据文件里

246
00:10:51,986 --> 00:10:54,266
对于这个commission这一列

247
00:10:54,266 --> 00:10:56,546
它只有0

248
00:10:56,546 --> 00:10:57,746
为了演示这个效果

249
00:10:57,746 --> 00:10:59,866
我把这个数据文件做了一个修改

250
00:10:59,866 --> 00:11:03,386
把里面添加了一些拥挤具体的值

251
00:11:03,386 --> 00:11:03,946
不是0了

252
00:11:03,946 --> 00:11:05,266
一般都是0点几

253
00:11:05,266 --> 00:11:07,786
这个数据我已经更新到数据文件里了

254
00:11:07,786 --> 00:11:09,986
我们直接拿着这个数据文件

255
00:11:09,986 --> 00:11:12,346
重新导入一下就可以了

256
00:11:12,346 --> 00:11:14,306
或者是你之前在导入的时候

257
00:11:14,306 --> 00:11:16,146
里面就已经包含了平均值的

258
00:11:16,146 --> 00:11:18,746
这个commission PCD的正确的值了

259
00:11:18,746 --> 00:11:22,466
就是那个data.cycle这个文件

260
00:11:22,466 --> 00:11:23,266
明白这一次吧

261
00:11:23,266 --> 00:11:24,866
我已经在那里做了数据更新了

262
00:11:24,866 --> 00:11:25,786
对于平均值

263
00:11:25,786 --> 00:11:26,366
所以如果你的请求有什么的话

264
00:11:27,162 --> 00:11:34,522
那么这计算的是什么呢?是所有有平均值的员工的平均值的所有有这个佣金的平均值的计算

265
00:11:34,522 --> 00:11:38,282
对不对?那现在我想计算所有员工的平均值

266
00:11:38,282 --> 00:11:40,922
包含那些没有佣金的员工

267
00:11:40,922 --> 00:11:44,442
那这怎么办呢?这是不是得用一个函数去做一个判断了

268
00:11:44,442 --> 00:11:46,842
ifnone是吧?

269
00:11:46,842 --> 00:11:50,282
ifnone函数是如果第一个差数不为空返回第一个差数

270
00:11:50,282 --> 00:11:52,362
如果第一个差数为空则返回第二个差数

271
00:11:52,362 --> 00:11:53,802
我们给它个零不就行了吗?

272
00:11:53,802 --> 00:11:55,082
对吧?同学们

273
00:11:55,082 --> 00:11:57,802
那我再运行,注意看这个值

274
00:11:57,802 --> 00:12:01,322
不再是0.222了吧,是0.072897了

275
00:12:01,322 --> 00:12:06,602
对吧?这就是在这个聚合函数当中使用ifnone这样的函数

276
00:12:06,602 --> 00:12:09,882
通用函数来解决空值的问题,明白吧?

277
00:12:09,882 --> 00:12:13,402
好,那我们再来看一下这节课的实时效果反馈

278
00:12:13,402 --> 00:12:17,722
con的函数是计算结果集中的什么呢?

279
00:12:17,722 --> 00:12:19,082
A,方差

280
00:12:19,082 --> 00:12:20,362
B,标准差

281
00:12:20,362 --> 00:12:21,882
C,均方差

282
00:12:21,882 --> 00:12:23,802
D,总函数

283
00:12:23,802 --> 00:12:27,002
那么很显然这个题的答案是D

284
00:12:27,002 --> 00:12:31,242
con是计算结果集中的总函数

285
00:12:31,242 --> 00:12:35,162
好,同学们,那么以上我们就讲解了con的函数的使用

286
00:12:35,162 --> 00:12:36,682
它还是比较简单的

287
00:12:36,682 --> 00:12:39,390
好,同学们,那我们这节课就到这

