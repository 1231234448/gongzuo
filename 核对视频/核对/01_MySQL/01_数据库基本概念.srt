1
00:00:00,000 --> 00:00:01,082


2
00:00:01,082 --> 00:00:05,682
从这一课开始,我们就来讲解一下MySQL数据库

3
00:00:05,682 --> 00:00:12,082
那我们在学习MySQL之前,我们先来学习一下数据库当中的一些基础知识

4
00:00:12,082 --> 00:00:14,078
我们先来看一下发音

5
00:00:15,034 --> 00:00:17,354
谁的发音呢,就是这个mysql的发音

6
00:00:17,354 --> 00:00:20,394
在国内对于这个单词的发音有很多种

7
00:00:20,394 --> 00:00:23,674
有读成mysql的,有读成mysql的

8
00:00:23,674 --> 00:00:25,674
还有读成my s q l的

9
00:00:25,674 --> 00:00:28,514
那么这些发音它都是正确的

10
00:00:28,514 --> 00:00:29,514
为什么这么说呢

11
00:00:29,514 --> 00:00:33,794
因为在官方就没有给出这个单词的标准发音

12
00:00:33,794 --> 00:00:34,434
但是呢

13
00:00:34,434 --> 00:00:37,314
Orico在他的官方文档当中曾经说过

14
00:00:37,314 --> 00:00:39,070
他们也念作My sequal['si:kwəl]。

15
00:00:39,070 --> 00:00:40,154
 

16
00:00:40,154 --> 00:00:42,594
SQL就是这个序集这个单词啊

17
00:00:42,594 --> 00:00:44,154
那么呢我们也跟着官方走吧

18
00:00:44,154 --> 00:00:45,994
我们也读买My sequal['si:kwəl]啊

19
00:00:45,994 --> 00:00:47,114
但是我们要知道

20
00:00:47,114 --> 00:00:50,594
未来如果有人说买mysql或者说买mysql

21
00:00:50,594 --> 00:00:52,834
你应该知道他所指的是什么

22
00:00:52,834 --> 00:00:55,262
其实指的就是我们这个关系型数据库啊

23
00:00:56,218 --> 00:01:00,258
那我们再来看数据库的一些基本概念

24
00:01:00,258 --> 00:01:02,498
首先我们先来了解一下数据

25
00:01:02,498 --> 00:01:05,138
什么是数据呢?数据Data

26
00:01:05,138 --> 00:01:09,138
那么其实数据它指的就是我们要存储的内容

27
00:01:09,138 --> 00:01:12,138
然后这些内容可以有多种表现形式

28
00:01:12,138 --> 00:01:14,654
比如说它可以是字母,可以是文字

29
00:01:14,654 --> 00:01:16,282
可以是文本，可以是图形

30
00:01:16,282 --> 00:01:19,162
甚至也可以是影音跟视频等等

31
00:01:19,162 --> 00:01:21,282
这就是数据的概念

32
00:01:21,282 --> 00:01:24,318
那我们再来看一下什么又是数据库

33
00:01:25,210 --> 00:01:41,118
数据库是数据管理的有效技术,是由一批数据构成的有序集合,这些数据被存放在结构化的数据表里,数据表之间相互关联,反映客观事物的本质联系。什么意思呢？

34
00:01:42,010 --> 00:01:45,930
数据库它的作用就是来存放数据的

35
00:01:45,930 --> 00:01:48,330
只不过是它在存放数据时

36
00:01:48,330 --> 00:01:51,610
会把数据放到一个有序的集合里

37
00:01:51,610 --> 00:01:54,206
基于什么来存放呢?基于数据表

38
00:01:54,206 --> 00:01:56,378
表我们都知道 它是一个

39
00:01:56,378 --> 00:01:59,818
二维的空间用行跟列来表示的

40
00:01:59,818 --> 00:02:00,218
对不对

41
00:02:00,218 --> 00:02:03,298
那么数据库跟数据就好比什么呢

42
00:02:03,298 --> 00:02:05,818
好比我们生活当中的快递柜

43
00:02:05,818 --> 00:02:07,354
同学们都去 

44
00:02:07,354 --> 00:02:08,634
快递柜取过快递吧

45
00:02:08,634 --> 00:02:12,434
我们都知道快递柜它是有很多的小格子构成的

46
00:02:12,434 --> 00:02:13,794
也是有行跟列的概念的

47
00:02:13,794 --> 00:02:14,794
它也是一个二维空间

48
00:02:14,794 --> 00:02:15,274
对不对

49
00:02:15,274 --> 00:02:19,154
然后我们的快递会被放入到某个小盒子当中

50
00:02:19,154 --> 00:02:21,594
那么快递柜指的就是数据库

51
00:02:21,594 --> 00:02:23,550
我们的快递指的就是数据

52
00:02:23,550 --> 00:02:27,994
明白这个意思把，我们再来看

53
00:02:27,994 --> 00:02:40,798
数据库管理系统,什么又是数据库管理系统呢?数据库管理系统,它的全称叫Database Management System,简称是DBMS,它是用来定义和管理数据的软件。

54
00:02:41,754 --> 00:02:43,674
那么什么又是数据库管理系统呢?

55
00:02:43,674 --> 00:02:46,674
我们还是用刚刚举过的这个例子——快递柜

56
00:02:46,674 --> 00:02:47,390
我们知道快递柜是一个很大的数据库

57
00:02:48,186 --> 00:02:52,226
它是存放快递的这样的一个媒介这样的一个介质

58
00:02:52,226 --> 00:02:54,466
但是我们要想取快递的时候怎么取

59
00:02:54,826 --> 00:02:58,226
是不是得通过快递柜当中的软件是吧

60
00:02:58,226 --> 00:02:59,826
我们通过输入快递码

61
00:02:59,826 --> 00:03:02,186
然后一点取件

62
00:03:02,186 --> 00:03:05,306
然后小盒子会打开一个小盒子

63
00:03:05,306 --> 00:03:06,586
然后我们去取快递对吧

64
00:03:06,586 --> 00:03:11,466
也就是说数据库的管理是快递柜的管理是完全依赖于

65
00:03:11,466 --> 00:03:12,506
 

66
00:03:12,506 --> 00:03:14,826
快递柜当中的管理软件的

67
00:03:14,826 --> 00:03:15,186
对吧

68
00:03:15,186 --> 00:03:17,226
那么我们数据库也是这样的

69
00:03:17,226 --> 00:03:20,506
对于数据库的管理完全是依赖于数据库管理系统的

70
00:03:20,506 --> 00:03:24,094
这个数据库管理系统指的就是我们快递柜当中的那个管理软件

71
00:03:24,094 --> 00:03:28,378
明白这个意思把，ok

72
00:03:28,378 --> 00:03:30,618
什么又是数据库应用程序呢?

73
00:03:30,618 --> 00:03:34,138
数据库应用程序Database Application System

74
00:03:34,138 --> 00:03:36,218
它的简称是DBAS

75
00:03:36,218 --> 00:03:39,018
是数据库管理系统基础上

76
00:03:39,018 --> 00:03:40,222
是在数据库管理系统基础

77
00:03:41,114 --> 00:03:47,514
基础上使用数据库管理系统的语法开发直接面对最终用户的应用程序

78
00:03:47,514 --> 00:03:52,034
那么这是什么呢?这个如果还是按照快递贵这个例子来看的话

79
00:03:52,034 --> 00:03:55,274
我们人我们去取快递的人就是数据库应用程序

80
00:03:55,274 --> 00:03:57,118
因为我们是要去快递柜

81
00:03:57,118 --> 00:03:58,138
取快递

82
00:03:58,138 --> 00:04:01,978
对不对 那么换句话说 哪个应用程序用到了数据库

83
00:04:01,978 --> 00:04:03,102
那么谁就是数据库?

84
00:04:03,102 --> 00:04:04,154
 

85
00:04:04,154 --> 00:04:07,794
明白这意思吧?我们再来看一下数据库管理员

86
00:04:07,794 --> 00:04:14,942
什么又是数据库管理员呢?数据库管理员全称叫Database Administrator,简称是DBA

87
00:04:15,866 --> 00:04:21,866
它是指对数据库管理系统进行操作的人员,主要负责数据库的运营和维护

88
00:04:21,866 --> 00:04:25,706
那么数据库管理员我们通过这个名字也能知道它的作用了

89
00:04:25,706 --> 00:04:27,786
还是用我们快递柜这个案例

90
00:04:27,786 --> 00:04:33,066
快递柜其实日常还是有一些工作人员来对它进行维护的

91
00:04:33,066 --> 00:04:36,426
那么这个工作人员其实指的就是数据库管理员

92
00:04:36,426 --> 00:04:38,078
他们是有一定的管理权限

93
00:04:38,586 --> 00:04:42,466
对这个快递库进行一些我们普通用户所不能操作的

94
00:04:42,466 --> 00:04:44,146
这样的一些能力的明白这一次吧

95
00:04:44,146 --> 00:04:46,186
那么数据管理员也是这样的

96
00:04:46,186 --> 00:04:48,506
他的作用就是可以对数据库进行一些

97
00:04:48,506 --> 00:04:50,170
维护，那么

98
00:04:50,170 --> 00:04:53,250
在公司里一般大型的公司都会有自己的DBA

99
00:04:53,250 --> 00:04:56,190
他的工作就是来负责日常对数据库的维护的

100
00:04:56,190 --> 00:04:58,202
明白这个意思把

101
00:04:58,202 --> 00:05:07,998
,那我们再来看一下上面这个图啊,这个图呢是呃,通过这个图呢也可以很直观的去了解到这些概念之间他们的一个相互关系啊。

102
00:05:08,986 --> 00:05:11,666
数据我们不用说了,就是我们存储的内容

103
00:05:11,666 --> 00:05:15,466
那么数据会存放到哪呢?会存放到数据库当中

104
00:05:15,466 --> 00:05:20,906
那么数据库又靠谁来管理的呢?是靠数据库管理系统

105
00:05:20,906 --> 00:05:24,866
那么数据库管理系统又靠谁来维护的呢?是靠数据库管理员

106
00:05:24,866 --> 00:05:27,838
那么数据库管理系统又为谁服务的呢?是为数据库应用系统来服务的

107
00:05:27,838 --> 00:05:30,106
 

108
00:05:30,106 --> 00:05:33,342
明白这些吧同学们,这是他们之间的一个关系

109
00:05:33,342 --> 00:05:34,618
 

110
00:05:34,618 --> 00:05:37,658
那么我们再来看一下数据库的分类

111
00:05:37,658 --> 00:05:40,058
数据库它是分为两大类的

112
00:05:40,058 --> 00:05:41,978
一大类是关系型数据库

113
00:05:41,978 --> 00:05:44,702
比如说常见的关系型数据库有这个

114
00:05:45,306 --> 00:05:48,106
Oracle,DB2,Circle Server等等

115
00:05:48,106 --> 00:05:50,666
那么还有一类就是非关系型数据库

116
00:05:50,666 --> 00:05:53,182
啊 比如常见的非关系型数据库有

117
00:05:53,786 --> 00:05:56,226
Redis,MongoDB,Memcached,HBase

118
00:05:56,226 --> 00:05:59,466
那么这二者之间有什么区别呢?我们下面会说到

119
00:05:59,466 --> 00:06:02,910
但是在工作当中,这两种数据库我们都会用到

120
00:06:02,910 --> 00:06:04,634
 

121
00:06:04,634 --> 00:06:07,114
我们来看一下关系数据库

122
00:06:07,114 --> 00:06:09,034
关系数据库我们已经说过了

123
00:06:09,034 --> 00:06:10,474
它最典型的就是数据结构是表

124
00:06:10,474 --> 00:06:11,514
它最典型的就是数据结构是表

125
00:06:11,514 --> 00:06:14,154
它最典型的就是数据结构是表

126
00:06:14,154 --> 00:06:14,514
是吧

127
00:06:14,514 --> 00:06:16,634
基于二维表来存储数据的啊

128
00:06:16,634 --> 00:06:18,874
然后表和表之间呢是有联系的

129
00:06:18,874 --> 00:06:21,470
所组成的一个数据组织

130
00:06:21,470 --> 00:06:22,522
它可以采用

131
00:06:22,522 --> 00:06:26,682
结构化的查询语言(SQL)对数据库进行操作

132
00:06:26,682 --> 00:06:28,242
这个同学们一定要注意啊

133
00:06:28,242 --> 00:06:30,322
所有的关系型数据库

134
00:06:30,322 --> 00:06:32,122
所有的关系型数据库啊

135
00:06:32,122 --> 00:06:34,402
是都支持SQL语言的

136
00:06:34,402 --> 00:06:36,922
那么未来我们也会使用标准的SQL语言

137
00:06:36,922 --> 00:06:37,918
来完成对数据工作

138
00:06:38,682 --> 00:06:42,046
而且关系型数据库我们想对它的数据

139
00:06:42,046 --> 00:06:43,258
而且关系型数据库我们想对它的数据

140
00:06:43,258 --> 00:06:45,498
所存储的数据进行操作时

141
00:06:45,498 --> 00:06:47,738
我们只能通过SQL语言

142
00:06:47,738 --> 00:06:48,862
没有其他的方式

143
00:06:48,862 --> 00:06:51,450
 

144
00:06:51,450 --> 00:06:54,170
我们再来看一下关系型数据库的优点

145
00:06:54,170 --> 00:06:55,850
它的优点呢有这么几点

146
00:06:55,850 --> 00:06:56,890
第一易于维护

147
00:06:56,890 --> 00:06:58,170
因为都使用表结构嘛

148
00:06:58,170 --> 00:06:58,974
所以格式比较统一

149
00:06:59,546 --> 00:07:03,066
然后使用方便,SQL语言通用可以用于复杂查询

150
00:07:03,066 --> 00:07:09,106
然后复杂操作,支持SQL可以用一个表以及多个表之间非常复杂的查询

151
00:07:09,106 --> 00:07:13,746
我们可以用SQL去查一个表或者是多个表之间的这样的一个复杂查询

152
00:07:13,746 --> 00:07:18,746
缺点是什么呢?读写性能比较差,尤其是海量数据时不具备高读写效率

153
00:07:18,746 --> 00:07:19,390
海量数据时不具备高读写效率

154
00:07:19,390 --> 00:07:20,442
海量数据时不具备高读写效率

155
00:07:20,442 --> 00:07:23,742

156
00:07:23,742 --> 00:07:25,850


157
00:07:25,850 --> 00:07:28,210
尤其是海量数据的高读写效率它是不具备的

158
00:07:28,210 --> 00:07:34,570
然后是固定的表结构 灵活度稍欠

159
00:07:34,570 --> 00:07:36,090
就是灵活度并不是很好

160
00:07:36,090 --> 00:07:38,526
因为它的存储结构就是固定的表结构了

161
00:07:38,526 --> 00:07:39,834
 

162
00:07:39,834 --> 00:07:44,834
高并发读写需求,传统关系型数据库来说,磁盘IO是一个很大的瓶颈

163
00:07:44,834 --> 00:07:49,714
那么其实关系型数据库,它最终会把这个数据仍然是存储到文件当中的

164
00:07:49,714 --> 00:07:53,674
那么至于对于文件操作,肯定会涉及到磁盘IO的

165
00:07:53,674 --> 00:07:57,310
所以它高并发的读写能力是非常弱的,并不是很强大

166
00:07:57,310 --> 00:07:59,098
 

167
00:07:59,098 --> 00:08:06,378
正因为关系型数据库有这些缺点,我们在项目当中也逐步的引入了非关系型数据库

168
00:08:06,378 --> 00:08:08,378
我们来看一下非关系型数据库

169
00:08:08,378 --> 00:08:12,858
非关系型数据库也称之为NoSQL数据库

170
00:08:12,858 --> 00:08:14,858
那么为什么叫NoSQL呢?

171
00:08:14,858 --> 00:08:16,830


172
00:08:16,830 --> 00:08:18,906
 

173
00:08:18,906 --> 00:08:21,306
它不支持标准的这个SQL语言

174
00:08:21,306 --> 00:08:25,266
它是一种数据结构化的存储方式的集合

175
00:08:25,266 --> 00:08:27,266
可以是文档或者是键值对的存储

176
00:08:27,834 --> 00:08:31,354
它并不是把数据存储到一个二维的表空间了

177
00:08:31,354 --> 00:08:32,702
那么它存储方式是有的

178
00:08:33,306 --> 00:08:37,426
No官型就非关系型数据库是基于文档形式来存储的

179
00:08:37,426 --> 00:08:38,910
有的是基于键值对来存储的

180
00:08:39,514 --> 00:08:41,022
我们来看一下它的优点

181
00:08:41,022 --> 00:08:42,714
首先格式灵活

182
00:08:42,714 --> 00:08:45,274
存储数据的格式可以是key value形式

183
00:08:45,274 --> 00:08:46,394
也可以是文档形式

184
00:08:46,394 --> 00:08:47,550
也可以是图片形式

185
00:08:47,550 --> 00:08:49,658
 等等

186
00:08:49,658 --> 00:08:51,338
然后第二,速度快

187
00:08:51,338 --> 00:08:55,178
NodeCycle可以使用硬盘或者随机存储器作为载体

188
00:08:55,178 --> 00:08:57,018
而关系型数据库只能使用硬盘

189
00:08:57,018 --> 00:09:02,138
看到了吗?速度快的原因是因为它可以用内存来作为存储数据的载体

190
00:09:02,138 --> 00:09:07,738
那么我们去内存当中查询数据肯定要比你关系型数据库去磁盘当中IO查数据要快

191
00:09:07,738 --> 00:09:10,178
对吧?所以在这种高并发读写需求当中

192
00:09:10,178 --> 00:09:13,738
我们会引入非关系型数据库来解决高并发读写问题

193
00:09:13,738 --> 00:09:18,942
这就是我们为什么未来项目当中既会用到关系型数据库也会用到非关系型数据库的原因

194
00:09:18,942 --> 00:09:21,850
 好

195
00:09:21,850 --> 00:09:23,890
第三就是具备高扩展性

196
00:09:23,890 --> 00:09:25,090
第四成本低

197
00:09:25,090 --> 00:09:27,490
Noseq数据库它部署简单

198
00:09:27,490 --> 00:09:29,022
基本都是开源软件

199
00:09:29,022 --> 00:09:30,458
 

200
00:09:30,458 --> 00:09:32,138
那我们来看一下它的缺点

201
00:09:32,138 --> 00:09:32,778
缺点呢

202
00:09:32,778 --> 00:09:34,218
它是不支持SQL查询

203
00:09:34,218 --> 00:09:35,614
学习和成本较高

204
00:09:36,282 --> 00:09:37,882
第二是无事物处理

205
00:09:37,882 --> 00:09:39,442
第三数据结构相对复杂

206
00:09:39,442 --> 00:09:41,282
复杂查询方面稍欠

207
00:09:41,282 --> 00:09:42,494
这是它的一个缺点

208
00:09:43,418 --> 00:09:46,494
那么我们再来看一下这节课的实时效果反馈

209
00:09:46,494 --> 00:09:47,578
 首先第一题

210
00:09:47,578 --> 00:09:53,214
关系型数据库模型是将复杂的数据结构用什么来表示的?

211
00:09:53,214 --> 00:09:57,594
 A 文件 B 一维结构  

212
00:09:57,594 --> 00:09:58,846
C 二维表结构

213
00:09:59,546 --> 00:10:00,798
D 自定义方式

214
00:10:00,798 --> 00:10:02,298
那么同学想一下

215
00:10:02,298 --> 00:10:03,774
这道题的答案应该是什么呀?

216
00:10:04,602 --> 00:10:07,402
很显然是C二维表结构 对吧

217
00:10:07,402 --> 00:10:11,710
关系型数据库的模型就是将数据存到一个二维表当中嘛

218
00:10:11,710 --> 00:10:13,114
 

219
00:10:13,114 --> 00:10:14,334
我们再来看第二题

220
00:10:15,034 --> 00:10:20,062
数据库管理系统是用来定义和什么的软件。

221
00:10:20,062 --> 00:10:21,402
管理应用程序

222
00:10:21,402 --> 00:10:22,622
管理应用程序

223
00:10:22,622 --> 00:10:23,994
管理密码

224
00:10:23,994 --> 00:10:26,910
管理数据、管理管理员的。

225
00:10:26,910 --> 00:10:28,154
软件

226
00:10:28,154 --> 00:10:29,822
应该是哪个呢,大家考虑一下

227
00:10:30,426 --> 00:10:33,470
是不是很显然是管理数据的呀?

228
00:10:34,266 --> 00:10:37,666
数据库管理系统就是用来定义和管理数据的嘛

229
00:10:37,666 --> 00:10:40,222
哎 所以这道题的答案呢也是C

230
00:10:40,922 --> 00:10:44,282
我们来看一下答案 1C2C

231
00:10:44,282 --> 00:10:47,642
同学们 那么这节课我们主要是先来了解一下

232
00:10:47,642 --> 00:10:51,922
数据库当中的一些基本概念 以及这些概念之间的关系

233
00:10:51,922 --> 00:10:56,002
那么对于这块的了解将直接影响到我们对数据库的一个使用

234
00:10:56,002 --> 00:10:58,842
所以这块同学们还是有必要去认真的了解一下的

235
00:10:58,842 --> 00:11:01,150
同学们 那么这节课我们就到这

