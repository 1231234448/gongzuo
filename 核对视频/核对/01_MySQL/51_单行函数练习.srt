1
00:00:00,000 --> 00:00:01,082
< No Speech >

2
00:00:01,082 --> 00:00:05,362
到目前为止,MySQL当中的单行函数我们都已经讲过了

3
00:00:05,362 --> 00:00:10,122
那么这节课我们就围绕着这些单行函数来完成一些练习

4
00:00:10,122 --> 00:00:13,562
进一步提高我们对单行函数的使用的能力

5
00:00:13,562 --> 00:00:15,162
好,我们先来看第一题

6
00:00:15,162 --> 00:00:23,518
显示受雇日期在1998年2月20日和2005年5月1日之间的雇员的名字、岗位

7
00:00:23,518 --> 00:00:24,634
< No Speech >

8
00:00:24,634 --> 00:00:26,750
按收购日期顺序排序

9
00:00:26,750 --> 00:00:28,058
< No Speech >

10
00:00:28,058 --> 00:00:29,858
那么我来分析一下这个题啊

11
00:00:29,858 --> 00:00:38,178
这个题它的查询条件是受雇日期在1998年2月20日和2005年5月1日之间的

12
00:00:38,178 --> 00:00:40,830
也就是说是在这个两个时间范围内的

13
00:00:40,830 --> 00:00:41,850
< No Speech >

14
00:00:41,850 --> 00:00:46,010
那么在某个范围内的我们是不是可以使用between and

15
00:00:46,010 --> 00:00:50,250
那么between and可以做日期范围的查询吗?

16
00:00:50,250 --> 00:00:52,290
答案当然肯定是可以的了

17
00:00:52,290 --> 00:00:55,610
那么我们在between and当中给这个参数的时候

18
00:00:55,610 --> 00:00:58,650
我们就可以把日期的我们之前在讲过

19
00:00:58,650 --> 00:01:02,330
日期是可以基于标准的字符串格式来体现的

20
00:01:02,330 --> 00:01:02,730
是吧

21
00:01:02,730 --> 00:01:04,770
那我们在between and之间

22
00:01:04,770 --> 00:01:09,890
我们在between and上就可以给定日期的标准的字符串格式

23
00:01:09,890 --> 00:01:13,970
这样between and就会去把它当成时间去处理

24
00:01:13,970 --> 00:01:16,574
并且去查找这个时间范围内的数据了

25
00:01:17,082 --> 00:01:23,082
明白这意思吧同学们,所以说这个实现起来也是非常简单的,好我们来写一个啊

26
00:01:23,082 --> 00:01:27,486
他说我们先定位表啊,select

27
00:01:27,486 --> 00:01:30,074
< No Speech >

28
00:01:30,074 --> 00:01:31,550
然后,WRONG

29
00:01:32,410 --> 00:01:34,090
还是安普莱意表对吧

30
00:01:34,090 --> 00:01:36,610
然后rare什么条件呢

31
00:01:36,610 --> 00:01:38,170
他说受雇日期

32
00:01:38,170 --> 00:01:40,010
受雇日期雇员入职

33
00:01:40,010 --> 00:01:44,090
这个雇员的记录雇员的入职日期的这个字段不就是hired

34
00:01:44,090 --> 00:01:45,850
这是他的受雇日期对吧

35
00:01:45,850 --> 00:01:48,410
受雇日期between

36
00:01:48,410 --> 00:01:49,882
< No Speech >

37
00:01:49,882 --> 00:01:52,602
多少呢?1998年2月20号

38
00:01:52,602 --> 00:01:54,442
那这里我们就用字符串来表示了

39
00:01:54,442 --> 00:01:54,882
是吧

40
00:01:54,882 --> 00:01:58,362
1998年,能写年吗?不能

41
00:01:58,362 --> 00:01:59,242
得写杠是吧

42
00:01:59,242 --> 00:02:00,362
或者是这个杠对吧

43
00:02:00,362 --> 00:02:00,958
果然是

44
00:02:00,958 --> 00:02:02,682
< No Speech >

45
00:02:02,682 --> 00:02:04,642
或者写02也可以对吧

46
00:02:04,642 --> 00:02:05,982
杠,然后20

47
00:02:05,982 --> 00:02:07,386
< No Speech >

48
00:02:07,386 --> 00:02:09,406
这个粘对吧然后按的

49
00:02:09,946 --> 00:02:12,706
我们给定的就是下线 上线是

50
00:02:12,706 --> 00:02:21,594
< No Speech >

51
00:02:21,594 --> 00:02:24,514
对吧同学们,这是我们要查询数据的条件

52
00:02:24,514 --> 00:02:27,614
然后还有一个排序 order by

53
00:02:27,614 --> 00:02:29,914
< No Speech >

54
00:02:29,914 --> 00:02:33,114
按什么排序呢?按受雇日期的顺序来排序

55
00:02:33,114 --> 00:02:34,674
那我们直接给HireDate就可以了

56
00:02:34,674 --> 00:02:36,954
让他按到一个这个顺序排序啊

57
00:02:36,954 --> 00:02:37,354
好

58
00:02:37,354 --> 00:02:37,950
然后呢

59
00:02:38,554 --> 00:02:42,814
显示哪系列呢?要投影什么呢?固原的名字就是lastname

60
00:02:43,546 --> 00:02:47,550
岗位是什么?是不是叫YD?还有什么?入职时间嘛

61
00:02:48,154 --> 00:02:49,754
岗位和收入日期吗

62
00:02:49,754 --> 00:02:56,346
< No Speech >

63
00:02:56,346 --> 00:03:02,426
我们看一下这个查询结果,看这些人都是在98年到05年之间入职的

64
00:03:02,426 --> 00:03:08,106
看到了吗?那么也就是说我们这个日期其实也可以使用比特安的来做范围的查询的

65
00:03:08,106 --> 00:03:12,386
明白这意思吧?然后日期我们可以基于自付串标准格式来给定日期

66
00:03:12,386 --> 00:03:13,630
这个我们之前说过的啊

67
00:03:13,630 --> 00:03:14,682
< No Speech >

68
00:03:14,682 --> 00:03:16,446
这样我们就实现了这个题

69
00:03:16,446 --> 00:03:17,562
< No Speech >

70
00:03:17,562 --> 00:03:27,006
好 我们再来看第二个题 第二个题它说显示每一个在2002年受雇的雇员的名字和受雇日期

71
00:03:27,006 --> 00:03:28,250
< No Speech >

72
00:03:28,250 --> 00:03:30,046
2002年那一年

73
00:03:30,554 --> 00:03:32,414
受雇的雇员

74
00:03:32,414 --> 00:03:35,898
< No Speech >

75
00:03:35,898 --> 00:03:40,858
日期是可以基于字符串的标准格式来转换的

76
00:03:40,858 --> 00:03:42,178
它是一个隐式转换

77
00:03:42,178 --> 00:03:44,766
那我们是不是可以用like去做处理啊?

78
00:03:44,766 --> 00:03:46,522
< No Speech >

79
00:03:46,522 --> 00:03:48,382
好,我们看一下怎么来实现

80
00:03:49,274 --> 00:03:50,526
我们可以这么去做

81
00:03:51,194 --> 00:03:53,194
Select 它,然后 From

82
00:03:53,194 --> 00:03:54,810
< No Speech >

83
00:03:54,810 --> 00:03:56,090
然后虎贝尔

84
00:03:56,090 --> 00:03:59,322
< No Speech >

85
00:03:59,322 --> 00:04:01,162
我们用like对吧

86
00:04:01,162 --> 00:04:04,442
然后标准的日期格式是不是4位的年

87
00:04:04,442 --> 00:04:04,882
对吧

88
00:04:04,882 --> 00:04:07,522
那我就可以2002然后摆分号

89
00:04:07,522 --> 00:04:10,202
剩下后面的月日小时分钟秒我都不考虑了

90
00:04:10,202 --> 00:04:11,262
我只考虑

91
00:04:11,262 --> 00:04:13,818
< No Speech >

92
00:04:13,818 --> 00:04:15,498
对吧 这样就可以了

93
00:04:15,498 --> 00:04:19,742
然后slack它要什么呢 要last name和airdate

94
00:04:19,742 --> 00:04:27,034
< No Speech >

95
00:04:27,034 --> 00:04:32,350
现在我们查到的这些数据都是在2002年那一年入职的员工

96
00:04:32,350 --> 00:04:33,434
< No Speech >

97
00:04:33,434 --> 00:04:35,554
那么通过这个案例 我们现在也知道了

98
00:04:35,554 --> 00:04:39,554
其实日期只要你按照给定字符串的标准格式来做日期处理

99
00:04:39,554 --> 00:04:41,274
它可以当成一个字符串来处理的

100
00:04:41,274 --> 00:04:43,934
明白这一次吧?赖哥是可以对他去通配的

101
00:04:44,442 --> 00:04:45,918
好,我们再来看第三题

102
00:04:45,918 --> 00:04:46,970
< No Speech >

103
00:04:46,970 --> 00:04:52,490
第三题它要求每对每一个雇员显示employee number

104
00:04:52,490 --> 00:04:53,690
就是员工号

105
00:04:53,690 --> 00:04:54,718
然后last name

106
00:04:54,718 --> 00:04:55,738
< No Speech >

107
00:04:55,738 --> 00:05:00,830
和Salary增长15%以后的并且表示成整数

108
00:05:00,830 --> 00:05:02,234
< No Speech >

109
00:05:02,234 --> 00:05:03,834
这里有一个要求了

110
00:05:03,834 --> 00:05:07,134
增长完15%以后的薪水还要表示成

111
00:05:07,134 --> 00:05:08,250
< No Speech >

112
00:05:08,250 --> 00:05:10,290
那么在表示整数的时候

113
00:05:10,290 --> 00:05:12,770
它没有说进行四舍五入的处理是吧

114
00:05:12,770 --> 00:05:16,050
那我们就假设允许它做四舍五入的处理

115
00:05:16,050 --> 00:05:18,170
那这里就需要用到数字函数了吧

116
00:05:18,170 --> 00:05:19,770
谁呢?Round对吧

117
00:05:19,770 --> 00:05:21,370
如果不做四舍五入的处理

118
00:05:21,370 --> 00:05:23,390
那就是这个Chunkhead就可以了

119
00:05:23,390 --> 00:05:24,666
< No Speech >

120
00:05:24,666 --> 00:05:26,782
那么我们现在知道这个题的一个答案

121
00:05:26,782 --> 00:05:28,314
< No Speech >

122
00:05:28,314 --> 00:05:30,554
方式了是吧这个查询的编辑方式了

123
00:05:31,546 --> 00:05:32,386
slack它

124
00:05:32,386 --> 00:05:32,958
然后

125
00:05:32,958 --> 00:05:41,882
< No Speech >

126
00:05:41,882 --> 00:05:44,562
它这个没有val是查询所有的员工的

127
00:05:44,562 --> 00:05:44,882
是吧

128
00:05:44,882 --> 00:05:47,122
对每一个雇员那就没有查询条件了

129
00:05:47,122 --> 00:05:48,634
< No Speech >

130
00:05:48,634 --> 00:06:00,394
Select当中他要什么呢?要ApplyEid,然后呢还要这个LastName,然后还要Salary,以及Salary增长15%以后的

131
00:06:00,394 --> 00:06:05,434
然后呢还要去去掉小数部分,对吧?表示成整数嘛

132
00:06:05,434 --> 00:06:09,274
那这里我们肯定要用到Round函数了,是吧?然后这里呢

133
00:06:10,234 --> 00:06:13,470
增长15%以后的那就是乘以1.15倍

134
00:06:13,470 --> 00:06:15,386
< No Speech >

135
00:06:15,386 --> 00:06:17,946
只保留整数部分 我们这样也可以

136
00:06:17,946 --> 00:06:19,806
对吧 这样也是表示整数部分的

137
00:06:19,806 --> 00:06:21,946
< No Speech >

138
00:06:21,946 --> 00:06:25,986
是吧这原来的薪水这是增长15%以后的薪水

139
00:06:25,986 --> 00:06:26,426
对吧

140
00:06:26,426 --> 00:06:29,586
然后我们也可以让它给第二个参数给个零

141
00:06:29,586 --> 00:06:31,134
这也是表示取涨

142
00:06:31,134 --> 00:06:32,346
< No Speech >

143
00:06:32,346 --> 00:06:36,222
明白吧同学们 这样我们就把这个题做了一个实现

144
00:06:36,222 --> 00:06:39,322
< No Speech >

145
00:06:39,322 --> 00:06:50,110
然后我们再来看第四题,第四题呢,它要求是写一个查询显示名字的长度,对所有名字开始字母是

146
00:06:50,110 --> 00:06:53,274
< No Speech >

147
00:06:53,274 --> 00:06:54,878
用固原的lastname

148
00:06:55,802 --> 00:06:59,582
那么也就是说他现在要查询的人的名字是什么呀

149
00:06:59,582 --> 00:07:00,890
< No Speech >

150
00:07:00,890 --> 00:07:03,370
以j开头、以a开头、以m开头的

151
00:07:03,370 --> 00:07:06,050
然后这里要求显示它们名字的长度

152
00:07:06,050 --> 00:07:09,930
名字的长度我们是不是得用到字符类型的length函数了

153
00:07:09,930 --> 00:07:11,530
字符函数的length函数了

154
00:07:11,530 --> 00:07:14,014
对吧 那么这个题还是比较简单的

155
00:07:14,014 --> 00:07:16,890
< No Speech >

156
00:07:16,890 --> 00:07:20,530
还是select先写select然后from

157
00:07:20,530 --> 00:07:23,450
按不来易数据还是来源于这个表对吧

158
00:07:23,450 --> 00:07:25,054
然后呢有条件吗

159
00:07:25,054 --> 00:07:26,074
< No Speech >

160
00:07:26,074 --> 00:07:28,274
因为它的条件说的很清楚了

161
00:07:28,274 --> 00:07:30,558
名字开始字母是j

162
00:07:30,558 --> 00:07:33,306
< No Speech >

163
00:07:33,306 --> 00:07:34,814
LAST NAME

164
00:07:34,814 --> 00:07:38,714
< No Speech >

165
00:07:38,714 --> 00:07:41,182
以j开头的那就百分号

166
00:07:41,182 --> 00:07:43,130
< No Speech >

167
00:07:43,130 --> 00:07:46,210
A跟M,而且它们之间是获者的关系

168
00:07:46,210 --> 00:07:52,474
< No Speech >

169
00:07:52,474 --> 00:07:54,142
LASTER NAME

170
00:07:54,142 --> 00:07:56,058
< No Speech >

171
00:07:56,058 --> 00:07:57,342
以A开头的

172
00:07:57,342 --> 00:07:58,554
< No Speech >

173
00:07:58,554 --> 00:08:00,830
OK 然后再来还有一个OR

174
00:08:01,594 --> 00:08:03,102
LASTA NAME

175
00:08:03,102 --> 00:08:07,034
< No Speech >

176
00:08:07,034 --> 00:08:08,350
少百分号了是吧

177
00:08:08,350 --> 00:08:12,954
< No Speech >

178
00:08:12,954 --> 00:08:15,294
OK这样我们就把条件给定了

179
00:08:15,834 --> 00:08:18,514
他还有一个用这个last name排序

180
00:08:18,514 --> 00:08:20,702
那继续再加order by

181
00:08:20,702 --> 00:08:21,946
< No Speech >

182
00:08:21,946 --> 00:08:28,346
order by 子句,然后last name,他没有说按什么排序,那我们就默认的按生序排序吧,是吧

183
00:08:28,346 --> 00:08:31,934
然后他要什么呢?要显示名字的长度

184
00:08:31,934 --> 00:08:33,050
< No Speech >

185
00:08:33,050 --> 00:08:38,330
显示名字的长度,那就是Length,对吧

186
00:08:38,330 --> 00:08:41,690
然后把LastName放到里面不就可以了,对吧

187
00:08:41,690 --> 00:08:43,530
运行,OK

188
00:08:43,530 --> 00:08:45,410
这样我们就可以查到这个人的名字

189
00:08:45,410 --> 00:08:46,930
这些名字的长度了

190
00:08:46,930 --> 00:08:48,286
我们再把名字显示出来吧

191
00:08:48,286 --> 00:08:50,010
< No Speech >

192
00:08:50,010 --> 00:08:51,870
last name 都好

193
00:08:52,794 --> 00:08:54,874
看一下这些人的名字啊

194
00:08:54,874 --> 00:08:56,114
他们都是以A开头的

195
00:08:56,114 --> 00:08:57,394
以J节头的开头的

196
00:08:57,394 --> 00:08:58,274
以M开头的

197
00:08:58,274 --> 00:08:58,714
对吧

198
00:08:58,754 --> 00:09:02,034
然后他们的名字的长度4V 6V 8V 6V

199
00:09:02,034 --> 00:09:02,654
都查出来了

200
00:09:03,610 --> 00:09:06,890
好这样我们就把这个需求做了一个实现

201
00:09:06,890 --> 00:09:08,474
< No Speech >

202
00:09:08,474 --> 00:09:20,478
第五题,他要求创建一个查询,显示所有雇员的Last Name和Salary,将薪水格式化为15%。

203
00:09:20,478 --> 00:09:22,042
< No Speech >

204
00:09:22,042 --> 00:09:23,870
刀了做左天冲

205
00:09:24,794 --> 00:09:29,994
这里我们可以分析一下 看他先要什么数据 创建一个查询显示所有雇员的

206
00:09:29,994 --> 00:09:32,794
那就是没有任何查询条件 查所有的 对吧

207
00:09:32,794 --> 00:09:37,154
查所有雇员的什么呢 last name跟salary 名字跟薪水

208
00:09:37,154 --> 00:09:42,994
然后他要求将薪水格式化为15个长度的 伺服器长度为15的

209
00:09:42,994 --> 00:09:47,678
然后用刀的左天冲 左天冲我们是不是需要用到伺服函数LPD啊

210
00:09:48,282 --> 00:09:52,350
右天空是RPAD嘛 那么这个题我们已经知道了

211
00:09:52,350 --> 00:10:01,018
< No Speech >

212
00:10:01,018 --> 00:10:03,006
Selector, From

213
00:10:03,962 --> 00:10:10,590
然后他要求的是什么呢?显示lastname和salary

214
00:10:10,590 --> 00:10:12,314
< No Speech >

215
00:10:12,314 --> 00:10:13,314
三来呗

216
00:10:13,314 --> 00:10:13,758
啊

217
00:10:14,458 --> 00:10:17,726
还要将这个沙拉的内容做一个左天冲

218
00:10:18,714 --> 00:10:20,254
下周做一个格式化处理

219
00:10:20,254 --> 00:10:21,562
< No Speech >

220
00:10:21,562 --> 00:10:25,722
然后第一个词来说就是

221
00:10:26,714 --> 00:10:27,274
对吧

222
00:10:27,274 --> 00:10:29,278
第二个参数是制服的总长度

223
00:10:29,278 --> 00:10:30,426
< No Speech >

224
00:10:30,426 --> 00:10:32,062
然后用什么添充呢?

225
00:10:32,062 --> 00:10:35,034
< No Speech >

226
00:10:35,034 --> 00:10:37,034
对吧同学们这样就可以了

227
00:10:37,034 --> 00:10:38,206
好我们来运行

228
00:10:38,206 --> 00:10:39,642
< No Speech >

229
00:10:39,642 --> 00:10:42,718
现在这个人的薪水,加上刀刃的费用

230
00:10:42,718 --> 00:10:43,898
< No Speech >

231
00:10:43,898 --> 00:10:45,790
总长度就是15个字符

232
00:10:45,790 --> 00:10:51,034
< No Speech >

233
00:10:51,034 --> 00:10:59,034
我们再来看第六题,第六题呢,他要求创建一个查询显示雇员的last name啊,还有commission,

234
00:11:00,026 --> 00:11:03,294
如果雇员没有佣金,则显示No Commission。

235
00:11:03,294 --> 00:11:05,818
< No Speech >

236
00:11:05,818 --> 00:11:09,118
那这个题也比较简单了吧,判断它有没有佣金。

237
00:11:09,818 --> 00:11:11,578
这个is not就可以了

238
00:11:11,578 --> 00:11:12,978
但是现在他有一个需求

239
00:11:12,978 --> 00:11:13,630
什么需求呢

240
00:11:14,234 --> 00:11:20,702
如果雇员有佣金,则显示佣金。如果没有佣金,才显示no commission。

241
00:11:21,210 --> 00:11:22,974
那这里我们就不能用isNone了

242
00:11:22,974 --> 00:11:25,722
< No Speech >

243
00:11:25,722 --> 00:11:30,882
还记得这个函数吗?ifnum,如果第一个参数不为空,则显示第一个参数

244
00:11:30,882 --> 00:11:33,534
如果第一个参数为空,则显示第二个参数

245
00:11:34,202 --> 00:11:36,894
是吧?一个EFN就能解决这个问题

246
00:11:36,894 --> 00:11:40,442
< No Speech >

247
00:11:40,442 --> 00:11:43,614
从 安卜拉伊 取得的选择

248
00:11:43,614 --> 00:11:45,210
< No Speech >

249
00:11:45,210 --> 00:11:49,690
然后有没有查询条件呢?有没有过滤条件呢?没有,对吧?那直接

250
00:11:49,690 --> 00:11:51,258
< No Speech >

251
00:11:51,258 --> 00:11:53,458
然后slack里面它要什么呢

252
00:11:53,458 --> 00:11:54,590
它要last name

253
00:11:55,546 --> 00:11:57,866
然后呢他还要这个commission pjd

254
00:11:57,866 --> 00:12:00,426
但是呢没有用具呢他要写是no commission是吧

255
00:12:00,426 --> 00:12:01,630
那这种没用的一个

256
00:12:01,630 --> 00:12:02,938
< No Speech >

257
00:12:02,938 --> 00:12:06,098
如果有没有佣金显示佣金

258
00:12:06,098 --> 00:12:08,298
如果没有佣金显示第二个参数的值

259
00:12:08,298 --> 00:12:10,206
第二个参数的值是

260
00:12:10,206 --> 00:12:17,274
< No Speech >

261
00:12:17,274 --> 00:12:18,622
这个列名叫什么

262
00:12:18,622 --> 00:12:19,834
< No Speech >

263
00:12:19,834 --> 00:12:21,598
对吧 大写的 COMS

264
00:12:21,598 --> 00:12:26,778
< No Speech >

265
00:12:26,778 --> 00:12:30,178
现在如果没有佣金的是不是显示的都是no commission

266
00:12:30,178 --> 00:12:32,458
然后有佣金的正常显示佣金就可以了

267
00:12:32,458 --> 00:12:33,854
看到了吗同学们

268
00:12:33,854 --> 00:12:41,274
< No Speech >

269
00:12:41,274 --> 00:12:46,034
OK,这样我们就完成了第六个题,我们再来看第七题

270
00:12:46,034 --> 00:12:55,198
第七题稍微有些复杂,我们来看一下,写一个查询,按照下面的数据显示所有公司的资产

271
00:12:56,026 --> 00:12:59,454
基于赵白帝列的直的级别

272
00:12:59,454 --> 00:13:00,922
< No Speech >

273
00:13:00,922 --> 00:13:02,718
如果这个人的教派地

274
00:13:03,706 --> 00:13:07,454
那么级别是A,如果交换ID是他,他的级别是B

275
00:13:07,454 --> 00:13:09,146
< No Speech >

276
00:13:09,146 --> 00:13:13,182
那我们当拿到这样的需求的时候,脑袋马上想到通用函数的谁啊?

277
00:13:13,914 --> 00:13:15,274
是不是KISS啊

278
00:13:15,274 --> 00:13:17,754
KISS的作用不是可以做多条件的判断吗

279
00:13:17,754 --> 00:13:21,854
相当于我们家谈的EFORELSEEFORELSEEFORELSEEFORELSEEFOR

280
00:13:21,854 --> 00:13:22,686
然后ELSE

281
00:13:23,322 --> 00:13:26,522
是吧同学们 这道题肯定是用case来解决的

282
00:13:26,522 --> 00:13:28,322
当我们知道用case来解决以后

283
00:13:28,322 --> 00:13:30,682
那么这个题其实你已经能完成一大半了

284
00:13:30,682 --> 00:13:32,382
整个过程最复杂的地方就是

285
00:13:32,382 --> 00:13:33,498
< No Speech >

286
00:13:33,498 --> 00:13:34,910
那写起来就很简单了

287
00:13:34,910 --> 00:13:40,730
< No Speech >

288
00:13:40,730 --> 00:13:45,730
然后他没有什么行的选择 要所有数据然后去做这些条件的判断

289
00:13:45,730 --> 00:13:46,490
对不对

290
00:13:46,490 --> 00:13:50,290
那么slack的后面跟谁呢 他用谁去做判断呢

291
00:13:50,290 --> 00:13:54,090
是不是用这个部门ID啊 那就是jobID对吧

292
00:13:54,090 --> 00:13:57,054
然后keys后面跟的是谁呢

293
00:13:57,054 --> 00:14:00,954
< No Speech >

294
00:14:00,954 --> 00:14:02,514
它是写是叫白帝啊

295
00:14:02,514 --> 00:14:04,634
然后case后面用谁来做判断呢

296
00:14:04,634 --> 00:14:06,110
是不是要用叫白帝来判断呢

297
00:14:06,110 --> 00:14:11,034
< No Speech >

298
00:14:11,034 --> 00:14:12,634
我们把叫白帝显示出来

299
00:14:12,634 --> 00:14:15,194
然后用KISS再去对叫白帝做判断啊

300
00:14:15,194 --> 00:14:22,650
< No Speech >

301
00:14:22,650 --> 00:14:25,118
如果叫板ID的值是

302
00:14:25,118 --> 00:14:27,674
< No Speech >

303
00:14:27,674 --> 00:14:28,894
Pres

304
00:14:28,894 --> 00:14:38,842
< No Speech >

305
00:14:38,842 --> 00:14:41,950
如果是它的话这个值则显示A

306
00:14:41,950 --> 00:14:43,482
< No Speech >

307
00:14:43,482 --> 00:14:44,734
稳妥再来

308
00:14:44,734 --> 00:14:48,154
< No Speech >

309
00:14:48,154 --> 00:14:49,950
这样大家看的更清楚一些

310
00:14:49,950 --> 00:14:56,826
< No Speech >

311
00:14:56,826 --> 00:14:58,430
我们会有很多的问证

312
00:14:58,430 --> 00:15:10,042
< No Speech >

313
00:15:10,042 --> 00:15:11,838
第一个是他第二个

314
00:15:11,838 --> 00:15:13,882
< No Speech >

315
00:15:13,882 --> 00:15:15,882
ST下滑线

316
00:15:15,882 --> 00:15:18,074
< No Speech >

317
00:15:18,074 --> 00:15:19,838
然后它显示的是B

318
00:15:19,838 --> 00:15:21,626
< No Speech >

319
00:15:21,626 --> 00:15:24,702
IT下环线prog

320
00:15:25,210 --> 00:15:27,650
它显示的是C啊

321
00:15:27,650 --> 00:15:30,270
然后呢下一个是SA

322
00:15:30,270 --> 00:15:32,314
< No Speech >

323
00:15:32,314 --> 00:15:33,594
下滑线

324
00:15:33,594 --> 00:15:35,386
< No Speech >

325
00:15:35,386 --> 00:15:36,702
显示的是

326
00:15:36,702 --> 00:15:44,954
< No Speech >

327
00:15:44,954 --> 00:15:47,274
然后如果是ST

328
00:15:47,274 --> 00:15:50,810
< No Speech >

329
00:15:50,810 --> 00:15:52,382
那么它显示的是E

330
00:15:52,382 --> 00:15:56,730
< No Speech >

331
00:15:56,730 --> 00:15:59,250
那么如果这些都不是的呢

332
00:15:59,250 --> 00:16:00,730
是不是要显示0啊

333
00:16:00,730 --> 00:16:02,530
那这里是不是要加一个else了

334
00:16:02,530 --> 00:16:04,986
< No Speech >

335
00:16:04,986 --> 00:16:10,306
然后加一个else,else是什么呢?0,然后别忘了加一个end

336
00:16:10,306 --> 00:16:14,306
明白这次吧?这样我们就实现了这样的一个查询

337
00:16:14,306 --> 00:16:16,638
我们来看一下结果是不是这样的,运行

338
00:16:17,178 --> 00:16:18,942
好 我们看一下啊

339
00:16:18,942 --> 00:16:20,986
< No Speech >

340
00:16:20,986 --> 00:16:24,286
他说有错 是Keys.jobid.win

341
00:16:24,286 --> 00:16:26,586
< No Speech >

342
00:16:26,586 --> 00:16:30,786
Keys, job ID, job ID

343
00:16:30,786 --> 00:16:40,762
< No Speech >

344
00:16:40,762 --> 00:16:44,242
我们这少了个逗号

345
00:16:44,242 --> 00:16:45,530
< No Speech >

346
00:16:45,530 --> 00:16:52,730
OK,这就可以了,是吧,我们可以看一下,只要叫做ID不是我们所判断的这些内容,它的这个

347
00:16:52,730 --> 00:16:54,714
< No Speech >

348
00:16:54,714 --> 00:16:57,114
这块给他起一个别名吧

349
00:16:57,114 --> 00:16:58,674
我看要不要去起别名啊

350
00:16:58,714 --> 00:16:59,554
没要求

351
00:16:59,954 --> 00:17:00,874
那就不用管他了

352
00:17:00,874 --> 00:17:02,074
那都是零是吧

353
00:17:02,074 --> 00:17:05,074
然后是我们所限定的这些部门ID当中

354
00:17:05,074 --> 00:17:06,634
他显示就是ABCD

355
00:17:07,274 --> 00:17:07,714
是吧

356
00:17:07,714 --> 00:17:08,914
ABCDE啊

357
00:17:09,154 --> 00:17:09,514
这样呢

358
00:17:09,514 --> 00:17:11,514
我们就把这个功能做了一个实现

359
00:17:11,754 --> 00:17:12,154
啊

360
00:17:12,314 --> 00:17:15,634
所以说当我们去啊拿到一个业务需求

361
00:17:15,634 --> 00:17:16,794
不知道怎么办的时候

362
00:17:16,794 --> 00:17:18,954
先考虑他是不是需要做这样的判断

363
00:17:18,954 --> 00:17:20,834
如果是需要做这样的判断的话

364
00:17:20,834 --> 00:17:23,834
那我们当你想到了这个case语句的时候

365
00:17:23,834 --> 00:17:24,834
其实这个答案呢

366
00:17:24,834 --> 00:17:26,314
你已经写出来一大半了

367
00:17:26,314 --> 00:17:29,054
剩下的无外乎就是根据需求去做具体实现罢了

368
00:17:29,054 --> 00:17:32,026
< No Speech >

369
00:17:32,026 --> 00:17:35,706
那这样我们就通过这些题对我们之前所讲的

370
00:17:35,706 --> 00:17:38,866
Mysql当中的单行函数为大家做了一个练习

371
00:17:38,866 --> 00:17:41,866
提高一下大家对单行函数的一个使用

372
00:17:41,866 --> 00:17:43,486
好了同学们 那我们这期的课就讲到这里 拜拜

