1
00:00:00,634 --> 00:00:02,074
Hello小伙伴大家好

2
00:00:02,074 --> 00:00:03,674
这节课我们来学习

3
00:00:03,674 --> 00:00:05,674
Rookieper的一个数据模型

4
00:00:05,674 --> 00:00:08,274
老师一直说什么是Rookieper

5
00:00:08,274 --> 00:00:12,954
那Rookieper它等于文件系统加监听机制

6
00:00:12,954 --> 00:00:15,474
那你既然说你是一个文件系统

7
00:00:15,474 --> 00:00:17,994
那肯定是为保存一些数据是不是

8
00:00:17,994 --> 00:00:20,114
那这节课我们就来看一下Rookieper

9
00:00:20,114 --> 00:00:22,314
它是如何保存数据的

10
00:00:22,314 --> 00:00:23,834
在Rookieper中

11
00:00:23,834 --> 00:00:27,954
也说Rookieper中所有存储数据的东东

12
00:00:27,954 --> 00:00:30,354
我们称它为是叫Znode

13
00:00:30,354 --> 00:00:32,554
就是节点叫Znode

14
00:00:32,554 --> 00:00:35,114
这个节点的名称我们称它为是一个Znode

15
00:00:35,114 --> 00:00:36,574
并且它是一种

16
00:00:37,434 --> 00:00:39,794
value的这种形式来经什么呢

17
00:00:39,794 --> 00:00:41,114
存储数据的

18
00:00:41,114 --> 00:00:44,714
记住是kvalue的这种形式来存储数据

19
00:00:44,714 --> 00:00:45,954
那你说它是一个

20
00:00:45,954 --> 00:00:48,754
就是说我们每次只要是存储一个数据

21
00:00:48,754 --> 00:00:50,274
那它就是一个nano的节点

22
00:00:50,274 --> 00:00:52,834
但是它存储数据的那个结构

23
00:00:53,154 --> 00:00:56,434
和我们之前所学习过的linux的这种文件

24
00:00:56,434 --> 00:00:57,674
系统非常相似

25
00:00:57,674 --> 00:01:00,514
大家注意我们之前所学习的linux的文件

26
00:01:00,514 --> 00:01:02,674
系统是不是跟路径是一个斜杠

27
00:01:02,954 --> 00:01:04,554
记住跟路径是一个斜杠

28
00:01:04,554 --> 00:01:04,874
没问题

29
00:01:04,994 --> 00:01:06,274
我们打开我们的linux系统

30
00:01:06,274 --> 00:01:09,154
我们去到一个斜杠的目录

31
00:01:09,154 --> 00:01:10,834
大家注意在linux系统中

32
00:01:10,834 --> 00:01:14,474
你看我们cd斜杠跟路径是一个什么呢

33
00:01:14,474 --> 00:01:15,354
斜杠

34
00:01:15,354 --> 00:01:17,034
你说以斜杠开头

35
00:01:17,034 --> 00:01:18,514
比如说我们在斜杠下边

36
00:01:18,594 --> 00:01:20,034
我们有好多的目录

37
00:01:20,234 --> 00:01:21,314
有好多的目录

38
00:01:21,314 --> 00:01:22,954
但是在rootkeeper中

39
00:01:22,954 --> 00:01:26,274
它也是模仿的linux的这种文件系统

40
00:01:26,274 --> 00:01:29,594
它也是以一个跟路径作为是一个

41
00:01:29,594 --> 00:01:31,514
以斜杠作为一个跟路径

42
00:01:31,514 --> 00:01:34,074
并且它保存zend的这个节点

43
00:01:34,394 --> 00:01:35,314
它也是什么

44
00:01:35,314 --> 00:01:37,514
以竖的这种形式保存的

45
00:01:37,514 --> 00:01:38,794
就是在跟路径下

46
00:01:38,794 --> 00:01:40,034
我们可以创建文件夹

47
00:01:40,154 --> 00:01:41,714
比如说有个斜杠app

48
00:01:41,714 --> 00:01:43,114
这边有个斜杠log

49
00:01:43,514 --> 00:01:45,274
大家注意斜杠app

50
00:01:45,274 --> 00:01:46,514
我们可以把斜杠app

51
00:01:46,514 --> 00:01:47,834
想象成它就是一个路径

52
00:01:48,114 --> 00:01:49,234
这也是一个路径

53
00:01:49,634 --> 00:01:52,114
当然我们可以在app的路径下面

54
00:01:52,194 --> 00:01:53,034
我们可以继续创建

55
00:01:53,114 --> 00:01:55,594
比如说ce你看app下边

56
00:01:55,594 --> 00:01:57,514
我们可以继续创建appce

57
00:01:57,514 --> 00:01:58,994
以及appcl

58
00:01:59,074 --> 00:02:00,114
你看在app下面

59
00:02:00,194 --> 00:02:02,594
我们有一个叫ce和cl的一个文件夹

60
00:02:02,594 --> 00:02:05,434
当然在rookie本中

61
00:02:05,554 --> 00:02:08,154
它是以znode的这种方式保存节点

62
00:02:08,154 --> 00:02:10,914
它的文件系统是类似于记住

63
00:02:10,914 --> 00:02:13,754
是类似于linux的文件系统

64
00:02:14,154 --> 00:02:16,554
模仿的不是说是一模一样的

65
00:02:16,554 --> 00:02:18,674
但是在rookie本中

66
00:02:18,674 --> 00:02:19,674
我们要保存数据

67
00:02:19,674 --> 00:02:20,554
他们说过了

68
00:02:20,674 --> 00:02:23,594
它是以一种kvalue的这种形式来保存

69
00:02:23,834 --> 00:02:25,114
为什么 k是什么

70
00:02:25,714 --> 00:02:29,554
k就是我们所说的路径的名字

71
00:02:29,834 --> 00:02:31,954
当然你必须要以斜杠开头

72
00:02:31,954 --> 00:02:33,754
就是所有的rookie本的

73
00:02:33,754 --> 00:02:35,154
所有的znode节点

74
00:02:35,274 --> 00:02:37,394
必须是以斜杠开头的

75
00:02:37,594 --> 00:02:39,634
当然根就是斜杠

76
00:02:39,914 --> 00:02:40,954
在斜杠目录下

77
00:02:40,954 --> 00:02:41,874
你到底有哪些目录

78
00:02:42,034 --> 00:02:45,394
并且我们这个就是我们说的k的

79
00:02:45,674 --> 00:02:47,194
kvalue的k

80
00:02:47,434 --> 00:02:48,434
你既然说你保存数据

81
00:02:48,434 --> 00:02:51,154
我们是在它的文件的名字

82
00:02:51,154 --> 00:02:52,354
下边来保存数据

83
00:02:52,594 --> 00:02:53,474
比如说我们来看一下

84
00:02:54,234 --> 00:02:55,914
比如说我们看这有个znode

85
00:02:55,914 --> 00:02:57,474
znode没问题

86
00:02:57,474 --> 00:03:00,234
但是我们在znode根的znode

87
00:03:00,234 --> 00:03:01,514
下边我们有两个节点

88
00:03:01,514 --> 00:03:03,834
一个叫做斜杠java

89
00:03:03,954 --> 00:03:05,514
还有一个叫斜杠server

90
00:03:05,914 --> 00:03:06,474
server

91
00:03:06,474 --> 00:03:07,794
然后斜杠java

92
00:03:07,914 --> 00:03:09,474
我们看这个就是可以记住

93
00:03:09,474 --> 00:03:10,554
这个就是一个k

94
00:03:11,114 --> 00:03:12,954
它斜杠java就是路径

95
00:03:12,954 --> 00:03:13,714
它就是k

96
00:03:13,994 --> 00:03:16,154
value具体它是来保存数据的

97
00:03:16,234 --> 00:03:18,114
我们说如果gabr它是文件系统

98
00:03:18,114 --> 00:03:18,874
加间谍机制

99
00:03:18,874 --> 00:03:20,234
文件系统加间谍机制

100
00:03:20,234 --> 00:03:20,714
是吧

101
00:03:20,714 --> 00:03:22,074
它来保存一个文件

102
00:03:22,194 --> 00:03:23,234
你说value是什么

103
00:03:23,314 --> 00:03:24,154
value是一个字幕创

104
00:03:24,154 --> 00:03:25,354
你看我们是不是s

105
00:03:25,634 --> 00:03:26,554
supreme是不是

106
00:03:26,754 --> 00:03:27,994
这块你看k是什么

107
00:03:28,154 --> 00:03:29,154
就是斜杠server

108
00:03:29,154 --> 00:03:30,634
然后后边是一个ip地址

109
00:03:30,634 --> 00:03:32,994
这个ip地址就是一个value

110
00:03:32,994 --> 00:03:33,914
大家只需要记住

111
00:03:33,914 --> 00:03:35,114
我们这节课的一个重点

112
00:03:35,114 --> 00:03:35,954
首先第一个

113
00:03:36,914 --> 00:03:37,594
这个是gabr

114
00:03:37,794 --> 00:03:39,314
它的数据模型

115
00:03:39,594 --> 00:03:41,674
是模仿于linux

116
00:03:41,874 --> 00:03:44,314
就是以这种竖中的这种结构

117
00:03:44,514 --> 00:03:46,674
以根路径的斜杠开始

118
00:03:46,674 --> 00:03:49,394
然后每个文件夹下面

119
00:03:49,714 --> 00:03:50,714
每个文件夹下面

120
00:03:50,834 --> 00:03:52,554
可以放好多子幕录

121
00:03:52,754 --> 00:03:54,394
这就是模仿的一个linux

122
00:03:54,434 --> 00:03:55,514
但是唯一不同的是

123
00:03:55,514 --> 00:03:58,154
我们可以在它的文件的名字下

124
00:03:58,394 --> 00:03:59,554
可以保存数据

125
00:03:59,554 --> 00:04:00,834
这就是我们所说的

126
00:04:00,834 --> 00:04:02,914
rootkeeper的一个数据模型

127
00:04:03,074 --> 00:04:04,194
比如说我们看这

128
00:04:04,194 --> 00:04:06,074
< No Speech >

129
00:04:06,074 --> 00:04:08,034
根路径的节点下边有两个

130
00:04:08,034 --> 00:04:08,354
是不是

131
00:04:08,514 --> 00:04:08,834
两个

132
00:04:08,834 --> 00:04:09,714
一个是斜杠站板

133
00:04:09,714 --> 00:04:10,514
一个是斜杠server

134
00:04:10,514 --> 00:04:12,074
我们可以在这个为k

135
00:04:12,274 --> 00:04:13,274
这个为value

136
00:04:13,274 --> 00:04:15,954
我们通过这种方式来保存数据

137
00:04:16,194 --> 00:04:16,674
ok

138
00:04:16,954 --> 00:04:19,314
这节课我们讲解数据模型

139
00:04:19,514 --> 00:04:20,714
我们到这就结束了

140
00:04:20,754 --> 00:04:21,674
我们在进入之前

141
00:04:21,834 --> 00:04:23,274
我们再做两个练习题

142
00:04:23,274 --> 00:04:23,754
第一个

143
00:04:24,034 --> 00:04:24,994
rootkeeper其实说

144
00:04:24,994 --> 00:04:26,394
每个数据节点

145
00:04:26,394 --> 00:04:27,514
我们称它为是一个什么

146
00:04:27,514 --> 00:04:29,554
是不是称它为是一个znode

147
00:04:29,754 --> 00:04:30,834
称它为一个是znode

148
00:04:30,834 --> 00:04:31,674
就是节点

149
00:04:31,794 --> 00:04:33,554
第二个 rootkeeper记录中

150
00:04:33,754 --> 00:04:36,714
znode的节点的路径标识方式

151
00:04:36,714 --> 00:04:38,914
是通过什么分割路径的

152
00:04:39,114 --> 00:04:40,794
第一斜杠没问题

153
00:04:40,794 --> 00:04:41,514
就是斜杠是吧

154
00:04:41,514 --> 00:04:42,594
根本就没有什么冒号

155
00:04:42,594 --> 00:04:43,754
这些符号根本就不对

156
00:04:43,994 --> 00:04:45,514
所以说应该选择的是a

157
00:04:45,674 --> 00:04:46,074
好了

158
00:04:46,674 --> 00:04:48,634
这些个我们讲解rootkeeper的

159
00:04:48,634 --> 00:04:49,514
数据模型

160
00:04:49,514 --> 00:04:50,554
到这就结束了

161
00:04:50,554 --> 00:04:51,806
谢谢大家

