1
00:00:00,090 --> 00:00:01,750
Hello 小伙伴大家好

2
00:00:01,750 --> 00:00:03,090
我们从今天开始呢

3
00:00:03,090 --> 00:00:05,890
我们正式开始学习Zookeeper这个技术

4
00:00:05,890 --> 00:00:08,530
我们在说这个Zookeeper这个技术之前呀

5
00:00:08,530 --> 00:00:10,210
先来给大家介绍一些概念啊

6
00:00:10,210 --> 00:00:13,810
就是这个集中式到分布式架构的一个演变

7
00:00:13,810 --> 00:00:16,090
那到底什么是单机架构呢

8
00:00:16,090 --> 00:00:19,490
就是一个我们这个业务这个数据量很小的时候

9
00:00:19,490 --> 00:00:21,250
就是我们这个项目的前期

10
00:00:21,250 --> 00:00:22,610
就是我们所有的代码呢

11
00:00:22,610 --> 00:00:24,970
都是放在一个项目里面

12
00:00:24,970 --> 00:00:28,650
就像小伙伴之前所用的SSM开发的一个项目

13
00:00:28,650 --> 00:00:30,090
我们把它打包成一个war包呢

14
00:00:30,090 --> 00:00:31,170
放到tomcat里边

15
00:00:31,170 --> 00:00:33,650
这就是一个单机架构的一个项目

16
00:00:33,650 --> 00:00:36,170
或者你是一个springboot的一个项目啊

17
00:00:36,170 --> 00:00:37,850
这就是一个单机架构的

18
00:00:37,850 --> 00:00:39,410
那整个项目呢

19
00:00:39,410 --> 00:00:42,610
它所有的服务都是这一台什么呢

20
00:00:42,610 --> 00:00:44,610
应用服务器提供的啊

21
00:00:44,610 --> 00:00:45,730
提供的OK

22
00:00:45,730 --> 00:00:47,210
这就是单机架构

23
00:00:47,210 --> 00:00:49,050
那当然了好处也比较明显呀

24
00:00:49,050 --> 00:00:50,370
那我们在开发的过程中

25
00:00:50,370 --> 00:00:52,410
我们开发速度比较快是吧

26
00:00:52,410 --> 00:00:53,930
部署速度呢也比较快

27
00:00:53,930 --> 00:00:54,570
但是呢

28
00:00:54,570 --> 00:00:56,210
往往暴露出来的问题呢

29
00:00:56,210 --> 00:00:57,290
也比较明显

30
00:00:57,290 --> 00:01:01,450
因为单机架构它的服务器的性能啊

31
00:01:01,450 --> 00:01:02,890
总是会存在一些瓶颈

32
00:01:02,890 --> 00:01:04,930
比如说我们这个用户量增长的时候呢

33
00:01:04,930 --> 00:01:07,290
我们这个服务器的性能就会出现一些瓶颈

34
00:01:07,290 --> 00:01:07,850
第二个呢

35
00:01:07,850 --> 00:01:09,890
是不可以伸缩啊

36
00:01:09,890 --> 00:01:10,570
第三个呢

37
00:01:10,570 --> 00:01:13,730
是我们这个代码量庞大系统臃肿

38
00:01:13,730 --> 00:01:14,490
什么意思呢

39
00:01:14,490 --> 00:01:18,010
就是当我们这个项目的业务写的越来越多的时候啊

40
00:01:18,010 --> 00:01:19,090
我们这个项目啊

41
00:01:19,090 --> 00:01:20,530
它会变得越来越臃肿

42
00:01:20,530 --> 00:01:21,850
比如说我改一个地方

43
00:01:21,850 --> 00:01:23,690
牵一发而动全身啊

44
00:01:23,690 --> 00:01:25,370
这也是它的一个缺点

45
00:01:25,370 --> 00:01:26,130
那第三个呢

46
00:01:26,130 --> 00:01:28,650
就是单点故障的这个问题啊

47
00:01:28,650 --> 00:01:30,010
当我们这个服务是吧

48
00:01:30,010 --> 00:01:32,690
它只有一台机器提供服务吗

49
00:01:32,690 --> 00:01:34,290
当这个服务当机的时候

50
00:01:34,290 --> 00:01:35,650
那我们这个项目啊

51
00:01:35,650 --> 00:01:37,330
那我们这个服务是直接就干嘛呢

52
00:01:37,330 --> 00:01:37,970
出现问题了

53
00:01:37,970 --> 00:01:39,770
这就是单点故障的这种问题

54
00:01:39,770 --> 00:01:41,530
那这种单点单机架构

55
00:01:41,530 --> 00:01:42,610
它会出现这么多问题

56
00:01:42,610 --> 00:01:44,210
我们该如何去解决呢

57
00:01:44,210 --> 00:01:44,410
哎

58
00:01:44,410 --> 00:01:44,770
我们呢

59
00:01:44,770 --> 00:01:47,930
可以通过集群架构的这种方式呢

60
00:01:47,930 --> 00:01:49,010
来进行解决啊

61
00:01:49,010 --> 00:01:52,850
就是单机的这种单机的这种架构出现了瓶颈了

62
00:01:52,850 --> 00:01:54,690
那你说单机出现瓶颈吗

63
00:01:54,690 --> 00:01:57,570
你看我们之前是一台tomcat的没问题吧

64
00:01:57,570 --> 00:01:59,450
那我单机出现瓶颈之后呢

65
00:01:59,450 --> 00:02:00,690
我就多来几台呗

66
00:02:00,690 --> 00:02:03,530
就是我把单机多复制几件多复制几份

67
00:02:03,530 --> 00:02:04,290
那这个时候呢

68
00:02:04,290 --> 00:02:05,490
它就构成了什么呢

69
00:02:05,490 --> 00:02:06,250
集群了

70
00:02:06,250 --> 00:02:06,770
并且呢

71
00:02:06,770 --> 00:02:09,930
我们通过一个叫做Nginx的一个技术啊

72
00:02:09,930 --> 00:02:13,610
我们通过它去做反向代理负载均衡

73
00:02:13,610 --> 00:02:15,450
帮我们把之前的压力啊

74
00:02:15,450 --> 00:02:18,370
也说负载均衡到每一个tomcat上

75
00:02:18,370 --> 00:02:20,050
比如说每个tomcat之前呢

76
00:02:20,050 --> 00:02:21,890
每个tomcat有300个并发

77
00:02:21,890 --> 00:02:23,210
那我们有三台的话

78
00:02:23,210 --> 00:02:25,090
就可以支撑900个并发了啊

79
00:02:25,090 --> 00:02:25,490
所以说呢

80
00:02:25,490 --> 00:02:27,850
我们从单机架构变成了什么呢

81
00:02:27,850 --> 00:02:28,970
集群架构

82
00:02:28,970 --> 00:02:29,610
但是呢

83
00:02:29,610 --> 00:02:30,770
集群架构呢

84
00:02:30,770 --> 00:02:32,050
也是有一点问题

85
00:02:32,050 --> 00:02:32,890
什么问题呢

86
00:02:32,890 --> 00:02:34,010
当你会发现啊

87
00:02:34,010 --> 00:02:35,490
就是你的这个业务量啊

88
00:02:35,490 --> 00:02:37,690
只要发展到一定量的程度的时候

89
00:02:37,690 --> 00:02:38,490
你会发现

90
00:02:38,490 --> 00:02:41,610
无论你在后边怎么去增加这个节点

91
00:02:41,610 --> 00:02:43,610
就是怎么去增加这个节点

92
00:02:43,610 --> 00:02:45,730
你好像这个这个性能

93
00:02:45,730 --> 00:02:47,530
好像提升的就不是很明显了

94
00:02:47,530 --> 00:02:48,290
那这个时候呢

95
00:02:48,290 --> 00:02:48,970
怎么办

96
00:02:48,970 --> 00:02:50,450
我们从这个时候啊

97
00:02:50,450 --> 00:02:53,130
你就要开始学习分布式架构了

98
00:02:53,130 --> 00:02:53,930
那小伙伴啊

99
00:02:53,930 --> 00:02:55,010
想想你到这啊

100
00:02:55,010 --> 00:02:57,930
就是你学到我们这套课程到这个位置的时候

101
00:02:57,930 --> 00:03:01,090
你之前所有的理解是从单机架构

102
00:03:01,090 --> 00:03:01,530
然后呢

103
00:03:01,530 --> 00:03:03,770
你学了一个Nginx的一个技术

104
00:03:03,770 --> 00:03:04,530
你从而呢

105
00:03:04,530 --> 00:03:05,330
把你的架构呢

106
00:03:05,330 --> 00:03:08,090
演变成了一个叫做集群的架构

107
00:03:08,090 --> 00:03:08,850
明白没有

108
00:03:08,850 --> 00:03:11,370
你学了Nginx里边的负载均衡啊

109
00:03:11,370 --> 00:03:13,690
反向代理变成了集群的架构了

110
00:03:13,690 --> 00:03:14,210
然后呢

111
00:03:14,210 --> 00:03:15,690
我们集群架构又不行了呀

112
00:03:15,690 --> 00:03:16,570
我们要从而呢

113
00:03:16,570 --> 00:03:17,410
进化到什么呢

114
00:03:17,410 --> 00:03:18,730
分布式架构

115
00:03:18,730 --> 00:03:21,490
这就是你走向高级程序程序员

116
00:03:21,490 --> 00:03:23,010
不可或缺的一个技术

117
00:03:23,010 --> 00:03:25,210
就是分布式的一个技术

118
00:03:25,210 --> 00:03:25,890
明白没有

119
00:03:25,890 --> 00:03:27,970
那到底什么是分布式呢

120
00:03:27,970 --> 00:03:30,050
单机到集群很简单啊

121
00:03:30,050 --> 00:03:31,410
以前的多复制几份

122
00:03:31,410 --> 00:03:31,930
但是呢

123
00:03:31,930 --> 00:03:33,770
分布式又是什么意思呢

124
00:03:33,770 --> 00:03:35,170
我们来一块看一下啊

125
00:03:35,170 --> 00:03:36,650
那分布式架构呢

126
00:03:36,650 --> 00:03:37,930
他就讲的是啊

127
00:03:37,930 --> 00:03:42,290
将一个完整的系统按照业务的功能

128
00:03:42,290 --> 00:03:46,490
我们拆成一个一个独立的子系统

129
00:03:46,490 --> 00:03:47,250
什么意思呢

130
00:03:47,250 --> 00:03:48,010
我们之前啊

131
00:03:48,010 --> 00:03:50,010
你看我们的用户服务

132
00:03:50,010 --> 00:03:51,090
订单服务

133
00:03:51,090 --> 00:03:52,250
商品服务

134
00:03:52,250 --> 00:03:53,370
地址服务

135
00:03:53,370 --> 00:03:54,450
支付服务

136
00:03:54,450 --> 00:03:55,810
登录服务

137
00:03:55,810 --> 00:03:56,450
商品

138
00:03:56,450 --> 00:03:58,530
商护服务等等客户服务

139
00:03:58,530 --> 00:03:59,570
你说这个服务呢

140
00:03:59,570 --> 00:04:02,090
我们都是写在一个项目里边

141
00:04:02,090 --> 00:04:03,610
然后他后来变成集群的

142
00:04:03,610 --> 00:04:04,250
但是现在呢

143
00:04:04,250 --> 00:04:04,890
我们记住啊

144
00:04:04,890 --> 00:04:07,810
我们把每一个服务单独给抽出来

145
00:04:07,810 --> 00:04:09,570
比如说我写一个SSM

146
00:04:09,570 --> 00:04:11,370
他里边只有一个用户服务

147
00:04:11,370 --> 00:04:11,650
然后呢

148
00:04:11,650 --> 00:04:14,850
我再写一个服务里边是专门只写订单服务

149
00:04:14,850 --> 00:04:16,170
就是我把每一个服务呢

150
00:04:16,170 --> 00:04:20,010
按业务拆成独立一个一个的子系统

151
00:04:20,010 --> 00:04:20,490
然后呢

152
00:04:20,490 --> 00:04:21,450
每个子系统呢

153
00:04:21,450 --> 00:04:22,850
我们就称它为是什么呢

154
00:04:22,850 --> 00:04:23,690
服务啊

155
00:04:23,690 --> 00:04:24,410
称它为是服务

156
00:04:24,410 --> 00:04:25,490
所以说呢

157
00:04:25,490 --> 00:04:27,890
你老是这样做有什么好处呢

158
00:04:27,890 --> 00:04:29,850
我给大家打一个比方吧

159
00:04:29,850 --> 00:04:31,210
在很久之前呢

160
00:04:31,210 --> 00:04:33,490
我们都在就是消遣的时候呢

161
00:04:33,490 --> 00:04:36,290
我们都玩一个叫做内涵段子的一个软件

162
00:04:36,290 --> 00:04:36,490
哎

163
00:04:36,490 --> 00:04:37,370
晚上没事了

164
00:04:37,370 --> 00:04:38,090
打开手机

165
00:04:38,090 --> 00:04:40,130
我们看内涵段子没问题

166
00:04:40,130 --> 00:04:40,770
然后呢

167
00:04:40,770 --> 00:04:43,410
有一天内涵段子是不是被封掉了呀

168
00:04:43,410 --> 00:04:44,770
那小伙伴你们干嘛去了

169
00:04:44,770 --> 00:04:46,970
你是不是所有的人

170
00:04:46,970 --> 00:04:49,690
你都去看抖音去了

171
00:04:49,690 --> 00:04:50,410
是不是啊

172
00:04:50,410 --> 00:04:51,490
但是呢你会发现啊

173
00:04:51,490 --> 00:04:53,210
那抖音他的这个服务呢

174
00:04:53,210 --> 00:04:57,330
他就是基于这个分布式架构开发的

175
00:04:57,330 --> 00:05:00,650
就算你会发现所有的用户都去看抖音去了

176
00:05:00,650 --> 00:05:01,690
流量一下增大了

177
00:05:01,690 --> 00:05:03,690
但是抖音你会发现有个什么问题

178
00:05:03,690 --> 00:05:06,170
他的服务支撑不起来之后怎么办了

179
00:05:06,170 --> 00:05:07,050
你会发现啊

180
00:05:07,050 --> 00:05:09,010
我看视频还是可以看的

181
00:05:09,010 --> 00:05:09,770
但是啊

182
00:05:09,770 --> 00:05:10,290
注意

183
00:05:10,290 --> 00:05:13,090
但是我们评论不能评论

184
00:05:13,090 --> 00:05:15,610
因为我们玩抖音无非就是看视频评论嘛

185
00:05:15,610 --> 00:05:15,970
但是呢

186
00:05:15,970 --> 00:05:17,970
你会发现评论这个功能

187
00:05:17,970 --> 00:05:18,810
它是不能用的

188
00:05:18,810 --> 00:05:19,330
但是呢

189
00:05:19,330 --> 00:05:21,690
你还是可以照常的看视频

190
00:05:21,690 --> 00:05:22,970
照常的给别人点赞

191
00:05:22,970 --> 00:05:23,970
也可以登录

192
00:05:23,970 --> 00:05:24,890
也可以加好友

193
00:05:24,890 --> 00:05:26,610
就别的功能都不影响

194
00:05:26,610 --> 00:05:28,570
那如果说我们是这种单机架构

195
00:05:28,570 --> 00:05:30,170
或者是这种集群架构呢

196
00:05:30,170 --> 00:05:32,890
我们说了当你用户量加大的时候

197
00:05:32,890 --> 00:05:33,370
是吧

198
00:05:33,370 --> 00:05:35,010
你这个机器你当机了

199
00:05:35,010 --> 00:05:37,050
你整个服务都不能用了

200
00:05:37,050 --> 00:05:38,610
假如说它是一个抖音的话

201
00:05:38,610 --> 00:05:39,930
你登录也不能登录了

202
00:05:39,930 --> 00:05:40,770
你就登不进去

203
00:05:40,770 --> 00:05:42,090
你还看什么视频呢

204
00:05:42,090 --> 00:05:44,570
是不是那如果说你是分布式架构了

205
00:05:44,570 --> 00:05:47,810
我们把每一个模块拆出来之后

206
00:05:47,810 --> 00:05:48,330
记住

207
00:05:48,330 --> 00:05:50,050
每一个模块拆出来之后

208
00:05:50,050 --> 00:05:51,370
当我们压力大的时候

209
00:05:51,370 --> 00:05:54,250
你只是评论的服务坏了

210
00:05:54,250 --> 00:05:54,610
哎

211
00:05:54,610 --> 00:05:56,290
你评论的服务坏了

212
00:05:56,290 --> 00:05:57,210
是不是啊

213
00:05:57,210 --> 00:05:58,930
你看视频服务没坏吧

214
00:05:58,930 --> 00:05:59,450
所以说呢

215
00:05:59,450 --> 00:06:01,050
这就是分布式架构

216
00:06:01,050 --> 00:06:03,890
非常非常明显的一个特点

217
00:06:03,890 --> 00:06:04,850
明白没有啊

218
00:06:04,850 --> 00:06:06,970
就是说你评论不能不能不能评论

219
00:06:06,970 --> 00:06:07,850
那个服务坏了

220
00:06:07,850 --> 00:06:09,090
但是我别的部分还是好的

221
00:06:09,090 --> 00:06:11,890
这就是我们把一个整体完整的一个系统

222
00:06:11,890 --> 00:06:15,010
我们按照业务功能拆成一个一个独立的子

223
00:06:15,010 --> 00:06:17,130
系统的一个最大的一个优点

224
00:06:17,130 --> 00:06:17,810
并且呢

225
00:06:17,810 --> 00:06:19,090
服务和服务之间

226
00:06:19,090 --> 00:06:22,890
他们通过RPC远程调用的这种方式呢

227
00:06:22,890 --> 00:06:23,930
来进行通讯的

228
00:06:23,930 --> 00:06:25,530
这就是分布式架构

229
00:06:25,530 --> 00:06:26,450
它的优势呢

230
00:06:26,450 --> 00:06:27,090
有几点

231
00:06:27,090 --> 00:06:27,810
第一个

232
00:06:27,810 --> 00:06:29,130
那集群和集群之间

233
00:06:29,130 --> 00:06:30,410
偶合度大大的净低了

234
00:06:30,410 --> 00:06:30,810
并且呢

235
00:06:30,810 --> 00:06:32,690
你看我们是不是可以独立开发了

236
00:06:32,690 --> 00:06:33,250
是不是啊

237
00:06:33,250 --> 00:06:34,370
比如说这个项目部啊

238
00:06:34,370 --> 00:06:35,530
这几个人他又开发呢

239
00:06:35,530 --> 00:06:38,530
他开发这个这个叫用户服务

240
00:06:38,530 --> 00:06:39,970
那这几个人开发订单服务

241
00:06:39,970 --> 00:06:41,130
这几个人开发商品服务

242
00:06:41,130 --> 00:06:41,730
是不是

243
00:06:41,730 --> 00:06:42,250
是不是可以看

244
00:06:42,250 --> 00:06:43,090
是不是可以做到什么

245
00:06:43,090 --> 00:06:44,930
偶合度大大的降低了

246
00:06:44,930 --> 00:06:45,650
独立开发

247
00:06:45,650 --> 00:06:46,330
独立部署

248
00:06:46,330 --> 00:06:47,930
独立测试是不是

249
00:06:47,930 --> 00:06:48,370
并且呢

250
00:06:48,370 --> 00:06:50,330
边界还非常的清晰

251
00:06:50,330 --> 00:06:51,490
排错也简单了

252
00:06:51,490 --> 00:06:52,690
开发效率也提高了

253
00:06:52,690 --> 00:06:54,170
好处大大的是不是

254
00:06:54,170 --> 00:06:54,850
那第二个呢

255
00:06:54,850 --> 00:06:56,930
就是我们这个系统之间的偶合度

256
00:06:56,930 --> 00:06:57,370
变低了

257
00:06:57,370 --> 00:06:58,330
变低之后呢

258
00:06:58,330 --> 00:06:59,050
我们这个系统

259
00:06:59,050 --> 00:07:00,690
它是不是易于拓展

260
00:07:00,690 --> 00:07:01,490
没问题吧

261
00:07:01,490 --> 00:07:02,170
那第三个呢

262
00:07:02,170 --> 00:07:04,250
我们这个系统的复用性比较高

263
00:07:04,250 --> 00:07:06,210
那比如说我们这个系统里边

264
00:07:06,210 --> 00:07:07,530
有一个什么服务

265
00:07:07,530 --> 00:07:08,530
用户服务

266
00:07:08,530 --> 00:07:09,010
但是呢

267
00:07:09,010 --> 00:07:10,410
这个这个项目假如假如说

268
00:07:10,410 --> 00:07:11,490
我们叫生成项目

269
00:07:11,490 --> 00:07:11,770
但是呢

270
00:07:11,770 --> 00:07:13,730
我又想开发一个关于桥梁

271
00:07:13,730 --> 00:07:14,770
关于法院的项目

272
00:07:14,770 --> 00:07:15,250
但是呢

273
00:07:15,250 --> 00:07:17,570
我还是要用这个相同的用户服务

274
00:07:17,570 --> 00:07:19,010
我也可以借用一下

275
00:07:19,010 --> 00:07:20,050
也可以拿过去用

276
00:07:20,050 --> 00:07:20,770
这叫什么呢

277
00:07:20,770 --> 00:07:23,130
这就叫复用性更高了

278
00:07:23,130 --> 00:07:25,010
就是我们之前的服务的某一个模块

279
00:07:25,010 --> 00:07:26,610
但是我在别的服务里面也要用

280
00:07:26,610 --> 00:07:29,450
我是不是可以无需重复开发了

281
00:07:29,450 --> 00:07:30,490
这就叫什么呢

282
00:07:30,490 --> 00:07:31,770
分布式架构

283
00:07:31,770 --> 00:07:33,410
是不是好处多多呀

284
00:07:33,410 --> 00:07:34,610
带来的麻烦呢

285
00:07:34,610 --> 00:07:35,170
也有啊

286
00:07:35,170 --> 00:07:36,690
不能说它完全没有麻烦

287
00:07:36,690 --> 00:07:38,690
我们之前如果是单机的话

288
00:07:38,690 --> 00:07:39,930
我们要去部署的话

289
00:07:39,930 --> 00:07:42,570
我们是不是直接把我的项目打成war包

290
00:07:42,570 --> 00:07:45,090
往这个应用程序里边一搭啊

291
00:07:45,090 --> 00:07:46,050
一扔是吧

292
00:07:46,050 --> 00:07:47,930
一起动tomcat，啊齐活了

293
00:07:47,930 --> 00:07:49,450
我们这个项目就部署好了

294
00:07:49,450 --> 00:07:52,290
但是如果说我们变成这种分布式架构的

295
00:07:52,290 --> 00:07:52,530
哎

296
00:07:52,530 --> 00:07:55,210
你看我们这个服务是不是变多了

297
00:07:55,210 --> 00:07:55,890
是不是

298
00:07:55,890 --> 00:07:58,770
而且服务和服务之间还要通过RPC通讯

299
00:07:58,770 --> 00:07:59,130
当然了

300
00:07:59,130 --> 00:08:00,610
肯定还是有一些中间件的

301
00:08:00,610 --> 00:08:01,290
是不是

302
00:08:01,290 --> 00:08:02,090
那你要保证

303
00:08:02,090 --> 00:08:04,010
比如说消息的一致性啊

304
00:08:04,010 --> 00:08:04,810
消息的一致性

305
00:08:04,810 --> 00:08:06,890
比如说你们之间要传递消息怎么传

306
00:08:06,890 --> 00:08:07,570
所以说呢

307
00:08:07,570 --> 00:08:08,890
这个还是挺麻烦的

308
00:08:08,890 --> 00:08:10,650
这就是他的一些麻烦事儿

309
00:08:10,650 --> 00:08:11,530
我们来看一下吧

310
00:08:11,530 --> 00:08:13,730
这三者之间的一个区别说这么多呢

311
00:08:13,730 --> 00:08:16,130
现在小伙伴啊你对这个分布式架构

312
00:08:16,130 --> 00:08:18,610
肯定有一个初步的一个认识

313
00:08:18,610 --> 00:08:21,890
那我们从今天从Zookeeper这节课开始

314
00:08:21,890 --> 00:08:23,090
就是一个分水岭了

315
00:08:23,090 --> 00:08:29,250
你从今天这节课往后学习的所有内容都是开始学习分布式的东西了

316
00:08:29,250 --> 00:08:31,970
你之前的都称它为是单机集群的

317
00:08:31,970 --> 00:08:33,450
从今天Zookeeper之后

318
00:08:33,450 --> 00:08:35,850
我们就叫分布式的架构了

319
00:08:35,850 --> 00:08:40,530
我们把我们之前的所有项目由一个完整的系统拆成多个明白没有

320
00:08:40,530 --> 00:08:43,290
那如果说你还是体会不到他们之间的好处

321
00:08:43,290 --> 00:08:45,090
我再给大家打一个比方

322
00:08:45,090 --> 00:08:47,570
来看看他们三者的一个区别

323
00:08:47,570 --> 00:08:50,730
假如说我们这三个这个集群特点的

324
00:08:50,730 --> 00:08:52,450
我们根据这三个集群特点呢

325
00:08:52,450 --> 00:08:55,370
我们都在开开一家饭馆

326
00:08:55,370 --> 00:08:58,530
那如果说是一个单机的是吧

327
00:08:58,530 --> 00:08:59,570
那单机的架构

328
00:08:59,570 --> 00:09:00,930
他只有一台服务器吗

329
00:09:00,930 --> 00:09:01,090
哎

330
00:09:01,090 --> 00:09:02,770
就只有一个厨师啊

331
00:09:02,770 --> 00:09:03,770
可以这么去理解

332
00:09:03,770 --> 00:09:08,610
那你那你这个这家饭店的你所要经营你的洗菜切菜炒菜

333
00:09:08,610 --> 00:09:11,290
招呼客人结账算账

334
00:09:11,290 --> 00:09:11,570
哎

335
00:09:11,570 --> 00:09:15,330
比如说最后进菜就这个活全是你的明白没有

336
00:09:15,330 --> 00:09:16,970
你是不是就忙不过来了呀

337
00:09:16,970 --> 00:09:17,130
哎

338
00:09:17,130 --> 00:09:17,970
你忙不过来了

339
00:09:17,970 --> 00:09:19,450
你忙不过来怎么办呢

340
00:09:19,450 --> 00:09:19,610
哎

341
00:09:19,610 --> 00:09:22,970
你说了这就是单点架构的一个缺陷啊

342
00:09:22,970 --> 00:09:24,970
就是单机架构的一个缺陷

343
00:09:24,970 --> 00:09:26,290
我一台计算机忙不过来了

344
00:09:26,290 --> 00:09:27,730
我变成集群呗多个呗

345
00:09:27,730 --> 00:09:28,050
大家注意

346
00:09:28,050 --> 00:09:29,690
你看这变成第二个了

347
00:09:29,690 --> 00:09:29,810
哎

348
00:09:29,810 --> 00:09:31,210
我变成集群的了

349
00:09:31,210 --> 00:09:32,170
那集群的意思是什么

350
00:09:32,170 --> 00:09:33,410
我有多个厨师了

351
00:09:33,410 --> 00:09:34,090
这就叫集群

352
00:09:34,090 --> 00:09:34,770
大家记住啊

353
00:09:34,770 --> 00:09:35,530
多个厨师

354
00:09:35,530 --> 00:09:36,250
这三个厨师呢

355
00:09:36,250 --> 00:09:37,650
干的是相同的活

356
00:09:37,650 --> 00:09:40,170
这三个厨师就称作为是一个集群

357
00:09:40,170 --> 00:09:40,890
明白没有

358
00:09:40,890 --> 00:09:42,570
这就是一些专业的术语

359
00:09:42,570 --> 00:09:44,010
那你变成一个集群之后呢

360
00:09:44,010 --> 00:09:47,410
以前是一个人做切菜炒菜配料

361
00:09:47,410 --> 00:09:49,410
接待客人招待传菜是吧

362
00:09:49,410 --> 00:09:50,130
上菜等等

363
00:09:50,130 --> 00:09:51,370
他一个人干的活

364
00:09:51,370 --> 00:09:52,770
现在变成集群的时候呢

365
00:09:52,770 --> 00:09:54,450
你稍微也可以缓解压力

366
00:09:54,450 --> 00:09:55,050
是不是

367
00:09:55,050 --> 00:09:58,370
那变成三个厨师去解决这些问题了

368
00:09:58,370 --> 00:09:59,130
但是呢

369
00:09:59,130 --> 00:10:01,250
随着这个用户量更大的时候

370
00:10:01,250 --> 00:10:03,170
你看我们现在变成了什么呢

371
00:10:03,170 --> 00:10:04,210
大酒店了啊

372
00:10:04,210 --> 00:10:05,650
那如果是个大酒店的话

373
00:10:05,650 --> 00:10:07,170
人更多的时候

374
00:10:07,170 --> 00:10:09,330
那你自己再继续配厨师吗

375
00:10:09,330 --> 00:10:10,010
也不显然

376
00:10:10,010 --> 00:10:12,930
我们是不是可以通过分布式架构了

377
00:10:12,930 --> 00:10:14,130
这就叫分布式了

378
00:10:14,130 --> 00:10:17,610
就是我们有会计专门干会计的一个服务啊

379
00:10:17,610 --> 00:10:18,210
服务人员

380
00:10:18,210 --> 00:10:19,610
我们有专门的服务员

381
00:10:19,610 --> 00:10:21,890
有专门的配菜的洗菜的炒菜的

382
00:10:21,890 --> 00:10:22,650
是不是

383
00:10:22,650 --> 00:10:25,410
那比如说那我已经比如说

384
00:10:25,410 --> 00:10:27,170
假如说在这个分布架构里边

385
00:10:27,170 --> 00:10:29,770
这个炒菜的有两个人

386
00:10:29,770 --> 00:10:31,530
那则称为什么呢

387
00:10:31,530 --> 00:10:33,650
这两个炒菜的是一个集群

388
00:10:33,650 --> 00:10:35,930
整体的是一个分布式架构

389
00:10:35,930 --> 00:10:36,850
能明白没有

390
00:10:36,850 --> 00:10:37,410
所以说呢

391
00:10:37,410 --> 00:10:39,090
这就叫分布式架构

392
00:10:39,090 --> 00:10:40,010
非常简单吧

393
00:10:40,010 --> 00:10:43,090
就是其实老师可以给你们总结一句话

394
00:10:43,090 --> 00:10:45,690
就可以说清楚到底什么是集群

395
00:10:45,690 --> 00:10:47,370
什么是分布式

396
00:10:47,370 --> 00:10:49,170
你们以后就明白了

397
00:10:49,170 --> 00:10:49,770
集群呢

398
00:10:49,770 --> 00:10:53,490
我们称它为是好多个人干的是同一件事

399
00:10:53,490 --> 00:10:57,490
你看比如说我们从单机的变成了集群的了

400
00:10:57,490 --> 00:11:01,410
那是不是就从是不是你看一个人变成了好多人的时候

401
00:11:01,410 --> 00:11:03,570
但是这么多人他们干的都是相同的工作

402
00:11:03,570 --> 00:11:04,850
明白没有都是炒菜

403
00:11:04,850 --> 00:11:07,370
洗菜切菜配料等等等等啊

404
00:11:07,370 --> 00:11:08,770
他们干的都是相同的工作

405
00:11:08,770 --> 00:11:09,650
这就叫集群

406
00:11:09,650 --> 00:11:10,570
明白没有

407
00:11:10,570 --> 00:11:12,610
那如果什么是分布式呢

408
00:11:12,610 --> 00:11:14,290
就是好多人在一起干活

409
00:11:14,290 --> 00:11:16,050
但是啊他们干的是不同的工作

410
00:11:16,050 --> 00:11:17,850
你看这个会计啊

411
00:11:17,850 --> 00:11:18,370
大家注意啊

412
00:11:18,370 --> 00:11:19,358
这个会计

413
00:11:20,122 --> 00:11:22,482
他干的是他会计的工作是吧

414
00:11:22,482 --> 00:11:25,362
服务员他干的是招待客人的工作

415
00:11:25,362 --> 00:11:26,722
那配菜他就只干配菜

416
00:11:26,722 --> 00:11:27,722
洗菜只干洗菜

417
00:11:27,722 --> 00:11:29,082
炒菜只干炒菜

418
00:11:29,082 --> 00:11:29,682
明白没有

419
00:11:29,682 --> 00:11:31,882
那你看洗菜不洗了

420
00:11:31,882 --> 00:11:33,362
他能影响到别人吗

421
00:11:33,362 --> 00:11:34,642
他不能影响到别人

422
00:11:34,642 --> 00:11:35,202
是不是

423
00:11:35,202 --> 00:11:37,162
但是如果说你这个服务员你不干了

424
00:11:37,162 --> 00:11:38,482
这个饭店还能运行吗

425
00:11:38,482 --> 00:11:40,042
运行不了没人了吗

426
00:11:40,042 --> 00:11:40,762
明白没有

427
00:11:40,762 --> 00:11:44,562
这就叫集群和我们分布式的一个区别

428
00:11:44,562 --> 00:11:45,282
OK

429
00:11:45,282 --> 00:11:45,922
那这节课呢

430
00:11:45,922 --> 00:11:48,522
给大家了解了一下什么叫集群

431
00:11:48,522 --> 00:11:49,642
什么叫分布式

432
00:11:49,642 --> 00:11:51,722
我们到这呢就已经结束了

433
00:11:51,722 --> 00:11:53,162
相信小伙伴呢在心里呢

434
00:11:53,162 --> 00:11:55,162
已经对这个分布式啊

435
00:11:55,162 --> 00:11:56,362
有了一定的概念了

436
00:11:56,362 --> 00:11:57,362
在结论之前呢

437
00:11:57,362 --> 00:11:59,322
我们再做两个练习题

438
00:11:59,322 --> 00:12:00,082
第一个啊

439
00:12:00,082 --> 00:12:04,562
下列不是描述单机架构瓶颈的是单机架构

440
00:12:04,562 --> 00:12:05,282
它有什么瓶颈

441
00:12:05,282 --> 00:12:07,202
第一个服务性能

442
00:12:07,202 --> 00:12:08,722
第二个单点故障问题

443
00:12:08,722 --> 00:12:09,362
哎没问题

444
00:12:09,362 --> 00:12:10,682
肯定是这个单点故障

445
00:12:10,682 --> 00:12:11,802
因为你是单机架构的话

446
00:12:11,802 --> 00:12:13,442
肯定有这种单点故障的这种问题

447
00:12:13,442 --> 00:12:14,122
是不是啊

448
00:12:14,122 --> 00:12:15,042
那第二个呢

449
00:12:15,042 --> 00:12:18,282
呃下列描述这个分布式架构正确的是什么

450
00:12:18,282 --> 00:12:19,042
第一个

451
00:12:19,042 --> 00:12:22,002
这个代码部署在多台服务器上啊

452
00:12:22,002 --> 00:12:25,282
嗯并为其提一个整体提供了一类服务

453
00:12:25,282 --> 00:12:27,882
第二个所有的代码都在一个项目里面

454
00:12:27,882 --> 00:12:29,002
这肯定不是是吧

455
00:12:29,002 --> 00:12:32,722
那多个相同的子系统在不同的服务器上

456
00:12:32,722 --> 00:12:35,122
哎肯定是这个是不是啊

457
00:12:35,122 --> 00:12:36,842
就多个相同哎不对啊

458
00:12:36,842 --> 00:12:38,442
这是多个相同的子系统

459
00:12:38,442 --> 00:12:39,642
这肯定是一个集群的

460
00:12:39,642 --> 00:12:40,482
明白没有

461
00:12:40,482 --> 00:12:43,362
第四个呢是将一套系统插连成不同的子系统

462
00:12:43,362 --> 00:12:45,562
并且部署在不同的服务器上

463
00:12:45,562 --> 00:12:46,922
这就是什么呢

464
00:12:46,922 --> 00:12:48,922
分布式架构就是不同

465
00:12:48,922 --> 00:12:50,522
将一套服务插上不同的子系统

466
00:12:50,522 --> 00:12:52,042
但是部署在不同的服务器上

467
00:12:52,042 --> 00:12:53,082
这就叫分布式

468
00:12:53,082 --> 00:12:55,722
所以说呢第二题啊我们应该选择的是D

469
00:12:55,722 --> 00:12:56,402
选择的是D

470
00:12:56,402 --> 00:12:57,002
好了

471
00:12:57,002 --> 00:12:59,762
那这节课呢我们聊我们讲解这个集群啊

472
00:12:59,762 --> 00:13:03,002
讲解这个呃分布式啊到这就结束了

473
00:13:03,002 --> 00:13:04,286
谢谢大家

