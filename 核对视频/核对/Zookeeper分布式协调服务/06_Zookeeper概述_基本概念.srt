1
00:00:00,058 --> 00:00:01,498
Hello 小伙伴大家好

2
00:00:01,498 --> 00:00:05,178
这节课我们来学习Rookieper的一些基本概念

3
00:00:05,178 --> 00:00:07,338
那我们通过一些基本概念

4
00:00:07,338 --> 00:00:11,058
我们来开始慢慢的走入到Rookieper的一个世界

5
00:00:11,058 --> 00:00:12,578
首先第一个我们再说一遍

6
00:00:12,578 --> 00:00:13,938
什么是Rookieper呢

7
00:00:13,938 --> 00:00:17,418
Rookieper它等于文件系统加监听机制

8
00:00:17,418 --> 00:00:18,698
就是你可以把它理解为

9
00:00:18,698 --> 00:00:23,058
就是Rookieper它可以保存一些文件信息

10
00:00:23,058 --> 00:00:25,098
以及还有一个监听的机制

11
00:00:25,098 --> 00:00:27,058
我们主要看这两个功能就可以了

12
00:00:27,058 --> 00:00:29,418
第一个就是集群角色

13
00:00:29,418 --> 00:00:31,498
我们说Rookieper它是分布式的

14
00:00:31,498 --> 00:00:35,018
但是通常在分布式的一个系统架构中

15
00:00:35,018 --> 00:00:37,694
就是每一个集群的每一台机器

16
00:00:37,694 --> 00:00:39,002
< No Speech >

17
00:00:39,002 --> 00:00:41,002
它都是有角色的是不是

18
00:00:41,002 --> 00:00:42,922
我们在之前我们也一直学习什么呢

19
00:00:42,922 --> 00:00:43,762
Master

20
00:00:43,762 --> 00:00:46,162
Master节点以及Sleep的这种方式

21
00:00:46,162 --> 00:00:47,642
就是主辈的这种模式

22
00:00:47,642 --> 00:00:49,402
我们之前一直在学习

23
00:00:49,402 --> 00:00:51,362
比如说我们的Redis

24
00:00:51,362 --> 00:00:53,482
它就有主节点和从节点

25
00:00:53,482 --> 00:00:55,442
但是在我们Rookable中

26
00:00:55,442 --> 00:00:56,322
它有什么呢

27
00:00:56,322 --> 00:00:59,802
它不是通过Master和Sleep这种方式

28
00:00:59,802 --> 00:01:03,242
就是它不是通过主辈的这种方式去走的

29
00:01:03,242 --> 00:01:04,602
那Rookable它是通过什么呢

30
00:01:04,602 --> 00:01:05,922
我们可以看到这张图

31
00:01:05,922 --> 00:01:08,722
比如说我们有一台两台三台四台

32
00:01:08,722 --> 00:01:09,310
五台

33
00:01:10,074 --> 00:01:13,434
那有5台Rookable,那它的角色是什么呢?

34
00:01:13,434 --> 00:01:17,714
不是Master和Slave了,不是主节点和备用节点了

35
00:01:17,714 --> 00:01:22,514
所以说呢,在Rookable中,这些概念我们被彻底的颠覆了

36
00:01:22,514 --> 00:01:27,034
就是它没有沿用之前传统的这种主和备的这种概念

37
00:01:27,034 --> 00:01:28,670
而是引入了一个什么呢?

38
00:01:28,670 --> 00:01:30,490
< No Speech >

39
00:01:30,490 --> 00:01:32,126
follower就是我们的

40
00:01:32,126 --> 00:01:33,242
< No Speech >

41
00:01:33,242 --> 00:01:35,922
领导老板boss是吧

42
00:01:35,922 --> 00:01:37,682
随从者小弟

43
00:01:37,682 --> 00:01:39,402
狗仔等等

44
00:01:39,402 --> 00:01:41,242
以及OB server

45
00:01:41,242 --> 00:01:43,562
三种角色构成的

46
00:01:43,562 --> 00:01:45,922
那你说我们肯定是有一个什么

47
00:01:46,282 --> 00:01:47,522
有一个leader

48
00:01:47,522 --> 00:01:48,562
有一个领导者

49
00:01:48,562 --> 00:01:50,642
那你说在公司里边领导的不能太多

50
00:01:50,642 --> 00:01:51,362
不然就乱套了

51
00:01:51,362 --> 00:01:51,802
是不是

52
00:01:51,802 --> 00:01:54,162
那在整个rookieper的集群中

53
00:01:54,162 --> 00:01:55,722
我们也可以把它分为有什么

54
00:01:55,962 --> 00:01:57,202
有三个角色

55
00:01:57,202 --> 00:01:58,802
这么多舞台里边

56
00:01:58,802 --> 00:02:00,642
有一个是领导者

57
00:02:00,642 --> 00:02:01,602
就是leader

58
00:02:01,602 --> 00:02:02,482
leader

59
00:02:02,482 --> 00:02:04,402
那你说别人都是什么

60
00:02:04,642 --> 00:02:06,202
把它可以理解为就是follow

61
00:02:06,202 --> 00:02:07,722
就是随从者

62
00:02:07,922 --> 00:02:12,882
Obs这个角色很少会出现

63
00:02:12,882 --> 00:02:13,162
为什么

64
00:02:13,402 --> 00:02:16,602
因为他是一个弱化版的随从者

65
00:02:16,602 --> 00:02:19,482
就是他比小弟还要再小一点

66
00:02:20,042 --> 00:02:20,442
为什么

67
00:02:20,682 --> 00:02:24,122
是因为他的角色其实是想要干嘛

68
00:02:24,242 --> 00:02:26,642
就是不影响我们集群事务的前提

69
00:02:26,922 --> 00:02:28,722
提高我们整个集群的一个吞吐量

70
00:02:28,722 --> 00:02:30,242
而做的一个角色

71
00:02:30,642 --> 00:02:31,722
OK 我们来继续

72
00:02:31,722 --> 00:02:33,682
但是我们来看的第一个就是

73
00:02:33,682 --> 00:02:34,922
集群角色里边

74
00:02:34,922 --> 00:02:35,722
我们要颠覆一下

75
00:02:35,722 --> 00:02:36,322
你的认知

76
00:02:36,322 --> 00:02:37,322
不是masters

77
00:02:37,322 --> 00:02:38,562
例如主辈的模式了

78
00:02:38,562 --> 00:02:39,518
而变成了

79
00:02:40,410 --> 00:02:43,250
啊 说领导者和随从者的模式

80
00:02:43,250 --> 00:02:45,250
这是第一个我们要讲的一个概念

81
00:02:45,250 --> 00:02:46,010
第二个呢

82
00:02:46,010 --> 00:02:49,650
这个我们要说的是这个数据节点

83
00:02:49,650 --> 00:02:51,890
就是我们谈到这个分布式的时候

84
00:02:51,890 --> 00:02:54,730
我们是不是通常说节点它指的是什么呢

85
00:02:54,730 --> 00:02:57,250
指的是集群里面的一个机器

86
00:02:57,250 --> 00:02:57,850
但是呢

87
00:02:57,850 --> 00:02:59,170
在rootkeeper里边

88
00:02:59,170 --> 00:03:01,330
这个节点呢有两个含义啊

89
00:03:01,330 --> 00:03:02,290
就有两个含义

90
00:03:02,290 --> 00:03:02,890
那第一个呢

91
00:03:02,890 --> 00:03:04,410
我们指的就是机器啊

92
00:03:04,410 --> 00:03:05,210
其实第一个呢

93
00:03:05,210 --> 00:03:05,930
我们指的就是机器

94
00:03:05,930 --> 00:03:06,530
那第二个呢

95
00:03:06,530 --> 00:03:07,410
我们指的是什么呢

96
00:03:07,410 --> 00:03:10,050
数据模型里面的数据单元

97
00:03:10,050 --> 00:03:10,450
我们呢

98
00:03:10,450 --> 00:03:13,690
也称它为是一个节点叫Znode

99
00:03:13,690 --> 00:03:14,090
大家呢

100
00:03:14,090 --> 00:03:16,010
可以看到我们上面的这张图啊

101
00:03:16,010 --> 00:03:18,250
这张图你看我们有一个斜杠

102
00:03:18,250 --> 00:03:19,010
斜杠APP

103
00:03:19,010 --> 00:03:19,770
斜杠APP2

104
00:03:19,770 --> 00:03:22,250
以及斜杠APP1里面有个ABC

105
00:03:22,250 --> 00:03:22,770
是不是啊

106
00:03:22,770 --> 00:03:23,930
我们可以把这张图

107
00:03:23,930 --> 00:03:26,770
是不是可以想象成它就像有点像

108
00:03:26,770 --> 00:03:28,050
你把它倒过来的话

109
00:03:28,050 --> 00:03:29,970
把这张图你倒个180度之后

110
00:03:29,970 --> 00:03:32,330
你是不是说是不是有点像数据模型的

111
00:03:32,330 --> 00:03:33,890
那个数的那个概念

112
00:03:33,890 --> 00:03:34,410
是不是啊

113
00:03:34,410 --> 00:03:35,410
而且呢

114
00:03:35,410 --> 00:03:36,690
这个rootkeeper的数据呢

115
00:03:36,690 --> 00:03:38,690
都是保存在内存中的啊

116
00:03:38,690 --> 00:03:39,730
都是保存在内存上的

117
00:03:39,730 --> 00:03:40,530
并且呢

118
00:03:40,530 --> 00:03:44,930
我们会发现这个数据节点就是每一个节点

119
00:03:44,930 --> 00:03:49,530
记住每一棵树可以把它想象成每一个树里面的每一个这个节点

120
00:03:49,530 --> 00:03:52,570
把它想象成就是苹果树里面的那个苹果

121
00:03:52,570 --> 00:03:54,010
但是苹果可以干嘛呢

122
00:03:54,010 --> 00:03:55,530
这个节点里边可以干嘛呢

123
00:03:55,530 --> 00:03:57,370
这个节点里边可以保存数据

124
00:03:57,370 --> 00:03:59,530
就我们之前所介绍应用场景的时候呢

125
00:03:59,530 --> 00:04:02,450
我们要保存一个配置中心的一个文件内容

126
00:04:02,450 --> 00:04:03,130
这个内容呢

127
00:04:03,130 --> 00:04:04,730
我们就可以写到这个节点里边

128
00:04:04,730 --> 00:04:06,330
但是这个节点叫什么名字呢

129
00:04:06,330 --> 00:04:08,330
就叫这个斜杠APP

130
00:04:08,330 --> 00:04:10,730
它的这个为什么叫斜杠APP

131
00:04:10,730 --> 00:04:12,610
因为跟路径是斜杠嘛

132
00:04:12,610 --> 00:04:15,970
在他们和这个Linux的那个文件系统有点相似

133
00:04:15,970 --> 00:04:17,730
跟路径都叫斜杠

134
00:04:17,730 --> 00:04:19,330
那既然说我们是斜杠下边的

135
00:04:19,330 --> 00:04:20,730
那肯定就是斜杠APP

136
00:04:20,730 --> 00:04:21,810
斜杠APP2嘛

137
00:04:21,810 --> 00:04:22,410
仅此而已

138
00:04:22,410 --> 00:04:24,170
就我们说这个数据节点呢

139
00:04:24,170 --> 00:04:25,050
我们有两三含义

140
00:04:25,050 --> 00:04:26,570
这是在rootkeeper里边

141
00:04:26,570 --> 00:04:27,130
OK

142
00:04:27,130 --> 00:04:29,370
我来看第三个这个water

143
00:04:29,370 --> 00:04:31,570
就是监听的这个机制

144
00:04:31,570 --> 00:04:32,970
那我们要学习这个rootkeeper呢

145
00:04:32,970 --> 00:04:34,250
它还有一个非常重要的功能

146
00:04:34,250 --> 00:04:36,290
就是监听的这个功能

147
00:04:36,290 --> 00:04:38,450
我们之前在讲这个rootkeeper它的一个什么呢

148
00:04:38,450 --> 00:04:41,450
它的一个应用场景的第一个啊

149
00:04:41,450 --> 00:04:42,090
非常的清楚

150
00:04:42,090 --> 00:04:45,330
应用场景的第一个这个监听的这个功能就非常的重要了

151
00:04:45,330 --> 00:04:46,010
什么意思呢

152
00:04:46,010 --> 00:04:49,570
就比如说我要做一个动态的配置文件切换

153
00:04:49,570 --> 00:04:50,130
是不是啊

154
00:04:50,130 --> 00:04:51,050
那如果说啊

155
00:04:51,050 --> 00:04:53,690
如果说我我这个client我在启动的时候呢

156
00:04:53,690 --> 00:04:56,330
我是从rootkeeper里获取的一个配置文件的数据

157
00:04:56,330 --> 00:04:58,330
当我这个client在启动的时候呢

158
00:04:58,330 --> 00:05:02,250
我就从rootkeeper里面去获取我们mySQL的一个配置文件

159
00:05:02,250 --> 00:05:02,930
然后呢

160
00:05:02,930 --> 00:05:03,250
呃

161
00:05:03,250 --> 00:05:05,970
我获取到这个这个mySQL的一个IP地址之后呢

162
00:05:05,970 --> 00:05:08,330
我是去连接那个mySQL去做一些操作

163
00:05:08,330 --> 00:05:08,930
但是呢

164
00:05:08,930 --> 00:05:11,290
当我们要切换mySQL数据库的时候呢

165
00:05:11,290 --> 00:05:12,890
我们是不是需要呃

166
00:05:12,890 --> 00:05:14,530
假如说不引入这个监听机制

167
00:05:14,530 --> 00:05:16,890
我是不是得把这个东东停掉

168
00:05:16,890 --> 00:05:17,330
然后呢

169
00:05:17,330 --> 00:05:18,290
改掉以后呢

170
00:05:18,290 --> 00:05:18,730
再编译

171
00:05:18,730 --> 00:05:19,050
再生产

172
00:05:19,050 --> 00:05:19,450
再发布

173
00:05:19,450 --> 00:05:20,450
再运行是不是

174
00:05:20,450 --> 00:05:22,490
但是如果说我们有监听机制之后

175
00:05:22,490 --> 00:05:23,930
这个监听机制呢

176
00:05:23,930 --> 00:05:27,530
就是我们的这个client去监听这个数据

177
00:05:27,530 --> 00:05:29,010
比如说我注册了

178
00:05:29,010 --> 00:05:30,650
我注册我要监听这个节点

179
00:05:30,650 --> 00:05:32,450
比如说是那个mySQL的那个节点

180
00:05:32,450 --> 00:05:34,410
当这个节点发生改变的时候呢

181
00:05:34,410 --> 00:05:37,450
这个rookie本你有什么的通知的这个功能

182
00:05:37,450 --> 00:05:40,410
这就叫监听机制也是非常重要

183
00:05:40,410 --> 00:05:41,570
我们通过这个监听机制呢

184
00:05:41,570 --> 00:05:44,890
可以实现出分布式的很多很多的功能了啊

185
00:05:44,890 --> 00:05:46,450
我们在后续肯定有一个什么呢

186
00:05:46,450 --> 00:05:47,890
非常详细的一个介绍

187
00:05:47,890 --> 00:05:50,250
让大家感受出监听机制

188
00:05:50,250 --> 00:05:54,490
我们一直在说rookie本什么时候给人文件系统加监听机制吗

189
00:05:54,490 --> 00:05:57,170
这就是他非常重要的一个特性

190
00:05:57,170 --> 00:05:57,810
就在这儿

191
00:05:57,810 --> 00:06:01,570
我们的rookie本会主动给客户端推送什么的

192
00:06:01,570 --> 00:06:03,770
到底哪一个数据被修改了啊

193
00:06:03,770 --> 00:06:05,210
这就叫监听机制

194
00:06:05,210 --> 00:06:09,090
我来看最后一个这个叫ACL的一个权限控制

195
00:06:09,090 --> 00:06:10,090
我们的rookie本呢

196
00:06:10,090 --> 00:06:11,450
他也是有权限的

197
00:06:11,450 --> 00:06:13,530
我们之前我们所说的这个rookie本呢

198
00:06:13,530 --> 00:06:14,410
他是有什么呢

199
00:06:14,410 --> 00:06:16,330
zeno的他是有节点数据的

200
00:06:16,330 --> 00:06:17,850
每一个节点呢

201
00:06:17,850 --> 00:06:19,730
你可以把它理解为就是数啊

202
00:06:19,730 --> 00:06:21,770
大数那个苹果是不是里边呢

203
00:06:21,770 --> 00:06:22,690
可以保存数据

204
00:06:22,690 --> 00:06:23,090
但是呢

205
00:06:23,090 --> 00:06:27,730
你这里边保存数据能随意让人更改删除操作吗

206
00:06:27,730 --> 00:06:28,490
修改吗

207
00:06:28,490 --> 00:06:30,130
能随意让别人去改吗

208
00:06:30,130 --> 00:06:31,530
肯定也不能是不是

209
00:06:31,530 --> 00:06:32,770
如果是那样的话

210
00:06:32,770 --> 00:06:33,570
太麻烦了

211
00:06:33,570 --> 00:06:37,490
就是我们在公司里边基本上都是有一个rookie本的集群

212
00:06:37,490 --> 00:06:40,010
好多平台共用一个rookie本的集群

213
00:06:40,010 --> 00:06:41,530
你不可能搭建很多rookie本去

214
00:06:41,530 --> 00:06:42,010
这个时候呢

215
00:06:42,010 --> 00:06:44,650
我们会导致这个数据都在这个rookie本里面保存着呢

216
00:06:44,650 --> 00:06:46,330
你不能去把别人的节点删了

217
00:06:46,330 --> 00:06:46,530
是吧

218
00:06:46,530 --> 00:06:48,370
你不能把别人的配置文件干掉了

219
00:06:48,370 --> 00:06:49,850
或者修改别人的配置文件吧

220
00:06:49,850 --> 00:06:50,930
你总没有权限的

221
00:06:50,930 --> 00:06:51,330
所以说呢

222
00:06:51,330 --> 00:06:52,330
在rookie本里边啊

223
00:06:52,330 --> 00:06:53,570
人家也有这个什么呢

224
00:06:53,570 --> 00:06:57,570
ACL的权限的这个控制的一个什么呢概念啊

225
00:06:57,570 --> 00:06:59,930
就类似于我们这个Linux系统里边的什么呢

226
00:06:59,930 --> 00:07:00,810
权限控制

227
00:07:00,810 --> 00:07:01,770
那我们说

228
00:07:01,770 --> 00:07:03,730
你知不知道这个权限控制无非就是什么呢

229
00:07:03,730 --> 00:07:05,610
它针对于节点啊

230
00:07:05,610 --> 00:07:07,010
比如说你能不能创建节点

231
00:07:07,010 --> 00:07:08,170
你能不能获取节点

232
00:07:08,170 --> 00:07:09,490
以及能不能删除节点

233
00:07:09,490 --> 00:07:10,250
能不能更新节点

234
00:07:10,250 --> 00:07:13,050
能不能设置节点的一个权限等等等等

235
00:07:13,050 --> 00:07:16,090
这就是ACL里边的一个比较重要的一个概念吧

236
00:07:16,090 --> 00:07:17,330
就是这个权限控制

237
00:07:17,330 --> 00:07:18,810
你可以通过这个权限控制呢

238
00:07:18,810 --> 00:07:21,370
可以安全有效的去管理每一个节点了

239
00:07:21,370 --> 00:07:23,290
是不是就不会容易出现一些问题啊

240
00:07:23,290 --> 00:07:23,970
那以上呢

241
00:07:23,970 --> 00:07:26,570
就是我们整个rookie本的一个什么呢

242
00:07:26,570 --> 00:07:27,850
基本的概念啊

243
00:07:27,850 --> 00:07:28,530
基本的概念

244
00:07:28,530 --> 00:07:29,330
我们这节课呢

245
00:07:29,330 --> 00:07:30,530
我们到这就讲完了

246
00:07:30,530 --> 00:07:31,650
在结束之前呢

247
00:07:31,650 --> 00:07:33,650
我们再做两个练习题

248
00:07:33,650 --> 00:07:35,810
第一个这个乳K不呢

249
00:07:35,810 --> 00:07:37,970
他的这个技术啊

250
00:07:37,970 --> 00:07:42,290
采用是什么的这种集训模式就他这个技术才能什么集训模式呢

251
00:07:42,290 --> 00:07:44,170
不肯定不是master加死

252
00:07:44,170 --> 00:07:45,250
六的这种方式啊

253
00:07:45,250 --> 00:07:47,050
也不是这种三道浪的这种方式

254
00:07:47,050 --> 00:07:47,770
他是什么呢

255
00:07:47,770 --> 00:07:50,410
他是later加follower这种方式什么的

256
00:07:50,410 --> 00:07:53,690
领导者加随从者的这种方式明白没有

257
00:07:53,690 --> 00:07:55,690
他不是主辈的这种方式啊

258
00:07:55,690 --> 00:07:57,370
第二个我们这个入gay

259
00:07:57,370 --> 00:08:00,010
不他将所有的数据都是保存到内存中的

260
00:08:00,010 --> 00:08:02,490
那他的数据模型是一个什么呢

261
00:08:02,490 --> 00:08:02,690
哎

262
00:08:02,690 --> 00:08:06,610
就你就可以把这些形成老师说的数据模型就是那个苹果啊

263
00:08:06,610 --> 00:08:08,410
倒过来的那棵树是不是

264
00:08:08,410 --> 00:08:09,010
所以说呢

265
00:08:09,010 --> 00:08:11,250
肯定是选择的是a啊

266
00:08:11,250 --> 00:08:13,090
选择树这个好了

267
00:08:13,090 --> 00:08:13,650
那这节课呢

268
00:08:13,650 --> 00:08:16,090
我们讲解主k的基本概念啊

269
00:08:16,090 --> 00:08:18,090
我们到这呢就已经结束了

270
00:08:18,090 --> 00:08:20,318
我们下节课再见吧

